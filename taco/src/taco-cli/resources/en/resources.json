{
    "CommandCreateDescription": "Create a Cordova project",
    "CommandCreateArgsPath": "Where to create the project",
    "CommandCreateArgsId": "Package ID for the project",
    "CommandCreateArgsName": "Human readable app name",
    "CommandCreateArgsConfig": "json string whose key/values will be included in '[PATH]/.cordova/config.json'",
    "CommandCreateOptionsKit": "Use the specified Cordova Dev Kit for this project rather than the default.  Use \"taco kit list\" to see a list of available Kits.",
    "CommandCreateOptionsTemplate": "Use an alternate project template instead of blank.",
    "CommandCreateOptionsCli": "Use a version of the Cordova CLI rather than a taco Dev Kit.",
    "CommandCreateOptionsCopy": "Use custom www assets instead of using a taco template.",
    "CommandCreateOptionsLinkto": "Symlink to custom www assets without creating a copy.",
    "CommandCreateNotTemplateIfCustomWww": "Error: Cannot specify --template if specifying --copy-from or --link-to",
    "_CommandCreateNotTemplateIfCustomWww.comment": "Error shown when the user tries to create a project while specifying both a taco template (--template) and a custom www folder to use (--copy-from or --copy-to).",
    "CommandCreateNotBothCliAndKit": "Error: Cannot specify both --cli and --kit",
    "_CommandCreateNotBothCliAndKit.comment": "Error shown when the user tries to create a project using both --cli and --kit parameters.",
    "CommandCreateNotBothTemplateAndCli": "Error: The --template option is not supported with the --cli option; use --kit for templates",
    "_CommandCreateNotBothTemplateAndCli.comment": "Error shown when the user tries to create a project using a template (--template), but specifies the --cli parameter.",
    "CommandCreateTemplatesUnavailable": "Error: Unable to access or download templates",
    "_CommandCreateTemplatesUnavailable.comment": "Error reported when templates cannot be downloaded",
    "CommandCreateOnlyLocalCustomWww": "Error: Only local paths for custom www assets are supported.",
    "_CommandCreateOnlyLocalCustomWww.comment": "Error reported when the specified path to the --copy-from or --link-to parameters is a web URL.",
    "CommandCreateInstallGulp": "<br/>Please install gulp and gulp-typescript by following the installation steps listed at <link>https://www.npmjs.com/package/gulp-typescript</link>.<br/><br/>Once installed, run 'gulp typescript' to pre-compile the TS files before building your project.<br/><br/>Once your TS files are pre-compiled, use 'taco build [platform]' to build your project.",
    "_CommandCreateInstallGulp.comment": "Message shown at the end of project creation for typescript projects, asking the user to install gulp and gulp-typescript in order to precompile their typescript files.",
    "CommandCreatePathNotEmpty": "Error: Could not create the project because the specified path already exists and is not empty: {0}",
    "_CommandCreatePathNotEmpty.comment": "Error reported when the specified path at which to create the cordova project is an existing directory and isn't empty. {0} is the path that was given by the user.",
    "CommandCreateNoPath": "Error: A directory name must be specified in order to create a project. See 'taco help create'.",
    "_CommandCreateNoPath.comment": "Error reported when the user runs 'taco create' without providing a path at which to create the project.",
    "CommandCreateInvalidPath": "Error: The specified path is invalid: {0}",
    "_CommandCreateInvalidPath.comment": "Error reported when the specified path at which to create the cordova project has segments that are invalid directory names for the current OS. {0} is the path that was given by the user.",

    "CommandCreateStatusKitIdUsed": "Creating a new Cordova project with name <highlight>{0}</highlight> and id <highlight>{1}</highlight> at location <highlight>{2}</highlight> using Kit <highlight>{3}</highlight>...",
    "_CommandCreateStatusKitIdUsed.comment": "Status message shown while creating a kit based project. {0} is project name, {1} is project id, 2 is the full path where project is created and {3} is the name of the kit used",
    "CommandCreateStatusCordovaCliUsed": "Creating a new Cordova project with name {0} and id {1} at location {2} with Cordova version {3} and no Kit...",
    "_CommandCreateStatusCordovaCliUsed.comment": "Status message shown while creating a cli based project.  {0} is project name, {1} is project id, 2 is the full path where project is created and {3} is the cordova version used ",

    "CommandCreateWarningDeprecatedKit": "<br/>Warning: Kit {0} has been deprecated.<br/>Consider changing your project to use a more recent Kit. For deprecation information, see {fwdLink_toDo}",
    "_CommandCreateWarningDeprecatedKit.comment": "Warning displayed when a deprecated kit is used for project creation. {0} is the name of deprecated kit",

    "CommandCreateSuccessProjectTemplate": "<br/><success>Success!</success> Your project using the {0} is ready for use at <highlight>{1}</highlight>",
    "_CommandCreateSuccessProjectTemplate.comment": "Success message if the project was created using a template. {0} is the display name of the template the project was created with and {1} is the location where project is created",
    "CommandCreateSuccessProjectCustomWww": "<br/><success>Success!</success> Your project using custom assets from {0} is ready for use at <highlight>{1}</highlight>",
    "_CommandCreateSuccessProjectCustomWww.comment": "Success message when the create command succeeds if the project was created using custom www assets. {0} is the path to the custom www assets provided by the user and {1} is the location where project is created.",
    "CommandCreateSuccessProjectCLI": "<br/><success>Success!</success> Your project is ready for use at <highlight>{0}</highlight>",
    "_CommandCreateSuccessProjectCLI.comment": "Success message shown if the project was created using the --cli parameter. {0} is the location of created project",
    "CommandCreateTacoJsonFileCreationError": "Error: Creation of taco.json file failed",
    "_CommandCreateTacoJsonFileCreationError.comment": "This message is displayed when the taco.json file creation fails.",
    "CommandCreateTacoJsonFileWriteError": "Failed to write to {0}",

    "CommandTemplatesDescription": "List available taco templates",
    "_CommandTemplatesDescription.comment": "Description of the 'taco templates' command when the user types 'taco help templates'.",
    "CommandTemplatesHeader": "Available templates:",
    "_CommandTemplatesHeader.comment": "Header at the top of the table showing available templates 'taco templates'.",

    "CommandHelpDescription": "Get help for a command",
    "CommandKitDescription": "Perform kit related operations",
    "_CommandKitDescription.comment": "Description for 'taco kit'",
    "CommandKitJsonOptionDescription": "Used with the 'list' subcommand for 'taco kit'.Saves the list of known kits to a json file with path <PATH>.",
    "_CommandKitJsonOptionDescription.comment": "Description for --json argument to taco kit list",
     "CommandKitSubcommandDescription": "Perform kit related operations (like list)",
    "_CommandKitSubcommandDescription.comment": "Description for the 'COMMAND' argument to 'taco kit'",
    "CommandKitListCurrentKit": "<bold>Current Kit</bold>: {0}",
    "_CommandKitListCurrentKit.comment": "Title for the Currently used kit Id displayed on executing the 'taco kit list' command",
    "CommandKitListDefaultKit": "Default",
    "_CommandKitListDefaultKit.comment": "On executing the 'taco kit list' command, the string is printed alongside the kit name for the default kit ",
    "CommandKitListDefaultDescription": "A toolkit of plugins and platforms that works with Cordova CLI v{0}",
    "_CommandKitListDefaultDescription.comment": "Default description of a kit",
    "CommandKitListDeprecatedKit": "Deprecated",
    "_CommandKitListDeprecatedKit.comment": "On executing the 'taco kit list' command, the string is printed alongside the kit name for a deprecated kit ",
    "CommandKitListCurrentCordovaCli": "<bold>Cordova CLI Version: </bold>{0}",
    "_CommandKitListCurrentCordovaCli.comment": "Title for the Currently used Cordova CLI version displayed on executing the 'taco kit list' command",
     "CommandKitList": "The following kits are available for use:",
    "_CommandKitList.comment": "Header for the list of kits displayed on executing the 'taco kit list' command",
     "CommandKitListCordovaCliForKit":"<bold>Cordova CLI: </bold>{0}",
    "_CommandKitListCordovaCliForKit.comment": "Title for the Cordova CLI version for a kit displayed on executing the 'taco kit list' command",
     "CommandKitListPlatformOverridesForKit": "<bold>Platforms: </bold>",
    "_CommandKitListPlatformOverridesForKit.comment": "Header for the list of platform overrides for a kit displayed on executing the 'taco kit list' command",
     "CommandKitListPluginOverridesForKit": "<bold>Plugins: </bold>",
    "_CommandKitListPluginOverridesForKit.comment": "Header for the list of plugin overrides for a kit displayed on executing the 'taco kit list' command",
     "CommandKitListJsonFileStatus": "<success>Success!</success> Kit metadata file is saved at <highlight>{0}</highlight>",
    "_CommandKitListJsonFileStatus.comment": "Status indicating that the json file has been successfully written to {0}",

    "CommandSetupDescription": "Configure remote builds",
    "_CommandSetupDescription.comment": "Description for 'taco setup remote'",
    "CommandSetupOptionsPlatform": "The platform that you wish to configure remote builds for",
    "_CommandSetupOptionsPlatform.comment": "Description of the PLATFORM argument",
    "CommandSetupOptionsRemove": "Remove the specified platform",
    "_CommandSetupOptionsRemove.comment": "Description of the --remove argument to 'taco setup remote --remove'",
    "CommandSetupOptionsList": "List currently configured platforms",
    "_CommandSetupOptionsList.comment": "Description of the --list argument to 'taco setup remote --list'",
    "CommandSetupRemoteHeader": "Please ensure that remotebuild is running on the remote server.<br/> You can generate new client information at any time by typing remotebuild generateClientCert. For more details, see <fwlink goes here>",
    "_CommandSetupRemoteHeader.comment": "Message printed to console when running taco setup remote",
    "CommandSetupRemoteQueryHost": "Remote host name / IP address: ",
    "_CommandSetupRemoteQueryHost.comment": "Query asking the user to enter the host name or IP address of the remote server",
    "CommandSetupRemoteQueryPort": "Port number: ",
    "_CommandSetupRemoteQueryPort.comment": "Query asking the user to enter the port number of the remote server",
    "CommandSetupRemoteQueryPin": "PIN (leave blank for insecure servers): ",
    "CommandSetupRemoteInvalidPort": "Invalid port '{0}': ports must be integers greater than 0 and less than 65536",
    "_CommandSetupRemoteInvalidPort.comment": "Message printed when an invalid port is specified. {0} is the value the user entered",
    "CommandSetupRemoteInvalidPin": "Invalid PIN '{0}': PINs are 6 digit integers",
    "_CommandSetupRemoteInvalidPin.comment": "Message printed when an invalid pin is specified. {0} is the value the user entered",
    "CommandSetupRemoteRejectedPin": "Unable to use PIN to pair with remote build server: PIN was rejected",
    "_CommandSetupRemoteRejectedPin.comment": "Message printed when a valid looking PIN fails to work",
    "CommandSetupCantFindRemoteMount": "Unable to contact {0} to find where the remote build server services Cordova builds. Is the server running remotebuild with taco-remote configured?",
    "_CommandSetupCantFindRemoteMount.comment": "Message printed when unable to find where to query the remote server for future builds. {0} is the URL we tried to contact",
    "CommandSetupSettingsStored": "<success>Success!</success> Settings stored in {0}",
    "_CommandSetupSettingsStored.comment": "Message printed after successfully storing settings. {0} is the location they were stored to",
    "CommandSetupConnectionRefused": "Unable to connect to remote server. Make sure that the remotebuild server is running at {0}",
    "_CommandSetupConnectionRefused.comment": "Message printed when we fail to connect to the remote server. {0} is the url of the server",
    "CommandSetupNotfound": "Unable to look up host '{0}'. Check that the name is correct.",
    "_CommandSetupNotfound.comment": "Message printed when we fail to look up the user provided hostname. {0} is that hostname",
    "CommandSetupTimedout": "Unable to contact '{0}:{1}', please check that the server is reachable.",
    "_CommandSetupTimedout.comment": "Message printed when a connection times out. {0} is the host name and {1} is the port number",
    "CommandSetupRemoteDeleteNeedsPlatform": "No platform specified",
    "_CommandSetupRemoteDeleteNeedsPlatform.comment": "Error message printed when someone runs 'taco setup remote --remove <platform>' without specifying the platform",
    "CommandSetupRemoteDeletePlatformNotAdded": "Unable to remove platform '{0}': platform not added",
    "_CommandSetupRemoteDeletePlatformNotAdded.comment": "Error message printed when someone runs 'taco setup remote --remove <platform>' and the platform has not been added",
    "CommandSetupRemoteRemoveSuccessful": "<success>Success!</success> Removed remote platform {0}",
    "_CommandSetupRemoteRemoveSuccessful.comment": "Message printed after 'taco setup remote --remove <platform>' succeeds. {0} is the specified platform",
    "CommandSetupRemoteListNoPlatforms": "No platforms configured for remote build.",
    "_CommandSetupRemoteListNoPlatforms.comment": "Message printed when running 'taco setup remote --list' and there is nothing to list.",
    "CommandSetupRemoteListSecured": "Secured",
    "_CommandSetupRemoteListSecured.comment": "Label given to remotes that are configured securely",
    "CommandSetupRemoteListNotSecured": "Not Secured",
    "_CommandSetupRemoteListNotSecured.comment": "Label given to remotes that are configured insecurely",
    "CommandSetupRemoteListPlatformHeader": "Platform",
    "_CommandSetupRemoteListPlatformHeader.comment": "Header of the column containing Cordova platforms for listing of remote configured platforms",
    "CommandSetupRemoteListDescriptionHeader": "Remote Server",
    "_CommandSetupRemoteListDescriptionHeader.comment": "Header of the column containing URLs of remote servers for listing of remote configured platforms",
    "CommandSetupRemoteListPrelude": "Current remote configuration(s):",
    "_CommandSetupRemoteListPrelute.comment": "Text printed introducing the table of remote platforms when you 'taco setup remote --list'",

    "CommandPlatformDescription": "Manage project platforms",
    "_CommandPlatformDescription.comment": "Description for 'taco platform'",
    "CommandPlatformSubcommandDescription": "The subcommand to be run - add, remove, list, update or check",
    "_CommandPlatformSubcommandDescription.comment": "Description of the COMMAND argument to 'taco build'",
    "CommandPlatformAddSubcommandDescription": "Add specified platforms",
    "_CommandPlatformAddSubcommandDescription.comment": "Description for 'taco platform add'",
    "CommandPlatformRemoveSubcommandDescription": "Remove specified platforms",
    "_CommandPlatformRemoveSubcommandDescription.comment": "Description for 'taco platform remove'",
    "CommandPlatformListSubcommandDescription": "List all the installed and available platforms",
    "_CommandPlatformListSubcommandDescription.comment": "Description for 'taco platform list'",
    "CommandPlatformUpdateSubcommandDescription": "Update the version of cordova used for a specific platform; Update to the latest <VERSION>, if no <VERSION>, path or <URL> is specified.",
    "_CommandPlatformUpdateSubcommandDescription.comment": "Description for 'taco platform update'",
    "CommandPlatformCheckSubcommandDescription": "List platforms which can be updated by 'cordova platform update'",
    "_CommandPlatformCheckSubcommandDescription.comment": "Description for 'taco platform check'",
    "CommandPlatformUsegitDescription": "Retrieve from git instead of npm registry",
    "_CommandPlatformUsegitDescription.comment": "Description of  --usegit argument to 'taco platform update' or 'taco platform update'",
    "CommandPlatformSaveAddDescription": "Save specified platforms into config.xml after installing them",
    "_CommandPlatformSaveAddDescription.comment": "Description of the --save argument to 'taco platform add'",
    "CommandPlatformSaveRemoveDescription": "Delete specified platforms from config.xml after removing them",
    "_CommandPlatformSaveRemoveDescription.comment": "Description of the --save argument to 'taco platform remove'",
    "CommandPlatformSaveUpdateDescription": "Save the latest versions of the specified platforms into config.xml",
    "_CommandPlatformSaveUpdateDescription.comment": "Description of the --save argument to 'taco platform update'",
    "CommandPlatformLinkDescription": "When <plat-spec> is a local path, links the platform library directly instead of making a copy of it (support varies by platform; useful for platform development)",
    "_CommandPlatformLinkDescription.comment": "Description of the --link argument to 'taco platform add'",
    "CommandPlatformOptPlatformDescription": "Platform (typically from the npm registry)",
    "_CommandPlatformOptPlatformDescription.comment": "Description of the <PLATFORM> argument in the syntax description",
    "CommandPlatformOptPathDescription": "Path to a directory containing a platform name of platform to be retrieved from npm registry",
    "_CommandPlatformOptPathDescription.comment": "Description of the <PATH> argument in the syntax description",
    "CommandPlatformOptUrlDescription": "Url to a git repository containing a platform",
    "_CommandPlatformOptUrlDescription.comment": "Description of the <PATH> argument in the syntax description",
    "CommandPlatformOptVersionDescription": "The major.minor.patch version specifier",
    "_CommandPlatformOptVersionDescription.comment": "Description of the <VERSION> argument in the syntax description",
    "CommandPlatformOptBranchDescription": "Name of the branch to checkout after cloning the git repo; If none is specified, the 'master' branch will be checked out",
    "_CommandPlatformOptBranchDescription.comment": "Description of the <BRANCH> argument in the syntax description",
    "CommandPlatformStatusAdding": "Adding platform <highlight>{0}</highlight> to Cordova project...<br/>",
    "_CommandPlatformStatusAdding.comment": "Status message shown while adding a platform {0} of version {1} from NPM",
    "CommandPlatformStatusAdded": "<success>Success!</success> Platform(s) <highlight>{0}</highlight> added to the project.<br/>",
    "_CommandPlatformStatusAdded.comment": "Status message after successfully adding platform(s) {0} to {1}",
    "CommandPlatformStatusRemoving": "Removing platform <highlight>{0}</highlight> from Cordova project...<br/>",
    "_CommandPlatformStatusRemoving.comment": "Status message shown while removing a platform {0} from the project",
    "CommandPlatformStatusRemoved": "<success>Success!</success> Platform(s) <highlight>{0}</highlight> removed from the project.<br/>",
    "_CommandPlatformStatusRemoved.comment": "Status message after successfully removing platform {0}",
    "CommandPlatformStatusUpdating": "Updating platform <highlight>{0}</highlight>...<br/>",
    "_CommandPlatformStatusUpdating.comment": "Status message shown while updating a platform {0} added to the project",
    "CommandPlatformStatusUpdated": "<success>Success!</success> Platform(s) <highlight>{0}</highlight> updated.<br/>",
    "_CommandPlatformStatusUpdated.comment": "Status message after successfully updating platform {0}",
    

    "CommandPluginDescription": "Manage project plugins",
    "_CommandPluginDescription.comment": "Description for 'taco plugin'",
    "CommandPluginSubcommandDescription": "The subcommand to be run - add, remove, list, or search",
    "_CommandPluginSubcommandDescription.comment": "Description of the COMMAND argument to 'taco build'",
    "CommandPluginAddSubcommandDescription": "Add specified Plugins; pluginid will be matched in --searchpath / registry; directory is a directory containing a plugin; giturl is a git repo containing a plugin",
    "_CommandPluginAddSubcommandDescription.comment": "Description for 'taco plugin add'",
    "CommandPluginRemoveSubcommandDescription": "Remove plugins with the given IDs",
    "_CommandPluginRemoveSubcommandDescription.comment": "Description for 'taco plugin remove'",
    "CommandPluginListSubcommandDescription": "List currently installed plugins",
    "_CommandPluginListSubcommandDescription.comment": "Description for 'taco Plugin list'",
    "CommandPluginSearchSubcommandDescription": "Search the plugin registry for plugins matching the keywords",
    "_CommandPluginSearchSubcommandDescription.comment": "Description for 'taco plugin search'",
    "CommandPluginSearchPathDescription": "When looking up plugins by ID, look in this directory and each of its subdirectories for the plugin before hitting the registry. Multiple search paths can be used by either specifying the flag multiple times, or by seperating paths with a delimiter (':' on Unix, ';' on Windows).",
    "_CommandPluginSearchPathDescription.comment": "Description of  --searchpath argument to 'taco Plugin add'",
    "CommandPluginSaveAddDescription": "Save the information for specified plugin into config.xml",
    "_CommandPluginSaveAddDescription.comment": "Description of the --save argument to 'taco plugin add'",
    "CommandPluginSaveRemoveDescription": "Remove the information for the specified plugin from config.xml",
    "_CommandPluginSaveRemoveDescription.comment": "Description of the --save argument to 'taco plugin remove'",
    "CommandPluginNoRegistryDescription": "Don't search the registry for plugins",
    "_CommandPluginNoRegistryDescription.comment": "Description of the --noregistry argument to 'taco Plugin update'",
    "CommandPluginLinkDescription": "When installing from a local path, creates a symbolic link to the plugin instead of copying files. The extent to which files are linked vs copied varies by platform. Useful for plugin development.",
    "_CommandPluginLinkDescription.comment": "Description of the --link argument to 'taco Plugin add'",
    "CommandPluginShrinkwrapDescription": "Used together with --save, saves the installed version number to config.xml",
    "_CommandPluginShrinkwrapDescription.comment": "Description of the --shrinkwrap argument to 'taco plugin add'",
    "CommandPluginBrowserifyDescription": "Plugins javascript gets loaded at build time instead of runtime using browserify, Replace cordovajs file with one that included the JS of the installed plugins.",
    "_CommandPluginBrowserifyDescription.comment": "Description of the <path> argument in the syntax description",
    "CommandPluginStatusAdded": "<success>Success!</success> Plugin added.<br/>",
    "_CommandPluginStatusAdded.comment": "Status message after successfully adding a plugin",
    "CommandPluginWithIdStatusAdded": "<success>Success!</success> Plugin {0} added.<br/>",
    "_CommandPluginWithIdStatusAdded.comment": "Status message after successfully adding plugin {0}",
    "CommandPluginStatusRemoved": "<success>Success!</success> Plugin <highlight>{0}</highlight> removed<br/>",
    "_CommandPluginStatusRemoved.comment": "Status message after successfully removing plugin {0}",
    "CommandPluginStatusAdding": "Adding plugin <highlight>{0}</highlight> to Cordova project...<br/>",
    "_CommandPluginStatusAdding.comment": "Status message shown while adding a platform {0} of version {1} from NPM",
    "CommandPluginTestedPlatforms": "The plugin <highlight>{0}</highlight> has been validated on platform(s) - {1}.<br/>",
    "_CommandPluginTestedPlatforms.comment": "Status message regarding the tested platforms while adding a plugin {0}",
    "CommandPluginStatusRemoving": "Removing plugin <highlight>{0}</highlight> from Cordova project...<br/>",
    "_CommandPluginStatusRemoving.comment": "Status message shown while removing a plugin {0} from the project",
    
    "CommandBuildDescription": "Build a cordova project",
    "_CommandBuildDescription.comment": "Description for 'taco build'",
    "CommandBuildPlatformDescription": "The platform that you wish to build",
    "_CommandBuildPlatformDescription.comment": "Description of the PLATFORM argument to 'taco build'",
    "CommandBuildRemoteDescription": "Force a remote build",
    "_CommandBuildRemoteDescription.comment": "Description of the --remote argument to 'taco build'",
    "CommandBuildLocalDescription": "Force a local build",
    "_CommandBuildLocalDescription.comment": "Description of the --local argument to 'taco build'",
    "CommandBuildCleanDescription": "Clean before building",
    "_CommandBuildCleanDescription.comment": "Description of the --clean argument to 'taco build'",
    "CommandBuildDebugDescription": "Create a debug build",
    "_CommandBuildDebugDescription.comment": "Description of the --debug argument to 'taco build'",
    "CommandBuildReleaseDescription": "Create a release build",
    "_CommandBuildReleaseDescription.comment": "Description of the --release argument to 'taco build'",
    "CommandBuildDeviceDescription": "Create a build to run on a physical device",
    "_CommandBuildDeviceDescription.comment": "Description of the --device argument to 'taco build'",
    "CommandBuildEmulatorDescription": "Create a build to run in an emulator",
    "_CommandBuildEmulatorDescription.comment": "Description of the --emualtor argument to 'taco build'",
    "CommandBuildTargetDescription": "Create a build to run on the specified target",
    "_CommandBuildTargetDescription.comment": "Description of the --target argument to 'taco build'",
    "CommandBuildInvalidPlatformLocation": "Error: Unable to understand '{0}' platform",
    "_CommandBuildInvalidPlatformLocation.comment": "Error message printed when we can't determine whether a platform should be local or remote. {0} is the platform",

    "CommandBuildLocalPlatformNotAdded": "Error: Platform {0} has not been added locally. Please try 'taco platform add {0}' before building",
    "_CommandBuildLocalPlatformNotAdded.comment": "Error reported when a local build has explicitly been requested for a particular platform and that platform is not present. {0} is the user specified platform",
    "CommandBuildTacoSettingsNotFound": "Error: Unable to load settings. Please run 'taco setup remote' before building remotely",
    "_CommandBuildTacoSettingsNotFound.comment": "Error reported when we try to look up configured remote builds and fail",
    "CommandBuildRemotePlatformNotConfigured": "Error: Unable to load remote settings for {0}. Please run 'taco setup remote {0}' to configure remote builds for this platform",
    "_CommandBuildRemotePlatformNotConfigured.comment": "Error reported when we try to look up a specific platform for building remotely and it has not been configured. {0} is the platform requested by the user",
    "CommandBuildPlatformNotFound": "Error: Unable to find local or remote configuration of {0}. Please run 'taco platform add {0}' or 'taco setup remote {0}'",
    "_CommandBuildPlatformNotFound.comment": "Error reported when we try to build for a specific platform but can't find it either locally or remotely. {0} is the platform requested by the user",
    "CommandBuildNoLocalPlatformsFound": "Error: no platforms in project. Please run 'taco platform add' to add a platform",
    "_CommandBuildNoLocalPlatformsFound.comment": "Error reported when we are asked to build locally with no platform specified, and there are no platforms in the project",
    "CommandBuildRemotePlatformsNotConfigured": "Error: No remote platforms configured. Please run 'taco setup remote' to configure one",
    "_CommandBuildRemotePlatformsNotConfigured.comment": "Error reported when we are asked to build remotely with no platform specified, and there are no remote build servers configured",
    "CommandBuildPlatformsNotFound": "Error: Unable to find any local or remote platforms. Please run 'taco platform add' or 'taco setup remote'",
    "_CommandBuildPlatformsNotFound.comment": "Error reported when we are asked to build with no platform specified and we are unable to find any platforms either locally or remotely",
    "CommandRemotePlatformNotKnown": "Error: No remote settings found for {0}. Please run 'taco setup remote {0}'",
    "_CommandRemotePlatformNotKnown.comment": "Error message printed when a remote build or run is requested for a platform that does not have remote settings configured. {0} is the platform",

    "CommandRunDescription": "Run a cordova project",
    "_CommandRunDescription.comment": "Description for 'taco run'",
    "CommandRunPlatformDescription": "The platform that you wish to run",
    "_CommandRunPlatformDescription.comment": "Description of the PLATFORM argument to 'taco run'",
    "CommandRunRemoteDescription": "Force a remote build",
    "_CommandRunRemoteDescription.comment": "Description of the --remote argument to 'taco run'",
    "CommandRunLocalDescription": "Force a local build",
    "_CommandRunLocalDescription.comment": "Description of the --local argument to 'taco run'",
    "CommandRunNobuildDescription": "Do not perform a build before running",
    "_CommandRunNobuildDescription.comment": "Description of the --nobuild argument to 'taco run'",
    "CommandRunDebuginfoDescription": "Report back additional information to allow connecting a debugger to the running instance",
    "_CommandRunDebuginfoDescription.comment": "Description of the --json argument to 'taco run'",
    "CommandRunDebugDescription": "Run a debug build",
    "_CommandRunDebugDescription.comment": "Description of the --debug argument to 'taco run'",
    "CommandRunReleaseDescription": "Run a release build",
    "_CommandRunReleaseDescription.comment": "Description of the --release argument to 'taco run'",
    "CommandRunDeviceDescription": "Run a build on a physical device",
    "_CommandRunDeviceDescription.comment": "Description of the --device argument to 'taco run'",
    "CommandRunEmulatorDescription": "Run a build in an emulator",
    "_CommandRunEmulatorDescription.comment": "Description of the --emualtor argument to 'taco run'",
    "CommandRunTargetDescription": "Run a build on the specified target",
    "_CommandRunTargetDescription.comment": "Description of the --target argument to 'taco run'",
    "CommandRunRemoteDeviceSuccess": "<success>Success!</success> Build running on remote attached device",
    "_CommandRunRemoteDeviceSuccess.comment": "Message printed after successfully running a build on a remote device",
    "CommandRunRemoteEmulatorSuccess": "<success>Success!</success> Build running on remote emulator",
    "_CommandRunRemoteEmulatorSuccess.comment": "Message printed after successfully running a build on a remote device",

    "CommandNotBothLocalRemote": "Error: must specify at most one of --local and --remote",
    "_CommandNotBothLocalRemote.comment": "Error reported when both --local and --remote are specified for 'taco build' or 'taco run'",
    "CommandNotBothDeviceEmulate": "Error: must specify at most one of --device and --emulator",
    "_CommandNotBothDeviceEmulate.comment": "Error reported when both --device and --emulator are specified for 'taco build' or 'taco run'",
    "CommandNotBothDebugRelease": "Error: must specify at most one of --debug and --release",
    "_CommandNotBothDebugRelease.comment": "Error reported when both --debug and --release are specified for 'taco build' or 'taco run'",

    "CommandVersionDescription": "Display the current Taco version",
    "_CommandVersionDescription.comment":  "Description of the -v/--v/--version arguments to taco",

    "CommandInstallReqsDescription": "Install platform-specific third-party dependencies",
    "_CommandInstallReqsDescription.comment": "Description for 'taco install-reqs'",
    "CommandInstallReqsPlatformDescription": "A platform for which to install third-party dependencies",
    "_CommandInstallReqsPlatformDescription.comment": "Description for the [PLATFORM] option(s) of 'taco install-reqs'",

    "CommandInstallCordovaTooOld": "Error: Cordova 5.1.0 or later required.",
    "_CommandInstallCordovaTooOld.comment": "Error shown when a user uses 'taco install-reqs' with a Cordova version older than 5.1.0.",

    "NoRemoteBuildIdFound": "Error: No remote build found. Please run '{0}' first",
    "_NoRemoteBuildIdFound.comment": "Message printed when trying to make use of a remote build which does not have an associated ID. {0} is the command the user should run to try to fix things",
    "NotInCordovaProject": "Error: Current working directory is not a Cordova-based project",
    "_NotInCordovaProject.comment": "Message printed when attempting to run a taco command in a directory which is not a Cordova-based project ",

    "UnsupportedPlatform": "Error: Unsupported platform {0}",
    "_UnsupportedPlatform.comment": "Message printed when running on an operating system that we don't support. {0} is the platform",
    "NoCertificateFound": "Error: No certificate '{0}' found",
    "_NoCertificateFound.comment": "Message printed when we fail to find a certificate. {0} is the certificate we were looking for",
    "GetCertificateFailed": "Error: unable to find certificate.",
    "_GetCertificateFailed.comment": "Message printed when we fail to find a certificate because of an error",
    "ErrorTacoJsonMissingOrMalformed": "Error: taco.json is missing or malformed.",
    "_ErrorTacoJsonMissingOrMalformed.comment": "Message printed when we find that taco.json file is either missing or malformed",
    "ErrorCertificateLoad": "Failed to load certificate {0}",
    "_ErrorCertificateLoad.comment": "Message printed when we fail to load a certificate. {0} is the name of the certificate",
    "ErrorCertificatePathChmod": "Failed to change permissions for certificate folder {0}",
    "_ErrorCertificatePathChmod.comment": "Error message printed when we are unable to chmod the certificate folder. {0} is the path we tried to modify",
    "ErrorCertificateSaveToPath": "Failed to save certificate at {0}",
    "_ErrorCertificateSaveToPath.comment": "Error message printed when we fail to save a certificate to disk. {0} is the location we tried to save it",
    "ErrorCertificateSave": "Failed to save certificate",
    "_ErrorCertificateSave.comment": "Error message printed when we fail to save a certificate via powershell",
    "ErrorCertificateSaveWithErrorCode": "Failed to save certificate in certficate store. Exit Code: {0}",
    "_ErrorCertificateSaveWithErrorCode.comment": "Error message printed when we fail to save a certificate via powershell and we have a process exit code. {0} is the process exit code.",

    "ErrorNoPlatformsFound": "Unable to find any platforms. Please 'taco platform add <platform>' or 'taco setup remote <platform>' and retry.",
    "_ErrorNoPlatformsFound.comment": "Error message printed when we try to run a command on a set of platforms, and the set is empty.",

    "ErrorUploadingRemoteBuild": "An error occurred uploading to the build server {0}",
    "_ErrorUploadingRemoteBuild.comment": "Message reported when we attempt to upload a build and the upload fails. {0} is the URL of the server",
    "ErrorDuringRemoteBuildSubmission": "Error during build submission: {0}",
    "_ErrorDuringRemoteBuildSubmission.comment": "Message reported when we hit an internal error when uploading a build. {0} is the reported error.",
    "ErrorPatchCreation": "Failed to parse changed files needed to prepare a build patch",
    "_ErrorPatchCreation.comment": "Error message reported when we fail to construct the list of files to send for a remote build",
    "RemoteBuildStatusPollFailed": "HTTP {0}: {1}",
    "_RemoteBuildStatusPollFailed.comment": "Error message reported when polling for a build and the HTTP request fails. {0} is the HTTP status code, and {1} is the body of the response",
    "InvalidRemoteBuildClientCert": "The remote build server denied the build request, because the client certificate is invalid or has expired. To build your project, you must generate and configure a security PIN. See http://go.microsoft.com/fwlink/?LinkID=511904",
    "_InvalidRemoteBuildClientCert.comment": "Error message reported when a build request fails due to a bad certificate",
    "CheckingRemoteBuildStatus": "------ {0} Checking on build status from {1} [Attempt {2}]",
    "_CheckingRemoteBuildStatus.comment": "Message printed when polling for a build result. {0} is the current time, {1} is the URL we are fetching, and {2} is the number of times we have tried so far",
    "RemoteBuildError": "Remote build error from the build server {0}",
    "_RemoteBuildError.comment": "Error message reported when a build errors out on the server. {0} is the error from the server",
    "RemoteBuildSslConnectionReset": "Secure connection to {0} could not be established. Verify that the build server is running in secure mode.",
    "_RemoteBuildSslConnectionReset.comment": "Error message reported when a secure client tries to connect to an insecure server. {0} is the URL of the server",
    "RemoteBuildNonSslConnectionReset": "Non-secure connection to {0} could not be established. Verify that the build server is not running in secure mode.",
    "_RemoteBuildNonSslConnectionReset.comment":  "Error message reported when an insecure client tries to connect to a secure server. {0} is the url of the server",
    "RemoteBuildHostNotFound": "Host unreachable for build server {0}.",
    "_RemoteBuildHostNotFound.comment": "Error message reported when we are unable to resolve the hostname {0}",
    "RemoteBuildNoConnection": "Remote build server {0} connection failed. Verify that the server is running.",
    "_RemoteBuildNoConnection.comment": "Error message reported when the remote server refuses the connection, likely because there is no server on the specified port. {0} is the url we tried",
    "InvalidRemoteBuild": "Invalid remote build: {0}",
    "_InvalidRemoteBuild.comment": "Error message reported when the remote server reports an invalid build. {0} is the server's message",
    "DownloadingRemoteBuild": "------ Downloading completed build files from {0} to {1}",
    "_DownloadingRemoteBuild.comment": "Message printed when downloading the build artifacts after a build. {0} is the url we are visiting, and {1} is the location we are saving it on disk",
    "DownloadedRemoteBuild": "------ Done downloading the build outputs to {0}",
    "_DownloadedRemoteBuild.comment": "Message printed after successfully downloading the build artifacts. {0} is the location they were saved to",
    "ErrorDownloadingRemoteBuild": "Error from downloading build outputs to {0}",
    "_ErrorDownloadingRemoteBuild.comment": "Message printed when an error occurs while downloading the build artifacts. {0} is the location we tried to save them to",
    "ExtractingRemoteBuild": "------ Extracting the build outputs to {0}",
    "_ExtractingRemoteBuild.comment": "Message printed after downloading build artifacts as we try to unpack them. {0} is where we are trying to extract the result to",
    "DoneExtractingRemoteBuild": "------ Done extracting the build outputs to {0}",
    "_DoneExtractingRemoteBuild.comment": "Message printed after successfully unpacking the downloaded build artifacts. {0} is the location they were unpacked to.",
    "FailedToDeleteRemoteZip": "------ Failed to delete downloaded zip file {0}. This did not prevent a successful build.",
    "_FailedToDeleteRemoteZip.comment": "Message printed if deleting the packed build artifacts fails after already unpacking them. {0} is the location of the packed archive.",
    "ErrorKitMetadataFileMalformed": "Error: The kit metadata file used by TACO is corrupt. Please fix this by re-installing taco-cli from npm.",
    "_ErrorKitMetadataFileMalformed.comment": "Error thrown when the TacoKitMetadata.json is malformed",
    "ErrorInvalidPath": "Error: The specified path is invalid: {0}",
    "_ErrorInvalidPath.comment": "Error reported when the specified path passed to 'taco kit list --json' is invalid.",
    "ErrorInvalidJsonFilePath": "Error: The specified path is not a valid JSON file path: {0}",
    "_ErrorInvalidJsonFilePath.comment": "Error reported when the specified path passed to 'taco kit list --json' is an invalid JSON file path.",
    "ErrorIncompatibleOptions": "Error: {0} option cannot be used in conjunction with {1} option.",
    "_ErrorIncompatibleOptions.comment": "Error reported when two incompatibible options {0} and {1} are specified on command line.",

    "IncrementalBuild": "------ Incremental Build: {0}",
    "_IncrementalBuild.comment": "Message printed when we start a remote build. {0} is either true or false, depending on whether the build is incremental",
    "SubmittingRemoteBuild": "------ Submitting new build request to: {0}",
    "_SubmittingRemoteBuild.comment": "Message printed when we send a build request to a remote server. {0} is the URL that we are submitting to",
    "NewRemoteBuildInfo": "------ New Build information: {0}",
    "_NewRemoteBuildInfo.comment": "Message printed after a build was successfully submit to a remote server. {0} is a JSON response from the server",
    "InvalidRemoteBuildUrl": "The remote build server Url {0} is invalid. It should specify http or https.",
    "_InvalidRemoteBuildUrl.comment": "Error message printed when we attempt to send a build to an invalid URL. {0} is the URL",

    "ErrorHttpGet": "Error contacting {0}",
    "_ErrorHttpGet.comment": "Error message reported when a web request to url {0} fails. {1} is the error reported.",
    "HttpGetFailed": "Http {0}: {1}",
    "_HttpGetFailed.comment": "Error message reported when a web request is completed but does not report success. {0} is the error status code, and {1} is the contents of the response",

    "BuildLogWrittenTo": "Remote build log written to {0}",
    "_BuildLogWrittenTo.comment": "Message printed when the build log fetched from the remote machine has finished being written. {0} is the path the file was written to",
    "RemoteBuildSuccessful": "Remote build successfully completed",
    "_RemoteBuildSuccessful.comment": "Message printed when a remote build completes successfully",
    "RemoteBuildUnsuccessful": "Remote build failed",
    "_RemoteBuildUnsuccessful.comment": "Message printed when a remote build fails",
    "InvalidBuildSubmission400": "{0}:{1}",
    "_InvalidBuildSubmission400.comment": "Invalid build submission: ',' seperated errors reported by remote build server",

    "CleaningRemoteResources": "Cleaning remote {0} {1} build.",
    "_CleaningRemoteResources.comment": "Message printed when building --clean for a remote target. {0} is the platform, and {1} is release/debug",

    "CordovaCommandFailed": "'cordova {1}' failed with exit code {0}",
    "_CordovaCommandFailed.comment": "Error message passed back after invoking Cordova fails. {0} is the exit code, and {1} is the arguments passed to it",

    "CordovaCommandFailedWithError": "'cordova {0}' failed.",
    "_CordovaCommandFailedWithError.comment": "Error message passed back after invoking Cordova fails. {0} is the exit code, and {1} is the arguments passed to it",

    "CordovaCmdNotFound": "Cordova not found, please run 'npm install –g Cordova' to install Cordova globally",
    "_CordovaCmdNotFound.comment": "Error message shown when no Cordova is found on the machine",
    "UnimplementedAbstractMethod": "This is an abstract method and should be implemented by a derived overload",
    "_UnimplementedAbstractMethod.comment": "Error thrown for an unimplemented method"
}
