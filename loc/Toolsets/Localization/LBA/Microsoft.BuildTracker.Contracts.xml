<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.BuildTracker.Contracts</name>
    </assembly>
    <members>
        <member name="T:Microsoft.BuildTracker.Contracts.AffinityData">
            <summary>
            Contains the data members related to a BuildTracker affinity
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.AffinityData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.AffinityData.Id">
            <summary>
            Id of the affinity
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.AffinityData.MachineGroupId">
            <summary>
            Id of the MachineGroup to affinity with
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.AffinityData.ResourceId">
            <summary>
            Id of the resource to be affinitied
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.AffinityData.ResourceType">
            <summary>
            Type of resource to affinity to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.AffinityData.AffinityType">
            <summary>
            The type of affinity relationship
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.AffinityData.JobType">
            <summary>
            Type of job afffinity applies to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.AffinityData.AlternateParentId">
            <summary>
            Id of the parent to use for the affinity when the affinity is set to a system-level resource
            </summary>
            <remarks>
            When the affinity is system-level, this contains the Id of the BuildShareGroup that is the parent
            of the drop/retention job.  Otherwise this value is null.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.AffinityData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.AffinityResourceType">
            <summary>
            Type of object to be affinitied
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityResourceType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityResourceType.Product">
            <summary>
            Affinity to a product
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityResourceType.Branch">
            <summary>
            Affinity to a branch
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityResourceType.Job">
            <summary>
            Affinity to a job
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityResourceType.Leg">
            <summary>
            Affinity to a leg
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityResourceType.Machine">
            <summary>
            Affinity to a machine
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityResourceType.SourceDepot">
            <summary>
            Affinity to a SourceDepot
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityResourceType.BuildShareGroup">
            <summary>
            Affinity to a BuildShareGroup
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.AffinityType">
            <summary>
            Type of relationship between a selected resource and a Machine Group
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityType.ResourceDoesNotBuildOnMachine">
            <summary>
            Legs of the selected resource do not execute on machines in the selected Machine Group
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityType.ResourceBuildsOnMachine">
            <summary>
            Legs of the selected resource only execute on machines in the selected Machine Group
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityType.MachineBuildsResource">
            <summary>
            Machines in the selected Machine Group only execute legs of the selected resource
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityType.ResourceEqualsMachine">
            <summary>
            The selected resource and the selected Machine Group are associated
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AffinityType.Unknown">
            <summary>
            The relationship is undefined
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobType">
            <summary>
             The Job Type (e.g. Build, Drop, Retention) of the affinity.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobType.Unknown">
            <summary>
            Unknown type of job
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobType.Build">
            <summary>
            Build job
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobType.Retention">
            <summary>
            Build retention job
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobType.Drop">
            <summary>
            Drop job
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IAffinity">
            <summary>
            Service methods that perform actions related to BuildTracker affinities 
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IAffinity.GetById(System.Int32)">
            <summary>
            Returns the affinity that has the given id
            </summary>
            <param name="affinityId">Id of the affinity to return</param>
            <returns>AffinityData object for the requested affinity</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IAffinity.Update(Microsoft.BuildTracker.Contracts.AffinityData)">
            <summary>
            Updates and existing affinity with data from a AffinityData object
            </summary>
            <param name="affinity">An AffinityData object with field values that are to be updated on a BuildTracker affinity</param>
            <returns>An AffinityData object that contains the updated field values</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IAffinity.Delete(System.Int32)">
            <summary>
            Deletes a affinity from BuildTracker
            </summary>
            <param name="affinityId">Id of the affinity to be deleted</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.BuildDropQueryData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.DateFrom">
            <summary>
            Start of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.DateTo">
            <summary>
            End of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.ProductId">
            <summary>
            Filter to build drops under the given product only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.BranchId">
            <summary>
            Filter to build drops under the given branch only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.BuildShareGroupId">
            <summary>
            Filter to build drops under the given build share group only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.SubmittedBy">
            <summary>
            Filter only builds submitted by this user
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.ParameterName">
            <summary>
            Filter only builds with this parameter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.ParameterValue">
            <summary>
            Filter only builds with this value for the parameter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.JobDefinitionId">
            <summary>
            Filter only builds from this job definition.  
            If both both JobDefinitionID and JobDefinitionName are supplied, JobDefinitionId takes precedence.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.JobDefinitionName">
            <summary>
            Filter only builds from this job definition.  
            If both both JobDefinitionID and JobDefinitionName are supplied, JobDefinitionId takes precedence.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.JobTypes">
            <summary>
            Filter only builds having these types
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.IncludeDeleted">
            <summary>
            Return deleted builds in the results
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.FailedOnly">
            <summary>
            Only return failed builds in the results
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.TopN">
            <summary>
            Limit results to this number of builds
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropQueryData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ICredentials36Qfe1">
            <summary>
            Interface service methods added for version QFE1
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ICredentials36Qfe1.SetCredentials(System.String,System.Byte[],System.Int32,Microsoft.BuildTracker.Contracts.AccountResourceType)">
            <summary>
            Sets the credential information on a BuildTracker object
            </summary>
            <param name="alias">Username of the account to set</param>
            <param name="password">Password of the account to set.  It should be an array of bytes derived from encrypting the password string.</param>
            <param name="id">Id of the object to associate the credentials with</param>
            <param name="resourceType">Type of object to associate the credentials with</param>
            <returns>The alias that was set on the resource</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses">
            <summary>
            All of the different states that a JobInstance might have
            </summary>
            <remarks>
            This enum is flags, so multiple values can be 'OR'ed together
            </remarks>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.Waiting">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.Running">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.Failed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.Completed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.Aborted">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.Canceled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.Idle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.Skipped">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.Resumed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.FailedOk">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.InternalError">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.All">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.FailedStatuses">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceQueryStatuses.FinishedStatus">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegDateTimeColumn">
            <summary>
            Possible columns to set date condition
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegDateTimeColumn.PreparingStartedTime">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegDateTimeColumn.WaitingStartedTime">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegDateTimeColumn.ReadyStartedTime">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegDateTimeColumn.ExecutingStartedTime">
            <summary>
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegDateTimeColumn.FinishedTime">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegInstanceWaitingState">
            <summary>
            Condition that a leg instance may be waiting for
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceWaitingState.NotWaiting">
            <summary>
            The leg instance is not waiting
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceWaitingState.WaitingOnMachines">
            <summary>
            The leg instance is waiting for a machine to become available to run on
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceWaitingState.WaitingOnDependencies">
            <summary>
            The leg instance is waiting for another leg that it depends on to complete
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegInstanceQueryData">
            <summary>
            Data contract containing all of the fields that will be used to form a query to select LegInstances.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.DateFrom">
            <summary>
            Start of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.DateFromQueryType">
            <summary>
            Column where DateFrom condition should be applied or compaired
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.DateTo">
            <summary>
            End of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.DateToQueryType">
            <summary>
            Column where DateTo condition should be applied or compaired
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.Status">
            <summary>
            Combination of LegInstance state values that are queried for
            </summary>
            <remarks>
            This field may not be null.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.OrderBy">
            <summary>
            Sets the sort order. Used in the "top N" scenario -> in conjuntion with the .TopN field
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.SortDirection">
            <summary>
            data sorting direction
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.TopN">
            <summary>
            Return the top N instances only.
            Sort using the .OrderBy + .SortDirection fields.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.OverdueState">
            <summary>
            Filter for OnTime, Delayed, or Overdue leg instances.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.LegDefinitionId">
            <summary>
            Filter to leg instances of the given leg definition only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.MachineId">
            <summary>
            Filter to leg instances that execute on the given machine
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.ProductId">
            <summary>
            Filter to instances under the given product only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.BranchId">
            <summary>
            Filter to instances under the given branch only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.JobInstanceIds">
            <summary>
            Filter the results to LegInstances that belong to JobInstances with the given IDs
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.JobScheduleId">
            <summary>
            Filter to instances of the given job schedule
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceQueryData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IInstanceQuery36Qfe1">
            <summary>
            A set of query methods to get to instances (job instances, leg instances)
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IInstanceQuery">
            <summary>
            A set of query methods to get to instances (job instances, leg instances)
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IInstanceQuery.QueryJobInstances(Microsoft.BuildTracker.Contracts.JobInstanceQueryData)">
            <summary>
            Executes a query to retrieve JobInstance items that match the criteria passed in the JobInstanceQueryData structure
            </summary>
            <remarks>
            Will validate the data structure and its contents passed in.
            Throws ArgumetnFault
            </remarks>
            <returns>A collection of JobInstanceData items</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IInstanceQuery.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IInstanceQuery36Qfe1.QueryLegInstances(Microsoft.BuildTracker.Contracts.LegInstanceQueryData)">
            <summary>
            Executes a query to retrieve LegInstance items that match the criteria passed in the LegInstanceQueryData structure
            </summary>
            <param name="queryData">Defines the parameters of the query that selects a set of LegInstances.</param>
            <remarks>
            Will validate the data structure and its contents passed in.
            Throws ArgumentFault
            </remarks>
            <returns>A collection of LegInstanceData items</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IInstanceQuery36Qfe1.CountLegInstances(Microsoft.BuildTracker.Contracts.LegInstanceQueryData)">
            <summary>
            Executes a query to count the LegInstance items that match the criteria passed in the LegInstanceQueryData structure
            </summary>
            <param name="queryData">Defines the parameters of the query that selects a set of LegInstances.</param>
            <remarks>
            Will validate the data structure and its contents passed in.
            Throws ArgumentFault
            </remarks>
            <returns>The count of LegInstances that match the query criteria</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IInstanceQuery36Qfe1.QueryLegInstanceExecutions(Microsoft.BuildTracker.Contracts.LegInstanceQueryData)">
            <summary>
            Executes a query to retrieve LegInstanceExecution items that match the criteria passed in the LegInstanceQueryData structure
            </summary>
            <param name="queryData">Defines the parameters of the query that selects a set of LegInstanceExecutions.</param>
            <remarks>
            Will validate the data structure and its contents passed in.
            Throws ArgumentFault
            </remarks>
            <returns>A collection of LegInstanceExecutionData items</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IInstanceQuery36Qfe1.CountLegInstanceExecutions(Microsoft.BuildTracker.Contracts.LegInstanceQueryData)">
            <summary>
            Executes a query to count the LegInstanceExecution items that match the criteria passed in the LegInstanceQueryData structure
            </summary>
            <param name="queryData">Defines the parameters of the query that selects a set of LegInstanceExecutions.</param>
            <remarks>
            Will validate the data structure and its contents passed in.
            Throws ArgumentFault
            </remarks>
            <returns>The count of LegInstanceExecutions that match the query criteria</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IInstanceQuery36Qfe1.CountJobInstances(Microsoft.BuildTracker.Contracts.JobInstanceQueryData)">
            <summary>
            Executes a query to retrieve the count of JobInstance items that match the criteria passed in the JobInstanceQueryData structure
            </summary>
            <remarks>
            Will validate the data structure and its contents passed in.
            Throws ArgumetnFault
            </remarks>
            <returns>The count of JobInstances</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobScheduleData">
            <summary>
            Defines basic condition upon which a job gets queued up
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.JobScheduleData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.JobScheduleData.#ctor(Microsoft.BuildTracker.Contracts.JobScheduleData)">
            <summary>
            Copy constructor
            </summary>
            <param name="other">Another JobScheduleData instance to copy property values from</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.Id">
            <summary>
            BuildTracker ID of the JobSchedule
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.BuildJobDefinitionId">
            <summary>
            ID of the job that is to be scheduled.
            </summary>
            <remarks>
            If null, this JobSchedule will become a template that everyone can use to create other JobSchedules
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.Name">
            <summary>
            Name for this JobSchedule
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.Description">
            <summary>
            Descriptive text for this JobSchedule
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.Priority">
            <summary>
            Priority to give to the JobInstances created by this Job Schedule.
            If null, Priority of the Job is used.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.Enabled">
            <summary>
            If true, the job gets queued to run as specified by the settings.
            If false, the job won't get queued and previously created JobInstances that have not started yet are canceled. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.DaysOfWeek">
            <summary>
            The Day(s) of the week for scheduling the job.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.StartDate">
            <summary>
            Jobs won't be scheduled before this date.
            </summary>
            <remarks>
            This property specifies a particular date value only, an exception will be thrown if the time portion of the DateTime is not zero.
            Date values are considered to be relative to the timezone of the BuildTracker database and should not be in UTC because that indicates 
            a particular point in time independent of timezone.
            </remarks>
            <seealso cref="P:Microsoft.BuildTracker.Contracts.JobScheduleData.EndDate"/>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.EndDate">
            <summary>
            If not null, no new JobInstances will be created for this Job Schedule after the specified date.  If it is null,
            JobInstances will continue to be created by this JobSchedule without end.
            </summary>
            <remarks>
            This property specifies a particular date value only, an exception will be thrown if the time portion of the DateTime is not zero.
            Date values are considered to be relative to the timezone of the BuildTracker database and should not be in UTC because that indicates 
            a particular point in time independent of timezone.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.DailyStartTime">
            <summary>
             The time of day when you want the job to first get scheduled each day. 
            </summary>
            <remarks>
            The TimeSpan value assigned to this property specifies the time of day as the amount of time that has elapsed since midnight.
            Consequently, negative values and TimeSpans longer than 24 hours are not allowed.  Time values are considered to be relative to
            the timezone of the BuildTracker database.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.DailyEndTime">
            <summary>
            If specified, don't re-schedule past this time of the day.
            This only applies for Job Schedules that include Rescheduling and/or Synchronization to a Job Schedule or Enlistment.
            </summary>
            <remarks>
            The TimeSpan value assigned to this property specifies the time of day as the amount of time that has elapsed since midnight.
            Consequently, negative values and TimeSpans longer than 24 hours are not allowed.  Time values are considered to be relative to
            the timezone of the BuildTracker database.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.Rescheduling">
            <summary>
            Queue the job several times per day.
            The Start Time and End Time define the window of opportunity where new JobInstances can be scheduled.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.ReschedulingTimeSpan">
            <summary>
            Time period to add to the previous JobInstance start or completion.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.Sync">
            <summary>
            Indicates whether the enlistment needs to be synchronized before running Command LegInstances.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.SyncTo">
            <summary>
            The conditions to use to determine the point at which to synchronize the enlistment
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.SyncReferenceJobScheduleId">
            <summary>
            The Job Schedule that the current Job Schedule shoudl use as its SyncTime reference
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.ChangeDetectionEnlistmentSettings">
            <summary>
            Stores generic enlistment settings
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.ChangeDetectionRunAsAlias">
            <summary>
            Check for last Enlistment changes under specified credentials.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.EffectiveChangeDetectionRunAsAlias">
            <summary>
            Account that will be inherited if the ChangeDetection Credentials are not set on this JobSchedule.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.Parameters">
            <summary>
            Name-value pairs of the Jop Parameters that are definied for the specified Job (based on its current definition).
            Multi-valued parameter values are specified with a comma delimited string.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobScheduleData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.DaysOfWeek">
            <summary>
            Day(s) of the week for scheduling the job.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.Sunday">
            <summary>
            Sunday
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.Monday">
            <summary>
            Monday
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.Tuesday">
            <summary>
            Tuesday
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.Wednesday">
            <summary>
            Wednesday
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.Thursday">
            <summary>
            Thursday
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.Friday">
            <summary>
            Friday
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.Saturday">
            <summary>
            Saturday
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.Weekdays">
            <summary>
            Monday through Friday
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.Weekends">
            <summary>
            Saturday and Sunday
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DaysOfWeek.All">
            <summary>
            All days of the week
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ReschedulingType">
            <summary>
            When to schedule another JobInstance
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ReschedulingType.None">
            <summary>
            Schedule only one JobInstance per day
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ReschedulingType.LastStart">
            <summary>
             Schedule a new JobInstance based on when the previous one Started
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ReschedulingType.LastCompletion">
            <summary>
            Schedule a new JobInstance based on when the previous one Completed
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.SyncToType">
            <summary>
            The conditions to use to determine the point at which to synchronize the enlistment
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.SyncToType.Current">
            <summary>
            Sync to the time that was scheduled for execution
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.SyncToType.JobSchedule">
            <summary>
             Schedule a new JobQueue based on the sync time of the last successful JobQueue of another Job Schedule
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.SyncToType.Enlistment">
            <summary>
            Schedule a new JobQueue based on changes made to a given Enlistment
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IJobSchedule36Qfe1">
            <summary>
            Set of operations allowed to manage Job Schedules
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobSchedule36Qfe1.Update(Microsoft.BuildTracker.Contracts.JobScheduleData)">
            <summary>
            Update the local JobSchedule
            </summary>
            <param name="jobScheduleData">JobScheduleData object to update</param>
            <returns>A JobScheduleData object with properties repopulated from BuildTracker</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobSchedule36Qfe1.Delete(System.Int32)">
            <summary>
            Delete the JobSchedule
            </summary>
            <param name="jobScheduleId">Id of the JobSchedule that should be deleted</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobSchedule36Qfe1.GetById(System.Int32)">
            <summary>
            Get a jobSchedule by it's ID value
            </summary>
            <param name="jobScheduleId">Id of the JobSchedule</param>
            <returns>JobSchedule object with latest data.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobSchedule36Qfe1.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobServiceData">
            <summary>
            Contains the data members related to a BuildTracker JobService
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobServiceData.Id">
            <summary>
            ID of the JobService
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobServiceData.AllowedJobTypes">
            <summary>
            Defines the list of types of Jobs (Build, BuildRetention, Drop) a given Job Service is allowed to run. 
            If None is selected then this Job Service will not process any Jobs
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobServiceData.MachineId">
            <summary>
            ID of the machine where the Job Service is installed
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobServiceData.MaximumWorkerThreads">
            <summary>
            Lists the maximum number of LegInstances the given Job Service can process concurrently
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobServiceData.RequestedState">
            <summary>
            An administrator can request for that a service enter the following states by setting the RequestedState. 
            After the RequestedState is saved BuildTracker will process the request and apply it to the JobSevice. 
            Once applied the State property will reflect the requested state.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobServiceData.State">
            <summary>
            The state that the JobService is currently in
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobServiceData.JobServiceType">
            <summary>
            The type of the JobService, as specified by the type of legs that it runs.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobServiceData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobsTypes">
            <summary>
            The types of jobs that a Job Service is allowed to run.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobsTypes.None">
            <summary>
            No jobs of any type
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobsTypes.Build">
            <summary>
            Build Jobs
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobsTypes.BuildRetention">
            <summary>
            BuildRetention Jobs
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobsTypes.Drop">
            <summary>
            Drop Jobs
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobServiceState">
            <summary>
            The state that the JobService is currently in
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobServiceState.Normal">
            <summary>
            The JobService will process a waiting LegInstance ready to run if these conditions are met: 
            The JobService is online. 
            The Job is one of the allowed Job Types. 
            Affinities allow the given LegInstances to run on the given machine. 
            There are enough worker threads available. 
            BuildTracker administrators did not prevent LegInstances of the given priority from running on the Manage BuildTracker page. 
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobServiceState.CommunicationPaused">
            <summary>
            The JobService's communication currently paused, meaning it stopped reporting the status/logs of 
            running LegInstances and is not processing any new LegInstances. 
            This provides an opportunity to do maintenance on the database machine for example. 
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobServiceState.Reboot">
            <summary>
            The machine is currently being rebooted and the JobServices on this machine are not processing LegInstances.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobServiceState.DelegationPaused">
            <summary>
            The JobService is currently not running any legs and will be bypassed for delegation. 
            Any LegInstances that are dependent on this machine will remain in the waiting state. 
            This provides an opportunity to do maintenance on this JobService machine. 
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobServiceType">
            <summary>
            The type of the JobService, as specified by the type of legs that it runs.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobServiceType.Unknown">
            <summary>
            Unknown type of JobService
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobServiceType.LocalLegs">
            <summary>
             Handled by BuildQ that executes the LegInstances locally on the current machine. 
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobServiceType.RemoteLegs">
            <summary>
            Handled by BuildRemoteExec that delegates the LegInstance execution to a machine enabled for Remote Execution. 
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IJobService36Qfe1">
            <summary>
            Service methods that perform actions related to BuildTracker JobServices 
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobService36Qfe1.Update(Microsoft.BuildTracker.Contracts.JobServiceData)">
            <summary>
            Update the local JobService
            </summary>
            <param name="jobServiceData">JobServiceData object to update</param>
            <returns>A JobServiceData object with properties repopulated from BuildTracker</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobService36Qfe1.Delete(System.Int32)">
            <summary>
            Delete the JobService
            </summary>
            <param name="jobServiceId">Id of the JobService that should be deleted</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobService36Qfe1.GetById(System.Int32)">
            <summary>
            Get a jobService by it's ID value
            </summary>
            <param name="jobServiceId">Id of the JobService</param>
            <returns>JobService object with latest data.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobService36Qfe1.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.AccessDeniedFault">
            <summary>
            Fault which is thrown when user is not authorize to access the resource
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ApiFault">
            <summary>
            Base fault from the API WCF interface
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ApiFault.#ctor(System.String)">
            <summary>
            Constructor for ApiFault
            </summary>
            <param name="message">Message that describes the fault</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ApiFault.#ctor(System.String,System.String)">
            <summary>
            Constructor for ApiFault
            </summary>
            <param name="message">Message the describes the fault</param>
            <param name="stackTrace">Inner exception stacktrace details</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ApiFault.Message">
            <summary>
            Message that describes the fault
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ApiFault.StackTrace">
            <summary>
            Exception StackTrace details.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.AccessDeniedFault.#ctor(System.String,System.String)">
            <summary>
            Constructor with exception message and stacktrace details as input parameter
            </summary>
            <param name="message">exception message</param>
            <param name="stackTrace">exception details</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.AccessDeniedFault.UserName">
            <summary>
            Property to store requester's UserName
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ArgumentFault">
            <summary>
            Fault that is thrown when an incorrect argument is passed to a method
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ArgumentFault.#ctor(System.String)">
            <summary>
            Constructor for ArgumentFault
            </summary>
            <param name="message">Message that describes the fault</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ArgumentFault.#ctor(System.String,System.String)">
            <summary>
            Constructor for ArgumentFault
            </summary>
            <param name="message">Message that describes the fault</param>
            <param name="stackTrace">Inner exception stacktrace details</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ArgumentFault.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for ArgumentFault.  Forms a message from parameters.
            </summary>
            <param name="argumentName">passed argument</param>
            <param name="message">exception message</param>
            <param name="stackTrace">Inner exception stacktrace details</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.BuildResult">
            <summary>
            Possible build results
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.BuildResult.Unknown">
            <summary>
            Build result is unknown
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.BuildResult.Success">
            <summary>
            All related build job instances completed successfully.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.BuildResult.Failed">
            <summary>
            At least one related build job instance failed.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.BuildResult.Running">
            <summary>
            At least one related build job instance is still running.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.BuildDropRetentionStatus">
            <summary>
            Possible statuses of a build drop
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.BuildDropRetentionStatus.Deleted">
            <summary>
            The build drop has been deleted.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.BuildDropRetentionStatus.Preserved">
            <summary>
            The build drop has been preserved and will not be automatically deleted until it's unpreserved.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.BuildDropRetentionStatus.Unpreserved">
            <summary>
            The build is unpreserved and all applicable retention policies will impact it.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.BuildDropRetentionStatus.DeleteRequested">
            <summary>
            The build drop is scheduled for deletion.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.BuildDropData">
            <summary>
            Represents a build drop (an output of a build job)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.Id">
            <summary>
            Id of this BuildDrop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.BuildShareGroupId">
            <summary>
            Id of a BuildShareGroup that contains this build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.Name">
            <summary>
            The name of this build drop as defined in the build's scripts.
            Typically this is the version string.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.SourcePath">
            <summary>
            Path to the Sources location of this build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.DropPath">
            <summary>
            Path to the Drop location of this build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.LogsPath">
            <summary>
            Path to the Logs location of this build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.StartedTime">
            <summary>
            The moment when the build drop started being copied to its BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.DroppedTime">
            <summary>
            The moment when the build drop was dropped to the BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.DeletedTime">
            <summary>
            The moment when the build drop was deleted from the BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.Size">
            <summary>
            The size of the build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.RetentionStatus">
            <summary>
            Indicates the retentions status (deleted, preserved, etc. ...)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.RetentionMessage">
            <summary>
            Any retention related messages go here.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.RetentionExceptionOccurred">
            <summary>
            Indicates if there were any issues while processing retention for this build drop.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.Result">
            <summary>
            Overall build result. This is an aggregation of all BuildJobInstance statuses for this BuildDrop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.BuildDropParameters">
            <summary>
            Collection of BuildDropParameters for this BuildDrop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildDropData.ExtensionData">
            <summary>
            Used for storing and retrieving values (round-tripping) of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IBuildDrop">
            <summary>
            BuildDrop related operations
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildDrop.AddRemark(System.Int32,System.Int32,System.String)">
            <summary>
            Adds a new build drop remark
            </summary>
            <param name="buildDropId">id of the build drop to change the status for</param>
            <param name="text">the text of the remark to add</param>
            <param name="type">the type of the remark to add</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildDrop.GetRemarks(System.Int32)">
            <summary>
            Gets all remarks associated with the given build drop
            </summary>
            <param name="buildDropId">id of the build drop</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildDrop.GetBuildJobInstances(System.Int32)">
            <summary>
            Gets all related build job instances
            </summary>
            <param name="buildDropId">id of the build drop</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildDrop.GetRetentionJobInstances(System.Int32)">
            <summary>
            Gets all related retention job instances
            </summary>
            <param name="buildDropId">id of the build drop</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildDrop.GetDropJobInstances(System.Int32)">
            <summary>
            Gets all related drop job instances
            </summary>
            <param name="buildDropId">id of the build drop</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildDrop.ChangeRetentionStatus(System.Int32,System.Int32)">
            <summary>
            changes the retention status for a given build drop
            </summary>
            <param name="buildDropId">id of the build drop to change the status for</param>
            <param name="newStatus">the new status to set the build drop to</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildDrop.Backup(System.Int32)">
            <summary>
            Requests a backup of this build drop
            </summary>
            <param name="buildDropId">id of the build drop to change the status for</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildDrop.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IBuildDrop36Qfe1">
            <summary>
            BuildDrop related operations
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildDrop36Qfe1.Update(Microsoft.BuildTracker.Contracts.BuildDropData)">
            <summary>
            Updates an existing BuildDrop with data from a BuildDropData object
            </summary>
            <param name="buildDropData">A BuildDropData object with field values that are to be updated on a BuildTracker build</param>
            <returns>A BuildDropData object that contains the updated field values</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.BuildShareGroupData">
            <summary>
            Stores data for BuildShareGroup
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.BuildShareGroupData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.Name">
            <summary>
            Name of this BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.Id">
            <summary>
            unique Id
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.ParentId">
            <summary>
            Id of the parent item, Only Product or Branch can be parent of a BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.Description">
            <summary>
            Description of BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.BuildShareGroupType">
            <summary>
            Type of BuildShareGroup, e.g. Official, Buddy etc.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.DropSharePath">
            <summary>
            path for drop folder, location where drop folder should be created 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.SourceSharePath">
            <summary>
            path for source folder, location where source folder should be created 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.RunAsAlias">
            <summary>
            If non-null, retention and drop jobs will run under this account.
            If null, default user's credentials will be used.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this BuildShareGroup.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.DiscoverBuilds">
            <summary>
            Builds are auto-discovered if they exist on a Build Share, or marked as deleted if they do not exist on a Build Share.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.PreserveBuilds">
            <summary>
            If specified, discover builds will be preserved
            Preserved builds are excluded from any Build Retention Policies
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.RetentionRequiresOwnerApproval">
            <summary>
            Build retention policy instances can only queue retention jobs in pending state at queue time.
            A Build Share Group owner needs to approve the job execution.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.RetentionJobDefinitionId">
            <summary>
            Id of RetentionJob which will be associated with this BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.EnlistmentSettings">
            <summary>
            Stores generic enlistment settings
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.InheritBuildDropParameters">
            <summary>
            A value of true indicates that this BuildShareGroup inherits BuildDropParameter definitions from it's parent product or branch.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.BuildDropParameters">
            <summary>
            Collection of BuildDropParameters for this BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildShareGroupData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that may be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IBuildShareGroup">
            <summary>
            Set of operations allowed to manage Build Share Group
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.Save(Microsoft.BuildTracker.Contracts.BuildShareGroupData)">
            <summary>
            To Update the buildShareGroup
            </summary>
            <param name="buildShareGroupData">populated object of buildShareData</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.Delete(System.Int32)">
            <summary>
            To Delete buildShareGroup
            </summary>
            <param name="buildShareGroupId">Id of the buildShareGroup which should be deleted</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.GetById(System.Int32)">
            <summary>
            To Refresh the data of BuildShareGroup
            </summary>
            <param name="buildShareGroupId">Id of BuildShareGroup, Need to be refreshed</param>
            <returns>object of BuildShareGroupData with latest data.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.GetBuildDrops(System.Int32,System.Boolean)">
            <summary>
            Returns the BuildDrops for the given BuildShareGroup
            </summary>
            <param name="buildShareGroupId">Id of the BuildShareGroup to retrieve the BuildDrops for.</param>
            <param name="includeDeletedBuilds">Flag indicating whether deleted BuildDrops should be included in the returned collection.</param>
            <returns>A collection of BuildDropData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.IncludeSystemPolicy(System.Int32,System.Int32)">
            <summary>
            Includes a system wide drop policy, which was previously excluded for this BSG.
            </summary>
            <param name="buildShareGroupId">ID of the BuildShareGroup</param>
            <param name="systemDropPolicyId">ID of the system-wide retention policy to exclude</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.ExcludeSystemPolicy(System.Int32,System.Int32)">
            <summary>
            Excludes a system wide drop policy for this BSG.
            </summary>
            <param name="buildShareGroupId">ID of the BuildShareGroup</param>
            <param name="systemDropPolicyId">ID of the system-wide drop policy to exclude</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.CreateDropPolicy(Microsoft.BuildTracker.Contracts.DropPolicyData)">
            <summary>
            Method to create local Drop Policy for this buildsharegroup
            </summary>
            <param name="dropPolicyData">object of dropPolicyData to create new drop Policy</param>
            <returns>object of DropPolicyData, create by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.CreateAdminDropPolicy(Microsoft.BuildTracker.Contracts.DropPolicyData)">
            <summary>
            Method to create Admin Drop Policy for this buildsharegroup
            </summary>
            <param name="dropPolicyData">object of dropPolicyData to create new drop Policy</param>
            <returns>object of DropPolicyData, create by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.CreateRetentionPolicy(Microsoft.BuildTracker.Contracts.RetentionPolicyData)">
            <summary>
            Method to create new local retention policy for this buildsharegroup
            </summary>
            <param name="retentionPolicyData">object of retentionPolicyData to create new retention Policy</param>
            <returns>object of retentionPolicyData</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.CreateAdminRetentionPolicy(Microsoft.BuildTracker.Contracts.RetentionPolicyData)">
            <summary>
            Method to create new admin retention policy for this buildsharegroup
            </summary>
            <param name="retentionPolicyData">object of retentionPolicyData to create new admin RetentionPolicy</param>
            <returns>object of retentionPolicyData, created by this operation</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.GetAdminDropPolicies(System.Int32)">
            <summary>
            Only a lab admin can create admin policies. These are forced on a given BSG. And cannot be opted out of.
            </summary>
            <param name="buildShareGroupId">ID of the BSG</param>
            <returns>Collection of DropPolicyData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.GetAdminRetentionPolicies(System.Int32)">
            <summary>
            Only a lab admin can create admin policies. These are forced on a given BSG. And cannot be opted out of.
            </summary>
            <param name="buildShareGroupId">ID of the BSG</param>
            <returns>Collection of RetentionPolicyData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.GetDropPolicies(System.Int32)">
            <summary>
            Gets a collection of all local drop policies defined for this BSG.
            </summary>
            <param name="buildShareGroupId">ID of the BSG</param>
            <returns>Collection of DropPolicyData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.GetRetentionPolicies(System.Int32)">
            <summary>
            Gets a collection of all local retention policies defined for this BSG.
            </summary>
            <param name="buildShareGroupId">ID of the BSG</param>
            <returns>Collection of RetentionPolicyData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.GetExcludedSystemDropPolicies(System.Int32)">
            <summary>
            System wide drop policies which are opted out of/excluded for this BSG.
            </summary>
            <param name="buildShareGroupId">ID of the BSG</param>
            <returns>Collection of drop policies</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.GetExcludedSystemRetentionPolicies(System.Int32)">
            <summary>
            System wide retention policies which are opted out of/excluded for this BSG.
            </summary>
            <param name="buildShareGroupId">ID of the BSG</param>
            <returns>Collection of retention policies</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup36Qfe1.GetBuildDrop(System.Int32,System.String)">
            <summary>
            Returns the BuildDrop for the given BuildShareGroup with the given name
            </summary>
            <param name="buildShareGroupId">Id of the BuildShareGroup to retrieve the BuildDrops for.</param>
            <param name="buildDropName">Name of the build drop to get.</param>
            <returns>A BuildDropData object</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildShareGroup36Qfe1.Update(Microsoft.BuildTracker.Contracts.BuildShareGroupData)">
            <summary>
            To Update the buildShareGroup
            </summary>
            <param name="buildShareGroupData">populated object of buildShareData</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ApiServerVersion">
            <summary>
            Lists known Api Server versions
            This is used mainly for compatiblity scenarios 
            (newer client -> older service or older client -> newer service)
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ApiServerVersion.BuildTracker36">
            <summary>
            3.6
            </summary>
            <remarks>
            v3.6 API server does not provide this functionality, but the default value for int
            is 0 in WCF and this field in the data contract is not required. 
            So 0 simply means 3.6
            </remarks>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ApiServerVersion.BuildTracker36Qfe1">
            <summary>
            3.6 Qfe1
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LabConfigurationData">
            <summary>
            Settings to fine-tune lab's operation.
            These can be changed by lab admins only.
            For security reasons, some values are only populated for BT Administrators.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.LabConfigurationData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.TimeZoneName">
            <summary>
            The time zone of the BuildTracker system. 
            </summary>
            <remarks>This field is currently set to the DB server TZ during the setup.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.AllowJobsToRunWithAdminPrivileges">
            <summary>
            Allow jobs to run under accounts which have admin privileges on build machines.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.KeepDaysOfLegLogs">
            <summary>
            The number of days of leg logs history to keep.
            Minimum value = 0, recommend value = 14.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.KeepMonthsOfJobInstanceHistory">
            <summary>
            Number of months of job history (i.e. start/end/sync time, owner and status of JobInstances/LegInstances) to retain. 
            Minimum value = 1. Recommended value = 12.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.KeepMonthsOfBuildHistory">
            <summary>
            Number of Months of Deleted Build History to Keep 
            Minimum value = 2. Recommended value = 12.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.KeepMonthsOfEnlistmentHistory">
            <summary>
            Number of Months of Deleted Enlistment History to Keep 
            Minimum value = 1. Recommended value = 3.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.KeepMonthsOfEnlistmentLogs">
            <summary>
            Number of Months of Enlistment Logs to Keep 
            Minimum value = 1. Recommended value = 3.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.KeepMonthsOfJobDefinitionCopies">
            <summary>
            Number of months of versioned Job copies (i.e. snapshot of the job definition at a given time) to retain. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.KeepWeeksOfNotificationHistory">
            <summary>
            Number of Weeks of Notifications History to Keep
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.KeepWeeksOfEmailHistory">
            <summary>
            Number of Weeks of E-mail History to Keep
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.MinimumAllowedJobPriority">
            <summary>
            Minimum Priority Required for a JobQueue to Run Used to prevent JobQueues of lower priority from running. 
            Only JobQueues of identical or higher priority will go from Submitted to Sequenced.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.DatabaseMachine">
            <summary>
            The name of the machine that has the BuildTracker Database.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.InstalledOn">
            <summary>
            The date the latest installation or upgrade took place. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.DomainName">
            <summary>
            The domain name the primary parts of the system belong to.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.KeyManagementMachine">
            <summary>
            Location of the machine that runs buildK - the Key Management service.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.Leaf">
            <summary>
            An optional free-formed HTML document that describes your BuildTracker instance. 
            The file should not exceed 20Kb. Its contents will be shown on the top left of each BuildTracker page. 
            Please ensure that the HTML syntax is correct and that your leaf does not break the layout of the pages.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.LabStatusLeaf">
            <summary>
            An optional free-formed HTML document that describes your BuildTracker instance current status. 
            The file should not exceed 20Kb. Its contents will be shown on the top of each BuildTracker page. 
            Please ensure that the HTML syntax is correct and that your leaf does not break the layout of the pages.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.SmtpServer">
            <summary>
            Use SMTPHost on MS corpnet unless you're in a domain which cannot access it.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.MailStyleSheet">
            <summary>
            Stylesheet used when sending e-mail notifications.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.SchedulerMachine">
            <summary>
            The name of the machine hosting the Scheduler (buildS) service.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.VstsShares">
            <summary>
            A semi-colon delimited list of shares from which BuildTracker will try to copy the necessary 
            TFS files (tf.exe, etc.) when enlisting from web. 
            The enlistment script will try using the first share in the list, then the second, etc.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.SourceDepotShares">
            <summary>
            A semi-colon delimited list of shares that BuildTracker will try to copy sd.exe from when enlisting from web. 
            The enlistment script will try using the first share in the list, then the second, etc.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.SdxScript">
            <summary>
            Location and filename of script to use when enlisting for Enlistment Managers of type sdx.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.Version">
            <summary>
            The latest version installed on this BuildTracker system.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.WebUrl">
            <summary>
            The base location of the main Web UI server.
            </summary>
            <remarks>This is often set to the load-balancer address.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.LabName">
            <summary>
            The name of the BuildTracker lab (e.g. Acme Products Build Lab). 
            The name will be shown on the top left of each BuildTracker page. 
            However, if a BuildTracker Leaf is also the defined the BuildTracker Leaf will be displayed instead.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.LabContacts">
            <summary>
            The contats to communicate with about lab issues.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.Id">
            <summary>
            The unique ID of this instance of BuildTracker.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.AllowDataCollection">
            <summary>
            Indicates if information about this instance of BuildTracker can be tracked in the central registration
            database run by the BuildTracker team.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.SdkUrl">
            <summary>
            The main address of the legacy programmatic access to BuildTracker.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.ApiUrl">
            <summary>
            The main base address of the API service.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.EstimatedExecutionTimeThreshold">
            <summary>
            Minimum number time a LegQueue must run before the execution time is checked against the 
            Estimated Execution Time to see if the LegQueue is overdue. 
            For example, if EET Threshold is set to 60 minutes, BuildTracker will not check to see if the LegQueue 
            is overdue until it has run for at least 60 minutes. 
            </summary>
            <remarks>Currently the granularity is minutes. Any fractions of minutes will be rounded down.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.EstimatedExecutionTimeDelayed">
            <summary>
            How much time over the EET that will trigger a delay warning. Default is 60 minutes. 
            </summary>
            <remarks>Currently the granularity is minutes. Any fractions of minutes will be rounded down.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.EstimatedExecutionTimeOverdue">
            <summary>
            The amount of time over the EET that will trigger an overdue warning. Default is 180 minutes. 
            </summary>
            <remarks>Currently the granularity is minutes. Any fractions of minutes will be rounded down.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.SourceControlRetryAttempts">
            <summary>
            The total number of times BuildTracker will attempt to connect to source depot. 
            The minimum is 1 for the original connection attempt. 
            The default is 3 to allow 2 retry attempts. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.SourceControlRetryInterval">
            <summary>
            How long to wait in between attempts. The default is 10s.
            </summary>
            <remarks>Currently the value is rounded down to full seconds</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.BackupEnabled">
            <summary>
            By default, the backup feature in BuildTracker is not enabled. 
            Checking the box will enable the backup feature. 
            See the How To Configure Backup section of the help for an explanation of the backup feature 
            and steps on customizing it for your lab. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.BackupPromptText">
            <summary>
            Use this field to add custom text about your custom lab backup job and policies. 
            BuildTracker will append this text to the confirmation dialog that is shown when the "Backup" button 
            is clicked on the Build Drops grid and when a product or branch owner creates a drop policy 
            to do automatic backup. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.BuildShareGroupTypes">
            <summary>
            The list of Build Share Group Types (e.g. categories of build shares, such as 'Official' and 'Buddy' build shares).
            System-wide policy instances (including Build Retention and Build Drop policy instances) 
            can be defined for all Build Share Groups of the same type
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.ServiceIntervals">
            <summary>
            A collection of ServiceIntervalData objects used to determine whether the services in your lab are functioning normally. 
            Each ServiceIntervalData object represents a task that repeats at the specified interval. 
            </summary>
            <remarks>
            Notes: Any changes made may take several minutes to propagate to all affected services. 
            The last ping data is cached (updated every 2 minutes).
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.DefaultRunAsAlias">
            <summary>
            This will be the default user for running jobs.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.LabManagementAlias">
            <summary>
            This will be the user used by services for managing the lab.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.ApiServerVersion">
            <summary>
            Indicates the version of the Api server the client is calling
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LabConfigurationData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.MachineGroupData">
            <summary>
            Metadata about a machine group + the machines that belong to this group.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.MachineGroupData.#ctor(System.String,System.Int32,System.String,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Constructor
            </summary>     
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.MachineGroupData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineGroupData.Machines">
            <summary>
            IDs of the machines that belong to this group.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineGroupData.Name">
            <summary>
            Name of this machine group
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineGroupData.Id">
            <summary>
            Id of the MachineGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineGroupData.Description">
            <summary>
            Machine's description
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineGroupData.Owners">
            <summary>
            A list of owners who can manage this machine group
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineGroupData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IMachineGroup">
            <summary>
            Service methods that perform actions related to BuildTracker products 
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachineGroup.GetById(System.Int32)">
            <summary>
            Returns the machineGroup that has the given id
            </summary>
            <param name="machineGroupId">Id of the machineGroup to return</param>
            <returns>MachineGroupData object for the requested machineGroup</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachineGroup.Update(Microsoft.BuildTracker.Contracts.MachineGroupData)">
            <summary>
            Updates and existing machineGroup with data from a MachineGroupData object
            </summary>
            <param name="machineGroup">A MachineGroupData object with field values that are to be updated on a BuildTracker machineGroup</param>
            <returns>A MachineGroupData object that contains the updated field values</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachineGroup.Delete(System.Int32)">
            <summary>
            Deletes a machineGroup from BuildTracker
            </summary>
            <param name="machineGroupId">Id of the machineGroup to be deleted</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachineGroup.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.DiskData">
            <summary>
            Contains the data members related to a disk
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.DiskData.#ctor(System.Int32,System.Char,System.Boolean,System.Boolean,System.Byte,System.Byte,System.Byte,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Constructor
            </summary>
            <param name="id"></param>
            <param name="driveLetter"></param>
            <param name="canEnlist"></param>
            <param name="allowLogs"></param>
            <param name="freeSpacePercentageErrorLevel"></param>
            <param name="freeSpacePercentageWarningLevel"></param>
            <param name="freeSpacePercentageRequiredLevel"></param>
            <param name="freeSpaceRequiredMB"></param>
            <param name="totalSize"></param>
            <param name="availableSize"></param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.Id">
            <summary>
            Id of the Disk
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.DriveLetter">
            <summary>
            Letter for this drive
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.CanEnlist">
            <summary>
            Indicates if BuildTracker can use this disk for enlistments.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.AllowLogs">
            <summary>
            Indicates if BUildTracker can store logs on this disk.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.FreeSpacePercentageErrorLevel">
            <summary>
            Errors are triggered if free space is below this % level
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.FreeSpacePercentageWarningLevel">
            <summary>
            Warnings are triggered if free space is below this % level
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.FreeSpacePercentageRequiredLevel">
            <summary>
            BuildTracker will cleanup disk space (enlistements, logs) if free space is below this % level.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.FreeSpaceRequiredMB">
            <summary>
            Mb required of free space. If less free space is requested, cleanup will start.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.TotalSize">
            <summary>
            Total disk size in Mb
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.AvailableSize">
            <summary>
            Available disk size in Mb
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DiskData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IDisk">
            <summary>
            Operations for managing a Disk
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IDisk.Update(Microsoft.BuildTracker.Contracts.DiskData)">
            <summary>
            Updates an existing disk with data from a DiskData object
            </summary>
            <param name="disk">A disk object with field values that are to be updated on a BuildTracker Disk</param>
            <returns>A DiskData object set with the updated field values</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IDisk.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.EnlistmentSettingsData">
            <summary>
            Stores generic enlistment settings, BuidlTracker uses when assigning real enlistments on disk or creating new enlistments
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.EnlistmentSettingsData.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To set properties values
            </summary>
            <param name="fixedEnlistmentPath">value to set unique enilistment configuration in place of auto-enlistment</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.EnlistmentSettingsData.Clean">
            <summary>
            If specified, removes any pending changes before the leg command is run.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.EnlistmentSettingsData.InheritClean">
            <summary>
            Allows to inherit Parent's Clean settings, local Clean settings will be ignored
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.EnlistmentSettingsData.FixedEnlistmentPath">
            <summary>
            To set fixed enlistment path, or static enlistment
            If specified, All other settings are ignored
            If left blank, BuildTracker will attempt to auto-enlist using the specified SourceDepot, SDX, Folder and TFS settings when running a Leg
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.EnlistmentSettingsData.InheritFixedEnlistmentPath">
            <summary>
            Allows to inherit Parent's FixedEnlistmentPath settings, local FixedEnlistmentPath settings will be ignored
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.EnlistmentSettingsData.DisableAclReset">
            <summary>
            Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.EnlistmentSettingsData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData">
            <summary>
            Stores enlistment settings for Source Depot control
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To set properties values
            </summary>
            <param name="serverName">Source Depot server name and port number to use to Auto-Enlist on build machines</param>
            <param name="proxyServerName">Source Depot proxy server name and port number to use for fetching source files during a build jobs</param>
            <param name="clientView">Source Depot client view to use to Auto-Enlist on build machines. Use the [CLIENT] keyword to denote the client name that is auto-generated</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData.ServerName">
            <summary>
            Source Depot server name and port number to use to Auto-Enlist on build machines.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData.InheritServerName">
            <summary>
            Allows to inherit Parent's ServerName, local ServerName will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData.ProxyServerName">
            <summary>
            Source Depot proxy server name and port number to use for fetching source files during a build jobs.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData.InheritProxyServerName">
            <summary>
            Allows to inherit Parent's ProxyServerName, local ProxyServerName will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData.ClientView">
            <summary>
            Source Depot client view to use to Auto-Enlist on build machines. Use the [CLIENT] keyword to denote the client name that is auto-generated.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData.InheritClientView">
            <summary>
            Allows to inherit Parent's ClientView, local ClientView will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData.ClientOptions">
            <summary>
            Source Depot client options used when creating an enlistment on build machines. If empty, the default client options are used: noallwrite clobber nocompress locked nomodtime rmdir
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SourceDepotEnlistmentSettingsData.InheritClientOptions">
            <summary>
            Allows to inherit Parent's ClientOptions, local ClientOptions will be ignored.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.SdxEnlistmentSettingsData">
            <summary>
            Stores enlistment settings for SDX source control
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.SdxEnlistmentSettingsData.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To set properties values
            </summary>
            <param name="codeBase">The SDX CodeBase. Ignored if Fix Enlistment Path is set</param>
            <param name="projects">A list of projects. If not specified, -a will be passed to sdx enlist when creating new enlistments. Ignored if Fix Enlistment Path is set</param>
            <param name="branch">The SDX Branch. Ignored if Fixed Enlistment Path is set</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SdxEnlistmentSettingsData.CodeBase">
            <summary>
            The SDX CodeBase. Ignored if Fix Enlistment Path is set
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SdxEnlistmentSettingsData.InheritCodeBase">
            <summary>
            Allows to inherit Parent's CodeBase settings, local CodeBase settings will be ignonred.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SdxEnlistmentSettingsData.Projects">
            <summary>
            A list of projects. If not specified, -a will be passed to sdx enlist when creating new enlistments. Ignored if Fix Enlistment Path is set
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SdxEnlistmentSettingsData.InheritProject">
            <summary>
            Allows to inherit Parent's Projects settings, local Projects settings will be ignonred.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SdxEnlistmentSettingsData.Branch">
            <summary>
            The SDX Branch. Ignored if Fix Enlistment Path is set
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.SdxEnlistmentSettingsData.InheritBranch">
            <summary>
            Allows to inherit Parent's Branch settings, local Branch settings will be ignonred.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.TeamFoundationServerEnlistmentSettingsData">
            <summary>
            Stores enlistment settings for TFS source control
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.TeamFoundationServerEnlistmentSettingsData.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To Set properties values
            </summary>
            <param name="teamFoundationServerName">Team Foundation Server URL, Optional when an Enlistment Root is specified</param>
            <param name="workspaceMapping">Similar to what tf.exe workfold would return in your workspace. Use [CLIENT] to specify the root directory that BuildTracker will automatically create when auto-enlisting</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.TeamFoundationServerEnlistmentSettingsData.ServerName">
            <summary>
            Team Foundation Server URL, Optional when Fixed Enlistment Path is specified
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.TeamFoundationServerEnlistmentSettingsData.InheritServerName">
            <summary>
            Allows to inherit Parent's TeamFoundationServerName settings, local TeamFoundationServerName settings will be ignored
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.TeamFoundationServerEnlistmentSettingsData.WorkspaceMapping">
            <summary>
            Similar to what tf.exe workfold would return in your workspace. Use [CLIENT] to specify the root directory that BuildTracker will automatically create when auto-enlisting.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.TeamFoundationServerEnlistmentSettingsData.InheritWorkspaceMapping">
            <summary>
            Allows to inherit Parent's WorkspaceMapping settings, local WorkspaceMapping settings will be ignored
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.FolderEnlistmentSettingsData">
            <summary>
            Stores Enlistment settings for folder enlistment on a disk
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.FolderEnlistmentSettingsData.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To set properties values
            </summary>
            <param name="fixedEnlistmentPath">value to set unique enilistment configuration in place of auto-enlistment</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.EnlistmentType">
            <summary>
            Possible type of enlistments
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.EnlistmentType.Folder">
            <summary>
            Folder enlistment
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.EnlistmentType.SourceDepot">
            <summary>
            Source Depot enlistment
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.EnlistmentType.TeamFoundation">
            <summary>
            Team Foundation enlistment
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.EnlistmentType.SDX">
            <summary>
            SDX enlistment
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.EnumerationFault">
            <summary>
            Fault that is thrown when encountering an enumeration value that doesn't exist
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.EnumerationFault.#ctor(System.String,System.Int32)">
            <summary>
            Constructor for EnumerationFault
            </summary>
            <param name="enumType">Name of the enumeration type</param>
            <param name="enumValue">Integer value that is invalid for this enumeration type</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.EnumerationFault.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Constructor for EnumerationFault
            </summary>
            <param name="enumType">Name of the enumeration type</param>
            <param name="enumValue">Integer value that is invalid for this enumeration type</param>
            <param name="stackTrace">Inner exception stacktrace details</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.BranchData">
            <summary>
            Contains the data members related to a BuildTracker branch
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.BranchData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.Name">
            <summary>
            Name of the branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.Id">
            <summary>
            BuildTracker Id value of the branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.CreateTime">
            <summary>
            DateTime when the branch was created
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.ProductId">
            <summary>
            BuildTracker Id value of the parent product of this branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.RunAsAlias">
            <summary>
            Account to run legs under, unless overridden. If null, the product account will be used.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this branch.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.Owners">
            <summary>
            List of aliases that are owners for this branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.EnlistmentSettings">
            <summary>
            Stores generic enlistment settings
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.InheritBuildDropParameters">
            <summary>
            A value of true indicates that this branch inherits BuildDropParameter definitions from it's parent product.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.BuildDropParameters">
            <summary>
            Collection of BuildDropParameters for this branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BranchData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IBranch">
            <summary>
            Service methods that perform actions related to BuildTracker branches
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.CreateBuildJobDefinition(Microsoft.BuildTracker.Contracts.BuildJobDefinitionData)">
            <summary>
            Creates a new BuildJobDefinition
            </summary>
            <param name="definition">A BuildJobDefinitionData object that defines the fields for the build job</param>
            <returns>A BuildJobDefnitionData object that is populated with the data of the newly created build job</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.GetBuildJobDefinition(System.Int32,System.String)">
            <summary>
            Get a BuildJobDefinition
            </summary>
            <param name="branchId">Id of the parent branch</param>
            <param name="jobName">Name of the build job to retrieve</param>
            <returns>BuildJobDefinitionData object that is populated with the data of the build job that was requested</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.Update(Microsoft.BuildTracker.Contracts.BranchData)">
            <summary>
            Updates an existing branch with data from a BranchData object
            </summary>
            <param name="branchData">A BranchData object with field values that are to be updated on a BuildTracker branch</param>
            <returns>A BranchData object that contains the updated field values</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.Delete(System.Int32)">
            <summary>
            Deletes a BuildTracker branch
            </summary>
            <param name="branchId">Id of the branch to be deleted</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.GetById(System.Int32)">
            <summary>
            Gets the branch that has the given Id
            </summary>
            <param name="branchId">Id of the branch to return</param>
            <returns>A BranchData object set with field values coresponding to the requested BuildTracker branch</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.GetBuildJobDefinitions(System.Int32)">
            <summary>
            Returns all BuildJobs for the given branch
            </summary>
            <param name="branchId">Id of the branch to retrieve jobs for</param>
            <returns>A list of BuildJobDefinitionData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.CreateBuildShareGroup(Microsoft.BuildTracker.Contracts.BuildShareGroupData)">
            <summary>
            Creates new BuildShareGroup 
            </summary>
            <param name="buildShareGroupData">object of BuildShareGroupData to create new BuildShareGroup</param>
            <returns>object of BuildShareGroup created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.GetBuildShareGroups(System.Int32)">
            <summary>
            Returns collection of BuildShareGroups associated with this Branch
            </summary>
            <param name="branchId">Id of the current branch</param>
            <returns>Collection of BuildShareGroups associated with this branch</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.GetBuildShareGroup(System.Int32,System.String)">
            <summary>
            Get a BuildShareGroup
            </summary>
            <param name="branchId">Id of the parent branch</param>
            <param name="buildShareGroupName">Name of the BuildShareGroup to retrieve</param>
            <returns>BuildShareGroupData object that is populated with the data of the BuildShareGroup that was requested</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IBranch36Qfe1">
            <summary>
            Service methods that perform actions related to BuildTracker branches
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBranch36Qfe1.GetJobSchedules(System.Int32)">
            <summary>
            Gets all of the JobSchedules for this Branch
            </summary>
            <param name="branchId">ID of the Branch to get JobSchedules for</param>
            <returns>A collection of JobScheduleData objects</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IBuildTracker">
            <summary>
            The top level object in BuildTracker
            Contains information about this BuildTracker installation
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetLabConfiguration">
            <summary>
            Gets the configuration of this BuildTracker instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.UpdateLabConfiguration(Microsoft.BuildTracker.Contracts.LabConfigurationData)">
            <summary>
            Updates BuildTracker configuration data
            </summary>
            <param name="labConfigurationData">The configuration new values.</param>
            <returns>An updated configuration.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.CreateMachine(System.String)">
            <summary>
            Creates a new BuildTracker machine
            </summary>
            <param name="machineName">Name of the new machine</param>
            <returns>MachineData object populated with the data of the newly created machine</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetMachine(System.String)">
            <summary>
            Returns the machine that has the given name
            </summary>
            <param name="machineName">Name of the machine to return</param>
            <returns>MachineData object for the requested machine</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetMachines(System.Boolean)">
            <summary>
            Returns all of the machines for this instance of BuildTracker
            </summary>
            <param name="includeDeleted">Indicates wheather to include the deleted machines or not.</param>
            <returns>A list of MachineData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.CreateMachineGroup(System.String)">
            <summary>
            Creates a new BuildTracker machineGroup
            </summary>
            <param name="machineGroupName">Name of the new machineGroup</param>
            <returns>MachineGroupData object populated with the data of the newly created machineGroup</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetMachineGroup(System.String)">
            <summary>
            Returns the machineGroup that has the given name
            </summary>
            <param name="machineGroupName">Name of the machineGroup to return</param>
            <returns>MachineGroupData object for the requested machineGroup</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetMachineGroups">
            <summary>
            Returns all of the machineGroups for this instance of BuildTracker
            </summary>
            <returns>A list of MachineGroupData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.CreateAffinity(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            Creates a new affinity to a resource
            </summary>
            <param name="jobType">Type of job afffinity applies to</param>
            <param name="resourceId">Id of the resource to be affinitied</param>
            <param name="resourceType">Type of resource to affinity to</param>
            <param name="alternateParentId">Id of the parent to use for the affinity when the affinity is set to a system-level resource</param>
            <param name="machineGroupId">Id of the MachineGroup to affinity with</param>
            <param name="affinityType">The type of affinity relationship</param>
            <returns>AffinityData object populated with the data of the newly created affinity</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetAffinities(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Returns all of the affinities for this instance of BuildTracker
            </summary>
            <returns>A list of AffinityData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.CreateProduct(System.String)">
            <summary>
            Creates a new BuildTracker product
            </summary>
            <param name="productName">Name of the new product</param>
            <returns>ProductData object populated with the data of the newly created product</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetProduct(System.String)">
            <summary>
            Returns the product that has the given name
            </summary>
            <param name="productName">Name of the product to return</param>
            <returns>ProductData object for the requested product</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetProducts">
            <summary>
            Returns all of the products for this instance of BuildTracker
            </summary>
            <returns>A list of ProductData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetRegisteredProducts">
            <summary>
            Returns all of the products that are registered for the given user
            </summary>
            <returns>A list of ProductData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.CreateRetentionJobDefinition(Microsoft.BuildTracker.Contracts.RetentionJobDefinitionData)">
            <summary>
            Created new system wide RetentionJobDefinition 
            RetentionJobDefinition won't be owned by any specific BuildShareGroup, can be associated with any BuildShareGroup
            </summary>
            <param name="retentionJobDefinitionData">object of RetentionJobDefinitionData to create new RetentionJobDefinition</param>
            <returns>object of RetentionJobDefinitionData, created by this operation</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.CreateDropJobDefinition(Microsoft.BuildTracker.Contracts.DropJobDefinitionData)">
            <summary>
            Created new DropJobDefinition 
            To create system wide drop job definition pass 0 as parent_Id
            </summary>
            <param name="dropJobDefinitionData">object of DropJobDefinitionData to create new DropJobDefinition</param>
            <returns>object of DropJobDefinitionData, created by this operation</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetRetentionJobDefinitions(System.Int32)">
            <summary>
            Returns collection of RetentionJobDefinitions available for passed parent id
            For systemwide RetentionJobDefinitions pass 0 as parent Id
            </summary>
            <param name="buildShareGroupId">Id of parent BuildShareGroup, or 0 for systemwide</param>
            <returns>Collection of RetentionJobDefinitionData for the passed parent id</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetRetentionJobDefinition(System.Int32,System.String)">
            <summary>
            Get a retention job definition by name
            </summary>
            <param name="buildShareGroupId">Id of the parent BuildShareGroup, or 0 for system-wide retention jobs.</param>
            <param name="jobName">Name of the retention job to retrieve.</param>
            <returns>RetentionJobDefinitionData object that is populated with the data of the retention job that was requested</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetDropJobDefinitions(System.Int32)">
            <summary>
            Returns collection of DropJobDefinitions available for passed parent id
            For systemwide DropJobDefinitions pass 0 as parent Id
            </summary>
            <param name="buildShareGroupId">Id of parent BuildShareGroup, or 0 for systemwide</param>
            <returns>Collection of DropJobDefinitionData for the passed parent id</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetDropJobDefinition(System.Int32,System.String)">
            <summary>
            Get a drop job definition by name
            </summary>
            <param name="buildShareGroupId">Id of the parent BuildShareGroup, or 0 for system-wide drop jobs.</param>
            <param name="jobName">Name of the drop job to retrieve.</param>
            <returns>DropJobDefinitionData object that is populated with the data of the drop job that was requested</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetBuildDrop(System.Int32)">
            <summary>
            Gets a build drop by id
            </summary>
            <param name="buildDropId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetSystemDropPolicies">
            <summary>
            Gets a collection of all system drop policies
            </summary>
            <returns>Collection of DropPolicyData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.GetSystemRetentionPolicies">
            <summary>
            Gets a collection of all system retention policies
            </summary>
            <returns>Collection of RetentionPolicyData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.CreateSystemDropPolicy(Microsoft.BuildTracker.Contracts.DropPolicyData)">
            <summary>
            Creates a new system wide drop policy
            </summary>
            <param name="policyData">PolicyData object containing the data for the new policy</param>
            <returns>A PolicyData object populated with the values of the newly created policy</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.CreateSystemRetentionPolicy(Microsoft.BuildTracker.Contracts.RetentionPolicyData)">
            <summary>
            Creates a new system wide retention policy
            </summary>
            <param name="policyData">PolicyData object containing the data for the new policy</param>
            <returns>A PolicyData object populated with the values of the newly created policy</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IBuildTracker36Qfe1">
            <summary>
            Interface service methods added for version QFE1
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker36Qfe1.GetJobSchedules">
            <summary>
            Gets all of the JobSchedules
            </summary>
            <returns>A collection of JobScheduleData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker36Qfe1.GetJobServices(System.Nullable{System.Int32})">
            <summary>
            Gets a collection of all the JobServices for the given machine
            </summary>
            <param name="machineId">Id of machine to get JobServices for.  If null, gets JobServices for all machines in this BuildTracker instance.</param>
            <returns>Collection of JobServiceData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IBuildTracker36Qfe1.QueryBuildDrops(Microsoft.BuildTracker.Contracts.BuildDropQueryData)">
            <summary>
            Executes a query to retrieve BuildDrop items that match the criteria passed in the BuildDropQueryData structure
            </summary>
            <remarks>
            Will validate the data structure and its contents passed in.
            Throws ArgumentFault
            </remarks>
            <returns>A collection of BuildDropData items</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.BuildTrackerData">
            <summary>
            Set of fields for IBuildTracker
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildTrackerData.Name">
            <summary>
            The name of this BuildTracker installation. 
            For example: "Team XYZ Build Lab"
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildTrackerData.Contacts">
            <summary>
            Poeple responsible for this BuildTracker installation.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildTrackerData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.AccountResourceType">
            <summary>
            Type of object to associate a RunAs account to
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.Unknown">
            <summary>
            Unknown resource type
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.LabDefault">
            <summary>
            Default Lab RunAs Account
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.Product">
            <summary>
            Product RunAs account
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.Branch">
            <summary>
            Branch RunAs account
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.DropJob">
            <summary>
            DropJob RunAs account
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.Leg">
            <summary>
            LegDefinition RunAs account
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.LabManagement">
            <summary>
            Lab Management User account
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.BuildRetentionJob">
            <summary>
            Retention Job RunAs account
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.BuildJob">
            <summary>
            Build Job RunAs account
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.BuildShareGroup">
            <summary>
            BuildShareGroup RunAs account
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.AccountResourceType.JobSchedule">
            <summary>
            JobSchedule RunAs account
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ItemNotFoundFault">
            <summary>
            Fault that is thrown when accessing an item that doesn't exist in the BuildTracker database
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ItemNotFoundFault.#ctor(System.String,System.String)">
            <summary>
            Constructor for ItemNotFoundFault
            </summary>
            <param name="message">Message that describes the fault</param>
            <param name="stackTrace">Inner exception stacktrace details</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ItemNotFoundFault.#ctor(System.String)">
            <summary>
            Constructor for ItemNotFoundFault
            </summary>
            <param name="message">Message that describes the fault</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ItemNotFoundFault.#ctor(System.String,System.Int32)">
            <summary>
            ItemNotFoundFault constructor, formats a fault message based on Type and Id parameters
            </summary>
            <param name="itemType">String containing the type of the item that was not found</param>
            <param name="itemId">Id value of the item that was not found</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ItemNotFoundFault.ItemType">
            <summary>
            String containing the type of the item that was not found.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ItemNotFoundFault.Id">
            <summary>
            Id value of the item that was not found
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobDefinitionData">
            <summary>
            Contains the data members related to a BuildTracker job definition
            pre 3.5 world = Job
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.JobDefinitionData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.Id">
            <summary>
            Id of the JobDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.Name">
            <summary>
            Name of the JobDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.AllowConcurrent">
            <summary>
            Allow several instances of this job to execute simultaneously
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.Description">
            <summary>
            Description of the JobDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.Priority">
            <summary>
            Id of a job priority value
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.SyncByDefault">
            <summary>
            Enable or disable synchronization by default for job requests
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.AllowSyncOption">
            <summary>
            Allow sync option for job requests.  Users may choose whether or not to synchronize before job execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.RunAsAlias">
            <summary>
            Account that legs will run under
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this job definition.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.Owners">
            <summary>
            List of aliases that are owners for this job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.Parameters">
            <summary>
            Parameters types and values to be passed with JobDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.EnlistmentSettings">
            <summary>
            Stores generic enlistment settings
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.BuildShareGroupId">
            <summary>
            Id of the Build Share Group for this job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.RunLegsOnSameMachine">
            <summary>
            Indicates that all legs defined for this job will execute chained (on the same machine).
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobDefinitionData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobPriority">
            <summary>
            The relative global job priority. 
            BuildTracker will try to execute these jobs first, however the actual order is dependent on available machines 
            and other jobs in the queue.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobPriority.Default">
            <summary>
            Normal priority level
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobPriority.Official">
            <summary>
            Second highest priority level
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobPriority.Test">
            <summary>
            Second to lowest priority level
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobPriority.Buddy">
            <summary>
            Lowest priority level
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobPriority.Highest">
            <summary>
            Highest priority level
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.BuildJobDefinitionData">
            <summary>
            Build jobs = children of Branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildJobDefinitionData.BranchId">
            <summary>
            Id of the parent Branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildJobDefinitionData.JobRunners">
            <summary>
            List of aliases that can run this job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildJobDefinitionData.AutoDetectBuildDrops">
            <summary>
            If true, when a new build is produced through BuildTracker, it will be auto-discovered when the Job completes
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildJobDefinitionData.SaveLogs">
            <summary>
            Specifies whether BuildTracker should save the logs for this Build Job in the build's drop folder. 
            A build must be auto-detected for the logs to be saved.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.RetentionJobDefinitionData">
            <summary>
            Retention JobDefinition 
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.DropJobDefinitionData">
            <summary>
            Drop JobDefinition 
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.DropJobDefinitionData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IJobDefinition">
            <summary>
            JobDefinition is the new name (BT 3.5+) for Job
            It contains static information about how to execute a job
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition.CreateLegDefinition(Microsoft.BuildTracker.Contracts.LegDefinitionData)">
            <summary>
            Create a new BuildTracker leg
            </summary>
            <param name="definition">JobDefinitionData object that contains all of the values for the job</param>
            <returns>LegDefinitionData object that is populated with the data of the newly created leg</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition.GetLegDefinition(System.Int32,System.String)">
            <summary>
            Gets the leg with the given name
            </summary>
            <param name="jobDefinitionId">Id of the parent job definition of the leg</param>
            <param name="legName">Name of the leg to return</param>
            <returns>LegDefinitionData object set with the field values of the requested leg</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition.GetById(System.Int32)">
            <summary>
            Get the job definition that has the given Id
            </summary>
            <param name="jobDefinitionId">Id of the requested job definition</param>
            <returns>A JobDefinitionData object set with field values coresponding to the requested BuildTracker job definition</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition.GetLegDefinitions(System.Int32)">
            <summary>
            Returns all of the legs that belong to a particular job definition
            </summary>
            <param name="jobDefinitionId">Id of the job definition</param>
            <returns>List of LegDefinitionData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition.Update(Microsoft.BuildTracker.Contracts.JobDefinitionData)">
            <summary>
            Updates an existing job definition with data from a JobDefinitionData object
            </summary>
            <param name="jobDefinition">A JobDefinitionData object with field values that are to be updated on a BuildTracker job definition</param>
            <returns>A JobDefinitionData object that contains the updated field values</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition.UpdateParameterDefinition(System.Int32,Microsoft.BuildTracker.Contracts.ParameterDefinitionData)">
            <summary>
            
            </summary>
            <param name="jobDefinitionId"></param>
            <param name="parameterDefinitionContract"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition.Delete(System.Int32)">
            <summary>
            Deletes a BuildTracker job definition
            </summary>
            <param name="jobDefinitionId">Id of the job definition to be deleted</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition.QueueBuildJobInstance(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Method to Queue a new Job Instance for given JobDefinition Id and other arguments
            </summary>
            <param name="jobDefinitionId">Id of the JobDefinition to be Queued</param>
            <param name="desiredDateTime">DateTime to Sequence the Job Instaance</param>
            <param name="sync">bool value, true or false for sync</param>
            <param name="syncDateTime">DateTime of Sync</param>
            <param name="remark">Requesters remarks</param>
            <param name="notifyMe">bool value, true if requester wants to be notify</param>
            <param name="parameters">KeyValue Collection of Parameters</param>
            <returns>object of JobInstanceData for the JobDefinition queued by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IJobDefinition36Qfe1">
            <summary>
            Interface service methods added for version QFE1
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition36Qfe1.GetJobSchedules(System.Int32)">
            <summary>
            Gets all of the JobSchedules for this BuildJobDefinition
            </summary>
            <param name="jobDefinitionId">ID of the BuildJobDefinition to get JobSchedules for</param>
            <returns>A collection of JobScheduleData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition36Qfe1.GetJobSchedule(System.Int32,System.String)">
            <summary>
            Gets a JobSchedule for this BuildJobDefinition
            </summary>
            <param name="jobDefinitionId">ID of the BuildJobDefinition</param>
            <param name="jobScheduleName">Name of the JobSchedule to retrieve</param>
            <returns>A JobScheduleData object</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobDefinition36Qfe1.CreateJobSchedule(Microsoft.BuildTracker.Contracts.JobScheduleData)">
            <summary>
            Create a new JobSchedule with this BuildJobDefintion
            </summary>
            <param name="jobScheduleData">JobScheduleData object that contains all of the values for the JobSchedule</param>
            <returns>A new JobScheduleData object</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.BuildJobInstanceData">
            <summary>
            JobQueue for BuildJob
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobInstanceData">
            <summary>
            JobInstance fields.
            Legacy note: JobInstance is the new (BT 3.5+) name for JobQueue.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.Name">
            <summary>
            Name of the JobDefinition for this JobInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.StartDateTime">
            <summary>
            the date and time when this JobInstance was started
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.CompletedDateTime">
            <summary>
            the date and time when this JobInstance was completed
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.SubmittedBy">
            <summary>
            name of the user who submitted the job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.Id">
            <summary>
            The Id for this JobInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.Priority">
            <summary>
            Job scheduling priority
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.JobScheduleId">
            <summary>
            id of the schedule that started this JobInstance
            if the job was started manually this field is not set
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.JobDefinitionId">
            <summary>
            Id of the parent job definition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.SequenceDateTime">
            <summary>
            the date and time when this JobInstance was sequenced
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.Simulate">
            <summary>
            Should this be a simulated job?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.Status">
            <summary>
            Status of this JobInstance (queued, running, failed, etc.)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.NotifyRequester">
            <summary>
            Indicates if the requester should be notified when this jobInstance completes.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.Sync">
            <summary>
            Sync
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.SyncDateTime">
            <summary>
            Sync to the given point in time
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.ParentJobInstanceId">
            <summary>
            ID of the parent Job Instance. Applies only to jobInstances, which are children started by a jobLeg.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.ParameterInstances">
            <summary>
            Collection of Parameter Instances assign to JobInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.BuildDropId">
            <summary>
            ID of the build drop associated with this JobInstance, if there is one.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.BuildJobInstanceData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildJobInstanceData.ProductId">
            <summary>
            Id of a Product this BuildJobInstance belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.BuildJobInstanceData.BranchId">
            <summary>
            Id of a Branch this BuildJobInstance belongs to
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.DropJobInstanceData">
            <summary>
            JobQueue for DropJob
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.DropJobInstanceData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.RetentionJobInstanceData">
            <summary>
            JobQueue for RetentionJob
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.RetentionJobInstanceData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ParameterInstanceData">
            <summary>
            DataContract to pass Job Instance parameter
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ParameterInstanceData.#ctor(System.String,Microsoft.BuildTracker.Contracts.ParameterType,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">name of the parameter</param>
            <param name="type">type of the parameter</param>
            <param name="description">details about parameter</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceData.Name">
            <summary>
            The name of the parameter instance.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceData.Description">
            <summary>
            Parameter's description.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceData.Values">
            <summary>
            Parameter values
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceData.ParameterType">
            <summary>
            Type of parameter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceData.Required">
            <summary>
            Is this parameter required?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceData.ReadOnly">
            <summary>
            Is this parameter readonly?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceData.SelectedValues">
            <summary>
            Default value/s of parameter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ParameterInstanceValueData">
            <summary>
            DataContract to pass values of Parameter Instance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ParameterInstanceValueData.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor to set multiple selection values like DropDwonList, CheckBoxes etc.
            </summary>
            <param name="parameterValue">value of the parameter</param>
            <param name="isDefault">value is default or not</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceValueData.Value">
            <summary>
            The value of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceValueData.IsDefault">
            <summary>
            Is it a default value?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterInstanceValueData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobInstanceStatus">
            <summary>
            Possible values for the status of a JobInstance
            int values for mapping with BT.JobQueueStatus
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Queued">
            <summary>
            Queued
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Submitted">
            <summary>
            Submitted
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Pending">
            <summary>
            Pending - requires an approval
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Sequenced">
            <summary>
            ready for execution, just waiting for available machines
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Running">
            <summary>
            job's running
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Completed">
            <summary>
            Completed succesfully
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Rejected">
            <summary>
            No approval was given. The job will not execute.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Failed">
            <summary>
            Job failed.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Resumed">
            <summary>
            Resumed.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Aborted">
            <summary>
            Aborted
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.QueueFailed">
            <summary>
            Unable to queue the job. This can happen if the job definition or the job schedule is incomplete or incorrect.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.EMQuery">
            <summary>
            Change detection for this job is underway
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.Canceled">
            <summary>
            Job has been cancelled by BuildTracker
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceStatus.InternalError">
            <summary>
            BuildTracker Internal Error
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IJobInstance">
            <summary>
            Operations possible for job instances.
            
            Legacy note: JobInstance is the new (BT 3.5+) name for JobQueue.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.Abort(System.Int32)">
            <summary>
            Aborts a job instance that's running
            </summary>
            <param name="jobInstanceId">ID of the job instance to abort</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.Retry(System.Int32,System.Boolean)">
            <summary>
            Restart a job instance
            </summary>
            <param name="jobInstanceId">ID of the job instance to restart</param>
            <param name="resetSyncTime">A value of true specifies that the sync time for this job instance will be set to the current time</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.Delete(System.Int32)">
            <summary>
            Deletes a job instance.  Only job instances that have not started yet can be deleted.
            </summary>
            <param name="jobInstanceId"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.Approve(System.Int32)">
            <summary>
            Approves a pending job instance.
            </summary>
            <param name="jobInstanceId"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.Deny(System.Int32)">
            <summary>
            Denies a pending job instance.
            </summary>
            <param name="jobInstanceId"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.GetById(System.Int32)">
            <summary>
            Gets a job instance
            </summary>
            <param name="jobInstanceId">Id of the JobInstance being requested</param>
            <returns>A JobInstanceData object set with the field values of the requested job instance</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.GetLegInstances(System.Int32)">
            <summary>
            Gets all the leg instances for a given job instance
            </summary>
            <param name="jobInstanceId">Id of the job instance that is the parent of the leg instances</param>
            <returns>A list of leg instance objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.ChangePriority(System.Int32,Microsoft.BuildTracker.Contracts.JobPriority)">
            <summary>
            Method to change scheduling priority of JobInstance
            </summary>
            <param name="jobInstanceId">Id of the JobInstance for which scheduling priority need to be changed</param>
            <param name="jobPriority">scheduling priority of JobInstance</param>
            <returns>object of JobInstanceData with updated scheduling priority</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.ChangeParameters(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Method to change ParameterInstance's selected value for passed JobInstance id.
            </summary>
            <param name="jobInstanceId">Id of the JobInstance for which ParamtereInstance's selected value need to be changed</param>
            <param name="parameterNamesWithValues">Collection of parameterName and value. ParameterName should be any exisitng ParameterInstance name, value would be new selected value</param>
            <returns>object of JobInstanceData with updated ParamterInstance's selected value</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.GetRemarks(System.Int32)">
            <summary>
            Gets all remarks associated with the given id
            </summary>
            <param name="id">id of the object - the parent of remarks</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IJobInstance36Qfe1.AddRemark(System.Int32,System.Int32,System.String)">
            <summary>
            Adds a new job instance remark
            </summary>
            <param name="jobInstanceId">id of the jobinstance to change the status for</param>
            <param name="text">the text of the remark to add</param>
            <param name="type">the type of the remark to add</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses">
            <summary>
            All of the different states that a JobInstance might have
            </summary>
            <remarks>
            This enum is flags, so multiple values can be 'OR'ed together
            </remarks>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Queued">
            <summary>
            Queued
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Pending">
            <summary>
            Pending - requires an approval
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Submitted">
            <summary>
            Submitted
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.ChangeDetection">
            <summary>
            Change detection for this job is underway
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Resumed">
            <summary>
            Resumed
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Sequenced">
            <summary>
            Ready for execution, just waiting for available machines
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Running">
            <summary>
            Job is running
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Completed">
            <summary>
            Completed succesfully
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Failed">
            <summary>
            Job failed.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Rejected">
            <summary>
            No approval was given. The job will not execute.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.QueueFailed">
            <summary>
            Unable to queue the job. This can happen if the job definition or the job schedule is incomplete or incorrect.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Aborted">
            <summary>
            Aborted
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Canceled">
            <summary>
            Job has been cancelled by BuildTracker
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.InternalError">
            <summary>
            Internal Error
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.All">
            <summary>
            Include all possible statuses
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.NotStartedYet">
            <summary>
            Statuses of jobs not started yet
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.InProgress">
            <summary>
            Statuses of Jobs Inprogress
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses.Finished">
            <summary>
            Statuses of Jobs Finished
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobInstanceTypes">
            <summary>
            Type of the JobDefinition that is parent to the JobInstance
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceTypes.BuildJob">
            <summary>
            Instance of a build job
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceTypes.RetentionJob">
            <summary>
            instance of a retention job
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceTypes.DropJob">
            <summary>
            instance of a drop job
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.JobInstanceTypes.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.DateTimeColumn">
            <summary>
            Possible columns to set date condition
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DateTimeColumn.QueueDateTime">
            <summary>
            Column name for datetime value of queued jobs
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DateTimeColumn.SequenceDateTime">
            <summary>
            Column name for datetime value of sequenced jobs
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DateTimeColumn.StartDateTime">
            <summary>
            Column name for datetime value of started jobss
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DateTimeColumn.CompleteDateTime">
            <summary>
            Column name for datetime value of completed jobs
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DateTimeColumn.SyncDateTime">
            <summary>
            Column name for datetime value of Sync jobs
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.SortDirection">
            <summary>
            possible direction of data sorting
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.SortDirection.Descending">
            <summary>
            Sorting in Descending order
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.SortDirection.Ascending">
            <summary>
            Sorting in Ascednding order
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobInstanceQueryData">
            <summary>
            Data contract containing all of the fields that will be used to form a query to select JobInstances.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.OnlyLatestForEachJobDefinition">
            <summary>
            True for latest records
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.DateFrom">
            <summary>
            Start of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.DateFromQueryType">
            <summary>
            Column where DateFrom condition should be applied or compaired
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.DateTo">
            <summary>
            End of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.DateToQueryType">
            <summary>
            Column where DateTo condition should be applied or compaired
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.Status">
            <summary>
            Combination of JobInstance state values that are queried for
            </summary>
            <remarks>
            This field may not be null.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.OrderBy">
            <summary>
            Sets the sort order. Used in the "top N" scenario -> in conjuntion with the .TopN field
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.SortDirection">
            <summary>
            data sorting direction
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.TopN">
            <summary>
            Return the top N instances only.
            Sort using the .OrderBy + .SortDirection fields.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.OnlyOverdue">
            <summary>
            Filter for overdue only (true) or all (false)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.RequestedBy">
            <summary>
            Filter to only the instances submitted by the given user
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.ProductId">
            <summary>
            Filter to instances under the given product only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.BranchId">
            <summary>
            Filter to instances under the given branch only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.JobDefinitionId">
            <summary>
            Filter to instances of the given job definition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.JobScheduleId">
            <summary>
            Filter to instances of the given job schedule
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.TypeOfParent">
            <summary>
            Type of the JobDefinition that is parent to the JobInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobInstanceQueryData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegDefinitionData">
            <summary>
            DataContract for LegDefinition
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.LegDefinitionData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.Name">
            <summary>
            Name of the leg
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.Id">
            <summary>
            ID of the leg
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.Description">
            <summary>
            Description of the leg
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.ParentJobId">
            <summary>
            ID of the job that this leg belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.Priority">
            <summary>
            For LegDefinitions that can be executed in parallel, those with the higher priority will be executed first
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.DependencyLogic">
            <summary>
            Require all prerequisite dependencies to evaluate to true, or require at least one to be true
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.SimulateResult">
            <summary>
            The result for this leg when running a simulated build
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.EstimatedExecutionTime">
            <summary>
            Length of time that it takes to run this leg, calculated based on past executions
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.EnlistmentSettings">
            <summary>
            Stores generic enlistment settings
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.Dependencies">
            <summary>
            Stores Collection of Dependencies for this leg, Prerequisite leg and execution condition details 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.Order">
            <summary>
            The order that this leg is run within a job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDefinitionData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.CredentialedLegDefinitionData">
            <summary>
            A leg that can run impersonated (with a run-as account)
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.CredentialedLegDefinitionData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.CredentialedLegDefinitionData.RunAsAlias">
            <summary>
            RunAs user account
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.CredentialedLegDefinitionData.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this leg definition.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.CommandLegDefinitionData">
            <summary>
            Build tracker command leg setting.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.CommandLegDefinitionData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.CommandLegDefinitionData.Command">
            <summary>
            Leg command.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.CommandLegDefinitionData.CommandParameters">
            <summary>
            Command parameters.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.CommandLegDefinitionData.FailJobOnFailure">
            <summary>
            Report failure to the job.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.CommandLegDefinitionData.PublishedParameters">
            <summary>
            Collection of parameter mappings between parent job and child job or between environment variable and parent job
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.RemoteLegDefinitionData">
            <summary>
            Runs a command on a remote machine not part of the lab topology. Usually it is used to run commands on machines part of other domains
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.RemoteLegDefinitionData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RemoteLegDefinitionData.RemoteFolderParameter">
            <summary>
            Remote Folder Parameter.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.JobLegDefinitionData">
            <summary>
            Leg that runs another job.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobLegDefinitionData.JobId">
            <summary>
            Id of job this leg will run
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobLegDefinitionData.ReportFailureToJob">
            <summary>
            Report failure to the job.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.JobLegDefinitionData.PublishedParameters">
            <summary>
            Collection of parameter mappings between parent job and child job or between environment variable and parent job
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.SyncLegDefinitionData">
            <summary>
            Re-sets the synchronization time of dependent legs to the current time of the source depot at the time this leg gets executed.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.SyncLegDefinitionData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.DeleteDropLegDefinitionData">
            <summary>
            Leg that deletes the build drop and source.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.DeleteDropLegDefinitionData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.CompleteLegDefinitionData">
            <summary>
            For build jobs, optionally copies the logs to the drop location
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.CompleteLegDefinitionData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegJobParameterMappingData">
            <summary>
            Represents a mapping of a single parameter for LegJobDefinition
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegParameterMappingData">
            <summary>
            Used to define parameter passing between parent jobInstance, LegDefinition and child jobInstance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.LegParameterMappingData.#ctor(System.String,System.String,System.String)">
            <summary>
            constructor to create object with all required Parameter mapping data
            </summary>
            <param name="source">it could be parent jobInstance's parameter name or environment variable name from build script of LegDefinition</param>
            <param name="target">for most types of LegDefinition it will be Parent jobInstance's parameter name,for LegJobDefinition it could be parent/child jobInstance's parameter name(according to IN/OUT)</param>
            <param name="description">details of parameter</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegParameterMappingData.Description">
            <summary>
            Details about parameter mapping
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegParameterMappingData.Source">
            <summary>
            For most types of LegDefinition, it would be environment variable name from build script, which will be set by the environment
            For LegJobDefinition : Can be parent jobInstance parameter name or child jobInstance parameter name (depending on the IN/OUT)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegParameterMappingData.Target">
            <summary>
            For most types of LegDefinition, it would be parent jobInstance's parameter name
            For LegJobDefinition : Can be parent jobInstance parameter name or child jobInstance parameter name (depending on the IN/OUT)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegParameterMappingData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.LegJobParameterMappingData.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            constructor to create object with all required parameter mapping data between parent and child jobInstance's parameter
            </summary>
            <param name="source">name of the parameter, could be parent jobInstance's parameter name or environment variable name from build script of LegDefinition</param>
            <param name="target">Parent jobInstance's parameter name, in case of LegJob type LegDefinition it would be child jobInstance's parameter name</param>
            <param name="description">details of parameter</param>
            <param name="in">Direction of ParameterMapping - Parent jobInstance's parameter value will be set to child jobInstance's parameter</param>
            <param name="out">Direction of ParameterMapping - Child jobInstance's parameter value will be set to Parent jobInstance's parameter</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegJobParameterMappingData.In">
            <summary>
            Direction of ParameterMapping - Parent jobInstance's parameter value will be set to child jobInstance's parameter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegJobParameterMappingData.Out">
            <summary>
            Direction of ParameterMapping - Child jobInstance's parameter value will be set to Parent jobInstance's parameter
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegDependencyData">
            <summary>
            Stores the details about leg dependency and execution condition
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.LegDependencyData.#ctor(System.String,Microsoft.BuildTracker.Contracts.DependencyType)">
            <summary>
            Constructs an object using the given prerequisite leg name and dependency type.
            </summary>
            <param name="prerequisiteLegName"></param>
            <param name="dependencyType"></param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDependencyData.PrerequisiteLegName">
            <summary>
            Name of Prerequisite leg for dependent leg.
            Execution of Dependent leg depends on execution of PrerequisiteLeg, which is passed here by name.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegDependencyData.DependencyType">
            <summary>
            Condition for execution of this leg according to PrerequisiteLeg result 
            Execution of this leg depends to result of PrerequisiteLeg, like OnSucces, OnFail, Always
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.SimulateResultValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.SimulateResultValue.Success">
            <summary>
            Return success when executing this as a leg of a simulated job
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.SimulateResultValue.Fail">
            <summary>
            Return failure when executing this as a leg of a simulated job
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.DependencyLogicType">
            <summary>
            Possible type of DependencyLogic, each type definied how individual results of legs should be combined 
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DependencyLogicType.And">
            <summary>
            All of this legs dependency evaluations must evaluate to True 
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DependencyLogicType.Or">
            <summary>
            At least one of this legs dependency evaluations must evaluate to True 
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.DependencyType">
            <summary>
            Possible type of Dependency condition for dependent leg
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DependencyType.OnSuccess">
            <summary>
            Dependent leg will be only executed if Prerequisite leg is successful.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DependencyType.OnFail">
            <summary>
            Dependent leg will be only executed if Prerequisite leg Fails.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.DependencyType.Always">
            <summary>
            Dependent leg will be always executed. Won't be affected with the result of Prerequisite Leg's result.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ILegDefinition">
            <summary>
            Service methods that perform actions related to BuildTracker legs
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegDefinition.GetById(System.Int32)">
            <summary>
            Gets the leg with the given ID
            </summary>
            <param name="legId">ID of the leg to return</param>
            <returns>LegDefinitionData object set with the field values of the requested leg</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegDefinition.Update(Microsoft.BuildTracker.Contracts.LegDefinitionData)">
            <summary>
            Updates an existing leg with data from a LegDefinitionData object
            </summary>
            <param name="legDefinition">A LegDefinitionData object with field values that are to be updated on a BuildTracker leg</param>
            <returns>A LegDefinitionData object set with the updated field values</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegDefinition.Delete(System.Int32)">
            <summary>
            Deletes an existing leg
            </summary>
            <param name="legId">ID of the leg to delete</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegDefinition.ResetEstimatedExecutionTime(System.Int32)">
            <summary>
            Reset the estimated execution time for this leg to 0
            </summary>
            <param name="legId">Id of the leg that will have it's ERT reset</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegDefinition.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegInstanceData">
            <summary>
            Data contract for transferring LegInstance information across WCF calls
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.Id">
            <summary>
            Id for this LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.Name">
            <summary>
            Name of the LegInstance, set from the name of the LegDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.JobInstanceId">
            <summary>
            Id of the parent JobInstance for this LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.LegDefinitionId">
            <summary>
            Id of the LegDefinition for this LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.Status">
            <summary>
            Current state of the LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.WaitingStartedTime">
            <summary>
            Date and time that this leg instance started waiting for dependencies
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.ReadyStartedTime">
            <summary>
            Date and time that this leg instance was ready to run
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.PreparingStartedTime">
            <summary>
            Date and time that this leg instance started the preparation stage
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.ExecutingStartedTime">
            <summary>
            Date and time that this leg instance started executing
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.FinishedTime">
            <summary>
            Date and time that this leg instance finished
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.OverdueState">
            <summary>
            OverDue status of LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.ExitCode">
            <summary>
            LegInstance Exit code after execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.EstimatedExecutionTime">
            <summary>
            Estimated execution time of LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.ChildJobInstanceId">
            <summary>
            ID of a child job instance. This is only set for job legs
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.NewEnlistmentCreated">
            <summary>
            Was a new enlistment created for this leg instance?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.MachineId">
            <summary>
            Id of the machine this leg instance ran on
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.MachineName">
            <summary>
            Name of the machine this leg instance ran on
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.Order">
            <summary>
            The order that this leg is run within a job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.Priority">
            <summary>
            Relative to other legs that can run within the same dependency range, legs with a lower priority value will run first
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.LogUrl">
            <summary>
            The URL of the log for this leg instance.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that may be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.OverdueState">
            <summary>
            Possible values for OverDue state
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.OverdueState.OnTime">
            <summary>
            Overdue on time
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.OverdueState.Delayed">
            <summary>
            OverDue delayed 
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.OverdueState.Overdue">
            <summary>
            Overdue
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegInstanceStatus">
            <summary>
            Possible states a Leg Instance can be in
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Unknown">
            <summary>
            State is not allowed, Exception will be thrown.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Waiting">
            <summary>
            LegQueue is in waiting for execution
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Running">
            <summary>
            LegQueue is running
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Failed">
            <summary>
            LegQueue failed during execution
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Completed">
            <summary>
            LegQueue execution completed
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Aborted">
            <summary>
            LegQueue aborted during execution 
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Canceled">
            <summary>
            LegQueue canceled
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Idle">
            <summary>
            LeqQueue is not executing  
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Skipped">
            <summary>
            LegQueue was skipped during execution
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.Resumed">
            <summary>
            LeqQueue restarted
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.LegInstanceStatus.FailedOk">
            <summary>
            LegQueue failed as expected
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ILegInstance">
            <summary>
            Defines an agreement between service and client, it defines what are the methods(operations) client can access.
            Methods with OperationContract attribute will be only visibile/accessible to clients. 
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstance.Restart(System.Int32)">
            <summary>
            OperationContract to restart the LegInstance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstance.Skip(System.Int32)">
            <summary>
            OperationContract to skip execution of LegInstance for passed legInstanceId
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstance.GetById(System.Int32)">
            <summary>
            OperationContract to get LegInstance for passed legInstanceId
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstance.Abort(System.Int32)">
            <summary>
            OperationContract to abort LegInstance for passed legInstanceId
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstance.GetExecutions(System.Int32)">
            <summary>
            Gets past executions of the given leg instance
            </summary>
            <param name="legInstanceId">Id of the LegInstance to retrieve the LegInstanceExecutions for.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstance.GetRemarks(System.Int32)">
            <summary>
            Gets all remarks associated with the given id
            </summary>
            <param name="id">id of the object - the parent of remarks</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstance.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstance36Qfe1.AddRemark(System.Int32,System.Int32,System.String)">
            <summary>
            Adds a new leg instance remark
            </summary>
            <param name="legInstanceId">id of the leginstance to change the status for</param>
            <param name="text">the text of the remark to add</param>
            <param name="type">the type of the remark to add</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData">
            <summary>
            Data contract for transferring LegInstanceExecution information across WCF calls
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.Id">
            <summary>
            Id for the LegInstanceExecution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.LegInstanceId">
            <summary>
            LegInstance Id for this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.RestartNumber">
            <summary>
            Restart Number for this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.WaitingStartedTime">
            <summary>
            Date and time that this leg instance execution started waiting for dependencies
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.ReadyStartedTime">
            <summary>
            Date and time that this leg instance execution was ready to run
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.PreparingStartedTime">
            <summary>
            Date and time that this leg instance execution started the preparation stage
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.ExecutingStartedTime">
            <summary>
            Date and time that this leg instance execution started executing
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.FinishedTime">
            <summary>
            Date and time that this this leg instance execution finished
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.Status">
            <summary>
            Finished LegInstance State of the LegInstanceExecution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.ExitCode">
            <summary>
            Exit code if this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.MachineId">
            <summary>
            ID of the machine which ran this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.MachineName">
            <summary>
            Name of the machine which ran this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.RemoteMachineId">
            <summary>
            ID of the remote machine which ran this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.RemoteMachineName">
            <summary>
            Name of the remote machine which ran this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.EstimatedExecutionTime">
            <summary>
            Estimated execution time of this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.OverdueState">
            <summary>
            OverDue status of this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.LogFileLocalPath">
            <summary>
            the local log path of this leg instance execution 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.NewEnlistmentCreated">
            <summary>
            Was a new enlistment created for this leg instance?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.LogUrl">
            <summary>
            The URL of the log for this leg instance execution.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that may be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ILegInstanceExecution">
            <summary>
            Defines an agreement between service and client, it defines what are the methods(operations) client can access.
            Methods with OperationContract attribute will be only visible/accessible to clients. 
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstanceExecution.GetById(System.Int32)">
            <summary>
            gets a LegInstanceExecution by Id
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ILegInstanceExecution.GetDataPoints(System.Int32)">
            <summary>
            Gets data points for the given leg instance execution
            </summary>
            <param name="legInstanceExecutionId">Id of the LegInstanceExecution to retrieve the data points for.</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.LegInstanceExecutionDataPointData">
            <summary>
            Data contract for transferring LegInstanceExecutionDataPoint information across WCF calls
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionDataPointData.Name">
            <summary>
            the name of the data point
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionDataPointData.Value">
            <summary>
            the value of the data point
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.LegInstanceExecutionDataPointData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.MachineData">
            <summary>
            Contains the data members related to a BuildTracker machine
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.MachineData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.Id">
            <summary>
            Machine's Id
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.Name">
            <summary>
            Machine's name as defined in BuildTracker database. Typically just a WINS name.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.OperatingSystem">
            <summary>
            The OS installed on the machine
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.ServicePack">
            <summary>
            SP on top of the OS
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.Domain">
            <summary>
            The domain this machine belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.Manufacturer">
            <summary>
            Machine's manufacturer
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.Model">
            <summary>
            Manufacturer's model
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.MemorySize">
            <summary>
            The amount of memory the machine has. In bytes.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.TimeZone">
            <summary>
            The TimeZone the machine resides in
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.CollectMachineInformation">
            <summary>
            If true -&gt; BuildTracker will periodically collect information about this machine
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.EnableRemoteExecution">
            <summary>
            Indicates this machine can be used for remote execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.EnableSdkProxy">
            <summary>
            Indicates this machine can be used as an SDK Proxy
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.ComputedPerformanceWeight">
            <summary>
            Performance weight as computed by BuildTracker's algorithm. This is based on the number of cores and their speed.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.PerformanceWeightOverride">
            <summary>
            Allows overriding the performance weight with a custom value. Setting this property disregards the computed performance weight.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.Notes">
            <summary>
            Admin notes about the machine
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.Deleted">
            <summary>
            Indicates that the machine has been previously deleted.
            </summary>
            <remarks>To "undelete" a machine -> simple create it again, which will reset its fields.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.MachineData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IMachine">
            <summary>
            Set of operations allowed to manage Machines
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachine.GetById(System.Int32)">
            <summary>
            Get a machine object
            </summary>
            <param name="machineId">Id of the machine to return</param>
            <returns>A machine object</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachine.GetDisks(System.Int32)">
            <summary>
            Returns all Disks for the given machine
            </summary>
            <param name="machineId">Id of the Machine to retrieve Disks for</param>
            <returns>A list of DiskData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachine.Update(Microsoft.BuildTracker.Contracts.MachineData)">
            <summary>
            Updates an existing Machine object with data from a MachineData object
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachine.Delete(System.Int32)">
            <summary>
            Deletes a machine.
            </summary>
            <param name="machineId">Id of the machine to delete.</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachine.CollectInformation(System.Int32)">
            <summary>
            Causes immediate information collection for this machine.
            </summary>
            <param name="machineId">Id of the machine to delete.</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IMachine.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ParameterDefinitionData">
            <summary>
            DataContract to pass JobParameter or BuildDropParameter definitions
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.#ctor(System.String,Microsoft.BuildTracker.Contracts.ParameterType,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">name of the parameter</param>
            <param name="type">type of the parameter</param>
            <param name="description">details about parameter</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.#ctor(System.String,Microsoft.BuildTracker.Contracts.ParameterType,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="name">name of the parameter</param>
            <param name="type">type of the parameter</param>
            <param name="description">details about parameter</param>
            <param name="required">bool value parameter required or not</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.#ctor(System.String,Microsoft.BuildTracker.Contracts.ParameterType,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="name">name of the parameter</param>
            <param name="type">type of the parameter</param>
            <param name="description">details about parameter</param>
            <param name="required">bool value parameter required or not</param>
            <param name="readOnly">bool value parameter readonly or not</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.Name">
            <summary>
            The name of the parameter definitions.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.Description">
            <summary>
            Parameter's description.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.Values">
            <summary>
            Parameter values
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.ParameterType">
            <summary>
            Type of parameter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.Required">
            <summary>
            Is this parameter required?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.ReadOnly">
            <summary>
            Is this parameter readonly?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.Inherited">
            <summary>
            For BuildDropParameters, indicates if this parameter definition is inherited from a parent object
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ParameterDefinitionValueData">
            <summary>
            DataContract to pass values of Parameter Definition 
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ParameterDefinitionValueData.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor to set multiple selection values like DropDwonList, CheckBoxes etc.
            </summary>
            <param name="value">value of the parameter</param>
            <param name="isDefault">value is default or not</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionValueData.Value">
            <summary>
            The value of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionValueData.IsDefault">
            <summary>
            Is it a default value?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ParameterDefinitionValueData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ParameterType">
            <summary>
            parameter can be created for any of these types.
            int values assign to mapped with ParameterType in BT for conversion
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ParameterType.String">
            <summary>
            String Type, Single value parameter
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ParameterType.Xml">
            <summary>
            Xml Type, Single value parameter single selection
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ParameterType.Link">
            <summary>
            Link Type, Single value parameter single selection
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ParameterType.Number">
            <summary>
            Number Type, Single value parameter single selction
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ParameterType.CheckBoxList">
            <summary>
            CheckBoxList Type, multi value parameter multi selection
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ParameterType.RadioButtonList">
            <summary>
            RadioButtonList Type, multi value parameter single selection
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.ParameterType.DropDownList">
            <summary>
            DropDownList Type, multi value parameter single selction
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.PolicyData">
            <summary>
            Defines basic condition upon which a job gets queued up
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.PolicyData.Id">
            <summary>
            Id of the policy
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.PolicyData.BuildShareGroupId">
            <summary>
            Id of the owner BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.PolicyData.MinutesDelayAfterBuildJobCompletes">
            <summary>
            starting time of this policy after build completed
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.PolicyData.Enabled">
            <summary>
            This instance of the Policy is enabled
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.PolicyData.BuildShareGroupType">
            <summary>
            Used for system wide policies to target specific BSG types only.
            Ignored for BSG-specific policies.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.PolicyData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.DropPolicyData">
            <summary>
            Defines a condition upon which a drop job gets queued up
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DropPolicyData.RunOnAutoDiscoveredBuild">
            <summary>
            Policy will execute auto discovered build
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.DropPolicyData.DropJobId">
            <summary>
            Id of the drop job which will be executed under this policy
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.RetentionPolicyData">
            <summary>
            Defines a condition upon which a retention job gets queued up
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RetentionPolicyData.Condition">
            <summary>
            condition for the execution of this policy 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RetentionPolicyData.Quantity">
            <summary>
            Passed value will be associated with selected Condition, Works with condition only.
            Value in this property will be replaced with variable in Condition property
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.RetentionCondition">
            <summary>
            Possible condition for a retention policy
            retention policy can be created for any of these condition
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.RetentionCondition.KeepAtLeastNDays">
            <summary>
            BuildTracker will not schedule retention jobs for the unpreserved builds of this Build Share Group that have been modified in the specified number of days.
            Value of N will be passed through Quantity property.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.RetentionCondition.KeepAtLeastNLatest">
            <summary>
            BuildTracker will schedule retention jobs for the oldest non-preserved builds for the Build Share Group when the number of unpreserved builds is greater than the specified number.
            Value of N will be passed through Quantity property.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.RetentionCondition.KeepNDays">
            <summary>
            BuildTracker will schedule retention jobs for the oldest non-preserved builds for the Build Share Group that have not been modified since the specified number of days.
            Value of N will be passed through Quantity property.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.RetentionCondition.KeepNLatest">
            <summary>
            BuildTracker will schedule retention jobs for the oldest non-preserved builds for the Build Share Group when the number of unpreserved builds is greater than the specified number
            Value of N will be passed through Quantity property.
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.RetentionCondition.KeepNMegabytes">
            <summary>
            BuildTracker will schedule retention jobs for the oldest non-preserved builds for the Build Share Group if the amount of disk space for all the builds (preserved and unpreserved) is greater than the specified number.
            Note that the build size includes both its drop and source. Builds already scheduled for deletion are not considered when computing this amount. 
            Value of N will be passed through Quantity property.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IPolicy">
            <summary>
            Set of operations allowed to manage Job Policies
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IPolicy.Update(Microsoft.BuildTracker.Contracts.PolicyData)">
            <summary>
            To Update the local policy
            </summary>
            <param name="policyData">updated object of policyData</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IPolicy.Delete(System.Int32)">
            <summary>
            To Delete Policy
            </summary>
            <param name="policyId">Id of the jobPolicy which should be deleted</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IPolicy.GetById(System.Int32)">
            <summary>
            Get a policy by it's ID value
            </summary>
            <param name="policyId">Id of Policy</param>
            <returns>object of PolicyData with latest data.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IPolicy.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ProductData">
            <summary>
            Contains the data members related to a BuildTracker product
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.ProductData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ProductData.Name">
            <summary>
            Name of the product
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ProductData.Id">
            <summary>
            BuildTracker Id value for the product
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ProductData.CreateTime">
            <summary>
            DateTime when the product was created
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ProductData.RunAsAlias">
            <summary>
            Account that legs will run under, unless overridden
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ProductData.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this product.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ProductData.Owners">
            <summary>
            List of aliases that are owners of this product
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ProductData.EnlistmentSettings">
            <summary>
            Stores generic enlistment settings
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ProductData.BuildDropParameters">
            <summary>
            Collection of BuildDropParameters for this product
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ProductData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IProduct">
            <summary>
            Service methods that perform actions related to BuildTracker products 
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.CreateBranch(Microsoft.BuildTracker.Contracts.BranchData)">
            <summary>
            Creates a new BuildTracker branch
            </summary>
            <param name="branchData">A BranchData object with field values to be used to create a new BuildTracker branch</param>
            <returns>A BranchData object that is populated with the data of the newly created branch</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.GetBranch(System.Int32,System.String)">
            <summary>
            Gets the branch that has the given name
            </summary>
            <param name="branchName">Name of the branch to return</param>
            <param name="productId">Id of the parent product for this branch</param>
            <returns>A BranchData object set with field values coresponding to the requested BuildTracker branch</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.GetById(System.Int32)">
            <summary>
            Returns the product that has the given id
            </summary>
            <param name="productId">Id of the product to return</param>
            <returns>ProductData object for the requested product</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.GetBranches(System.Int32)">
            <summary>
            Returns all branches for the given product
            </summary>
            <param name="productId">Id of the product to retrieve branches for</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.Update(Microsoft.BuildTracker.Contracts.ProductData)">
            <summary>
            Updates and existing product with data from a ProductData object
            </summary>
            <param name="product">A ProductData object with field values that are to be updated on a BuildTracker product</param>
            <returns>A ProductData object that contains the updated field values</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.Delete(System.Int32)">
            <summary>
            Deletes a product from BuildTracker
            </summary>
            <param name="productId">Id of the product to be deleted</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.Register(System.Int32)">
            <summary>
            Registers a product for the current user
            </summary>
            <param name="productId">Id of the product to be registered</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.Unregister(System.Int32)">
            <summary>
            Unregisters a product for the current user
            </summary>
            <param name="productId">Id of the product to be unregistered</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.CreateBuildShareGroup(Microsoft.BuildTracker.Contracts.BuildShareGroupData)">
            <summary>
            Creates new BuildShareGroup for this product
            </summary>
            <param name="buildShareGroupData">object of BuildShareGroupData to create new BuildShareGroup</param>
            <returns>object of BuildShareGroup created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.GetBuildShareGroups(System.Int32)">
            <summary>
            Returns collection of BuildShareGroups associated with this Product
            </summary>
            <param name="productId">Id of the current branch</param>
            <returns>Collection of BuildShareGroups associated with this Product</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.GetBuildShareGroup(System.Int32,System.String)">
            <summary>
            Get a BuildShareGroup
            </summary>
            <param name="productId">Id of the parent product</param>
            <param name="buildShareGroupName">Name of the BuildShareGroup to retrieve</param>
            <returns>BuildShareGroupData object that is populated with the data of the BuildShareGroup that was requested</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct.Default(System.ServiceModel.Channels.Message)">
            <summary>
            Default operation to route good binding, mismatched calls
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>See "WCF Unleashed (2007)" Working w/ Behavioral Contracts - Page 652.</remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.IProduct36Qfe1">
            <summary>
            Interface service methods added for version QFE1
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.IProduct36Qfe1.GetJobSchedules(System.Int32)">
            <summary>
            Gets all of the JobSchedules for this Product
            </summary>
            <param name="productId">ID of the Product to get JobSchedules for</param>
            <returns>A collection of JobScheduleData objects</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.RemarkData">
            <summary>
            Contains the data members related to a BuildTracker account
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RemarkData.Count">
            <summary>
            The count of how many times this exact remark was written.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RemarkData.LastOccurrence">
            <summary>
            The last time this remark was written.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RemarkData.FirstOccurrence">
            <summary>
            The first tiem this remark was written.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RemarkData.RemarkType">
            <summary>
            The type of the remark.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RemarkData.Text">
            <summary>
            Remark's message/text.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RemarkData.User">
            <summary>
            The user on whose behalf the remark was written.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.RemarkData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.RemarkType">
            <summary>
            The possible remark types
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.RemarkType.None">
            <summary>
            Remark type not specified
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.RemarkType.Error">
            <summary>
            Error remark
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.RemarkType.Warning">
            <summary>
            Warning remark
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.RemarkType.Success">
            <summary>
            Success remark
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.RetiredEndpointFault">
            <summary>
            Fault that is thrown when the endpoint/operation is to be retired.
            Clients should expect this fault as it can happen in any of the future versions of the service.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.ServiceIntervalData">
            <summary>
            Contains the data members related to a BuildTracker ServiceInterval (LoopInterval)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ServiceIntervalData.Id">
            <summary>
            ID of the service interval
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ServiceIntervalData.AffectedService">
            <summary>
            Name of the BuildTracker service that controls this service interval
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ServiceIntervalData.Description">
            <summary>
            Description of the task that is performed by the service
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ServiceIntervalData.LastExecution">
            <summary>
            Time of the last execution of the service's task
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ServiceIntervalData.Name">
            <summary>
            Name of the Task
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ServiceIntervalData.Overdue">
            <summary>
            Indicates that a task did not execute when it should have according to it's defined interval time.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ServiceIntervalData.Value">
            <summary>
            The length of the interval (in seconds) between executions of the task.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.ServiceIntervalData.ExtensionData">
            <summary>
            Used for storing and retrieving values of other members that my be implemented by newer versions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.VersionedNamespaces">
            <summary>
            Lists known contract namespaces
            For every new release there should be an item added below
            </summary>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.VersionedNamespaces.bt36">
            <summary>
            The contract namespace used for BuildTracker 3.6 functionality
            </summary>
            <remarks>Additional consts should be added for any new BT version that adds API functionality,
            so that the new functionality can be mapped to the correct WCF namespace. 
            This helps with backwards-compatibility.</remarks>
        </member>
        <member name="F:Microsoft.BuildTracker.Contracts.VersionedNamespaces.bt36qfe1">
            <summary>
            The contract namespace used for BuildTracker 3.6 QFE1 functionality
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Contracts.WcfConnector">
            <summary>
            Responsible for connection, tear down and exposing of interfaces of
            the BuildTracker WCF API endpoint
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.WcfConnector.#ctor(System.Object)">
            <summary>
            Used for WCF Server testing only
            </summary>
            <param name="apiService"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.WcfConnector.#ctor">
            <summary>
            Used for WCF Client testing only
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.WcfConnector.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Connects to the BT wcf interface through the given base address
            </summary>
            <param name="baseAddress">base address for all wcf contracts</param>
            <param name="domain">credentials domain to connect as</param>
            <param name="userName">credentials userName to connect as</param>
            <param name="password">credentials password to connect as</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.WcfConnector.GetApiServerVersion">
            <summary>
            Gets the service version so the client knows which operations are available to call
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.WcfConnector.Connect``1(System.String,System.ServiceModel.Channels.Binding,System.String,System.String,System.String)">
            <summary>
            Helper method to create and configure the wcf communication channel to a specific interface on the BT wcf service
            </summary>
            <typeparam name="TInterface">Specific service interface</typeparam>
            <param name="baseAddress">Endpoint address</param>
            <param name="binding">Binding used for communication between client and service</param>
            <returns>Channel of specified type to a specified endpoint address</returns>
            <param name="domain">credentials domain to connect as</param>
            <param name="userName">credentials userName to connect as</param>
            <param name="password">credentials password to connect as</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Contracts.WcfConnector.CloseConnections">
            <summary>
            Closes open connections.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.BuildTracker">
            <summary>
            Property to access the IBuildTracker interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.Product">
            <summary>
            Property to access the IProduct interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.Branch">
            <summary>
            Property to access the IBranch interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.JobDefinition">
            <summary>
            Property to access the JobDefinition interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.JobInstance">
            <summary>
            Property to access the JobInstance interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.LegDefinition">
            <summary>
            Property to access the LegDefinition interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.LegInstance">
            <summary>
            Property to access the LegInstance interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.LegInstanceExecution">
            <summary>
            Property to access the LegInstanceExecution interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.InstanceQuery">
            <summary>
            Property to access the InstanceQuery interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.BuildShareGroup">
            <summary>
            Property to access the BuildShareGroup interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.Policy">
            <summary>
            Property to access the JobPolicy interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.Machine">
            <summary>
            Property to access the Machine interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.Disk">
            <summary>
            Property to access the Disk interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.BuildDrop">
            <summary>
            Accesses the BuildDrop interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.MachineGroup">
            <summary>
            Property to access the Machine interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.Affinity">
            <summary>
            Property to access the Affinity interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.BuildTracker36Qfe1">
            <summary>
            Property to access the IBuildTracker36Qfe1 interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.Product36Qfe1">
            <summary>
            Property to access the IProduct36Qfe1 interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.Branch36Qfe1">
            <summary>
            Property to access the IBranch36Qfe1 interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.JobDefinition36Qfe1">
            <summary>
            Property to access the JobDefinition36Qfe1 interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.InstanceQuery36Qfe1">
            <summary>
            Property to access the InstanceQuery36Qfe1 interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.BuildShareGroup36Qfe1">
            <summary>
            Property to access the BuildShareGroup36Qfe1 interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.JobSchedule36Qfe1">
            <summary>
            Property to access the JobSchedule interface
            Available since 3.6 QFE 1
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.JobService36Qfe1">
            <summary>
            Property to access the JobService interface
            Available since 3.6 QFE 1
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.Credentials36Qfe1">
            <summary>
            Property to access the Credentials interface
            Available since 3.6 QFE 1
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.JobInstance36Qfe1">
            <summary>
            Property to access the JobInstance interface
            Available since 3.6 QFE 1
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.LegInstance36Qfe1">
            <summary>
            Property to access the LegInstance interface
            Available since 3.6 QFE 1
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Contracts.WcfConnector.BuildDrop36Qfe1">
            <summary>
            Property to access the BuildDrop interface
            Available since 3.6 QFE 1
            </summary>
        </member>
    </members>
</doc>
