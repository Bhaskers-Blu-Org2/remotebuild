<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.BuildTracker.Client</name>
    </assembly>
    <members>
        <member name="T:Microsoft.BuildTracker.Client.Branch">
            <summary>
            Represents a BuildTracker branch
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.#ctor(Microsoft.BuildTracker.Client.Product,Microsoft.BuildTracker.Contracts.BranchData)">
            <summary>
            Creates an instance of Branch connected to an existing server-side branch
            </summary>
            <param name="parentProduct">Product that is the parent of the branch being created</param>
            <param name="branchData">BranchData object containing field values for this branch</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.BranchData)">
            <summary>
            Creates an instance of Branch connected to an existing server-side branch
            </summary>
            <param name="buildTracker">A reference to the BuildTracker service that is being used</param>
            <param name="branchData">BranchData object containing field values for this branch</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.Refresh">
            <summary>
            Reloads the fields
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.Save">
            <summary>
            Saves the fields
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.CreateBuildJobDefinition(System.String)">
            <summary>
            Creates a new job definition
            </summary>
            <param name="jobDefinitionName">The name of the new job. Needs to be unique within all jobs under the same branch.</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.Delete">
            <summary>
            Deletes this branch
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.GetProduct">
            <summary>
             Gets the parent product
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.GetJobDefinition(System.String)">
            <summary>
            Gets a job definition by name
            </summary>
            <param name="jobDefinitionName">The name of the job definition to get.</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.QueryJobInstances(System.String,Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses)">
            <summary>
            Simplified Job Instance querying using requestedBy and status only.
            Gets all job instances under this branch, for the given requester id and with the given statuses.
            </summary>
            <param name="requestedBy">name of the users who created the jobs</param>
            <param name="jobInstanceQueryStatuses">status of the included job instances</param>
            <returns>Collection of JobInstances with the matching status</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.GetBuildShareGroups">
            <summary>
            Returns collection of associated BuildShareGroups
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.GetBuildShareGroup(System.String)">
            <summary>
            Gets a BuildShareGroup by name
            </summary>
            <param name="buildShareGroupName">The name of the BuildShareGroup to lookup</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.CreateBuildShareGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Creates BuildShareGroup with default systemwide retention job definition
            </summary>
            <param name="buildShareGroupName">name of the build share group</param>
            <param name="buildShareGroupType">Type of BuildShare, e.g. Official, Buddy etc.</param>
            <param name="dropSharePath">path for drop folder, location where drop folder should be created </param>
            <param name="sourceSharePath">path for source folder, location where source folder should be created </param>
            <returns>object of BuildShareGroup which was created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.CreateBuildShareGroup(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates BuildShareGroup
            </summary>
            <param name="buildShareGroupName">name of the build share group</param>
            <param name="buildShareGroupType">Type of BuildShare, e.g. Official, Buddy etc.</param>
            <param name="dropSharePath">path for drop folder, location where drop folder should be created </param>
            <param name="sourceSharePath">path for source folder, location where source folder should be created </param>
            <param name="retentionJobDefinitionId">Id of the systemwide retention job definition, which will be associated with BuildShareGroup</param>
            <returns>object of BuildShareGroup which was created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.GetJobSchedules">
            <summary>
            Gets all of the JobSchedules for this Branch
            </summary>
            <returns>A collection of JobSchedule objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.SetRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Applies the credentials for the given RunAs account to this branch
            </summary>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.GetBuildJobDefinitions">
            <summary>
            Gets all build job definitions for this branch
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A Branch object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Branch.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.Name">
            <summary>
            Name of the branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.Id">
            <summary>
            BuildTracker Id value of the branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.CreateTime">
            <summary>
            DateTime when the branch was created
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.ProductId">
            <summary>
            BuildTracker Id value of the parent product of this branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.RunAsAlias">
            <summary>
            Account to run legs under, unless overridden
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this branch.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.Owners">
            <summary>
            List of aliases that are owners for this branch
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.Wcf">
            <summary>
            Shortcut to wcf
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.EnlistmentSettings">
            <summary>
            Enlistment configuration settings
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.InheritBuildDropParameters">
            <summary>
            A value of true indicates that this branch inherits BuildDropParameter definitions from it's parent product.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Branch.BuildDropParameters">
            <summary>
            Collection of BuildDropParameters for this branch
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildDrop">
            <summary>
            Represents a build drop (an output of a build job)
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.AddRemark(Microsoft.BuildTracker.Contracts.RemarkType,System.String)">
            <summary>
            Adds a new build drop remark
            </summary>
            <param name="text">the text of the remark to add</param>
            <param name="type">the type of the remark to add</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.GetRemarks">
            <summary>
            Gets all remarks associated with the given build drop
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.GetBuildJobInstances">
            <summary>
            Gets all related build job instances.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.GetDropJobInstances">
            <summary>
            Gets all related drop job instances.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.GetRetentionJobInstances">
            <summary>
            Gets all related retention job instances.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.ChangeRetentionStatus(Microsoft.BuildTracker.Contracts.BuildDropRetentionStatus)">
            <summary>
            changes the retention status for a given build drop
            </summary>
            <param name="newStatus">the new status to set the build drop to</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.Backup">
            <summary>
            Requests a backup of this build drop
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.Preserve">
            <summary>
            Marks this build drop to be preserved (no retention policies will touch it).
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.Unpreserve">
            <summary>
            Unpreserves a previously preserved build drop.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.RequestDeletion">
            <summary>
            Requests this build drop to be deleted.
            </summary>
            <remarks>The deletion can actually take a little bit to actually happen 
            as the deletion is handled by a background process.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.Refresh">
            <summary>
            Refreshes the properties of this BuildDrop with the data that is stored in BuildTracker
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.Save">
            <summary>
            Saves parameter changes back to the BuildTracker service
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A BuildDrop object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDrop.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.Wcf">
            <summary>
            Shortcut to get to the WCF
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.Id">
            <summary>
            Id of this BuildDrop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.BuildShareGroupId">
            <summary>
            Id of a BuildShareGroup that contains this build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.Name">
            <summary>
            The name of this build drop as defined in the build's scripts.
            Typically this is the version string.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.SourcePath">
            <summary>
            Path to the Sources location of this build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.DropPath">
            <summary>
            Path to the Drop location of this build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.LogsPath">
            <summary>
            Path to the Logs location of this build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.StartedTime">
            <summary>
            The moment when the build drop started being copied to its BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.DroppedTime">
            <summary>
            The moment when the build drop was dropped to the BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.DeletedTime">
            <summary>
            The moment when the build drop was deleted from the BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.Size">
            <summary>
            The size of the build drop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.RetentionStatus">
            <summary>
            Indicates the retentions status (deleted, preserved, etc. ...)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.RetentionMessage">
            <summary>
            Any retention related messages go here.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.RetentionExceptionOccurred">
            <summary>
            Indicates if there were any issues while processing retention for this build drop.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.Result">
            <summary>
            Overall build result. This is an aggregation of all BuildJobInstance statuses for this BuildDrop
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.IsDeleted">
            <summary>
            Indicates if this build drop is deleted.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDrop.BuildDropParameters">
            <summary>
            Collection of BuildDropParameters for this BuildDrop
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildDropQuery">
            <summary>
            Defines the elements of a query that selects a set of BuildDrops.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDropQuery.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDropQuery.#ctor(Microsoft.BuildTracker.Contracts.BuildDropQueryData)">
            <summary>
            Constructor
            </summary>
            <param name="buildDropQueryData">BuildDropQueryData object containing values to filter by</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.DateFrom">
            <summary>
            Start of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.DateTo">
            <summary>
            End of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.ProductId">
            <summary>
            Filter to build drops under the given product only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.BranchId">
            <summary>
            Filter to build drops under the given branch only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.BuildShareGroupId">
            <summary>
            Filter to build drops under the given build share group only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.SubmittedBy">
            <summary>
            Filter only builds submitted by this user
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.ParameterName">
            <summary>
            Filter only builds with this parameter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.ParameterValue">
            <summary>
            Filter only builds with this value for the parameter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.JobDefinitionId">
            <summary>
            Filter only builds from this job definition.  
            If both both JobDefinitionID and JobDefinitionName are supplied, JobDefinitionId takes precedence.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.JobDefinitionName">
            <summary>
            Filter only builds from this job definition.  
            If both both JobDefinitionID and JobDefinitionName are supplied, JobDefinitionId takes precedence.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.JobTypes">
            <summary>
            Filter only builds having these types
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.IncludeDeleted">
            <summary>
            Return deleted builds in the results
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.FailedOnly">
            <summary>
            Only return failed builds in the results
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropQuery.TopN">
            <summary>
            Limit results to this number of builds
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildShareGroup">
            <summary>
            Logical grouping of Build Shares (typically, a Drop Share path and a Source Share path) for which Build Retention Policies and Build Drop Policies can be defined.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.BuildShareGroupData)">
            <summary>
            Constructor to assign BuildShareGroupData values to this client class
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetRetentionJobDefinitions">
            <summary>
            Collection of RetentionJob definitions available for this buildshare group.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetRetentionJobDefinition(System.String)">
            <summary>
            Get a retention job definition by name.
            </summary>
            <param name="jobName">Name of the desired retention job definition.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.CreateRetentionJobDefinition(System.String)">
            <summary>
            Creates a retentionJobDefinition specific to this buildsharegroup
            </summary>
            <param name="retentionJobDefinitionName">name of RetentionJobDefinition</param>
            <returns>object of RetentionJobDefinition, created by this operation</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetRetentionPolicies">
            <summary>
            Gets a collection of all local retention policies defined for this BSG.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.CreateRetentionPolicy(System.Int32,System.Boolean,System.Int32,Microsoft.BuildTracker.Contracts.RetentionCondition)">
            <summary>
            Creates a new local retention policy, specific to this build share group
            </summary>
            <param name="minutesDelayAfterBuildJobCompletes">starting time of this policy after build completed</param>
            <param name="createEnabled">This instance of the Policy is enabled</param>
            <param name="quantity">Worked with Condition property, mandatory field, Value in this property will be replaced with Number in Condition property</param>
            <param name="retentionCondition">Condition for the execution of this policy</param>
            <returns>object of RetentionPolicy, which is created</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetAdminRetentionPolicies">
            <summary>
            Only a lab admin can create admin policies. These are forced on a given BSG. And cannot be opted out of.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.CreateAdminRetentionPolicy(System.Int32,System.Boolean,System.Int32,Microsoft.BuildTracker.Contracts.RetentionCondition)">
            <summary>
            Creates an Admin Retention policy for this build share group
            Only Admin can create Admin Retention policies
            </summary>
            <param name="minutesDelayAfterBuildJobCompletes">starting time of this policy after build completed</param>
            <param name="createEnabled">This instance of the Policy is enabled</param>
            <param name="quantity">Worked with Condition property, mandatory field, Value in this property will be replaced with Number in Condition property</param>
            <param name="retentionCondition">Condition for the execution of this policy</param>
            <returns>An admin RetentionPolicy which is associated with this BSG.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetDropJobDefinitions">
            <summary>
            Collection of drop job definitions available for this buildshare group.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetDropJobDefinition(System.String)">
            <summary>
            Get a drop job definition by name.
            </summary>
            <param name="jobName">Name of the desired drop job definition.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.CreateDropJobDefinition(System.String)">
            <summary>
            Creates a local DropJobDefinition - specific to this buildsharegroup
            </summary>
            <param name="dropJobDefinitionName">name of DropJobDefinition</param>
            <returns>object of DropJobDefinition, created by this operation</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetDropPolicies">
            <summary>
            Gets a collection of all local drop policies defined for this BSG.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.CreateDropPolicy(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a local (BSG - specific) drop policy.
            </summary>
            <param name="dropJobId">Id of the DropJobDefinition</param>
            <param name="minutesDelayAfterBuildJobCompletes">starting time of this policy after build completed</param>
            <param name="createEnabled">This instance of the Policy is enabled</param>
            <param name="runOnAutoDiscoveredBuild">Policy will execute auto discovered build</param>
            <returns>object of DropPolicy created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetExcludedSystemDropPolicies">
            <summary>
            System wide drop policies which are opted out of/excluded for this BSG.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.IncludeSystemPolicy(System.Int32)">
            <summary>
            Includes a system wide policy, which was previously excluded for this BSG.
            </summary>
            <param name="systemPolicyId">Id of the system policy, which will be included</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.ExcludeSystemPolicy(System.Int32)">
            <summary>
            Excludes a system wide policy for this BSG.
            </summary>
            <param name="systemPolicyId">Id of a system policy, which will be excluded</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetExcludedSystemRetentionPolicies">
            <summary>
            System wide retention policies which are opted out of/excluded for this BSG.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetAdminDropPolicies">
            <summary>
            Only a lab admin can create admin policies. These are forced on a given BSG. And cannot be opted out of.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.CreateAdminDropPolicy(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates an Admin drop policy for this build share group
            Only Admin can create Admin Drop policies
            Admin policies will be executed under admin account only.
            </summary>
            <param name="dropJobId">Id of the DropJobDefinition</param>
            <param name="minutesDelayAfterBuildJobCompletes">starting time of this policy after build completed</param>
            <param name="createEnabled">This instance of the Policy is enabled</param>
            <param name="runOnAutoDiscoveredBuild">Policy will execute auto discovered build</param>
            <returns>object of DropPolicy created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetBuildDrops(System.Boolean)">
            <summary>
            Gets the build drops for this BuildShareGroup
            </summary>
            <param name="excludeDeletedBuilds">Flag indicating whether deleted BuildDrops should be excluded in the retruned collection.</param>
            <returns>A collection of BuildDrop objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetBuildDrop(System.String)">
            <summary>
            Returns the BuildDrop for this BuildShareGroup with the given name
            </summary>
            <param name="buildDropName">Name of the build drop to get.</param>
            <returns>A BuildDrop object</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.Save">
            <summary>
            Method to save changes of build share group properties.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.Delete">
            <summary>
            Method to delete Build share group.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.Refresh">
            <summary>
            Method makes call to backend and refreshes class properties
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.SetRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Applies the credentials for the given RunAs account to this BuildShareGroup
            </summary>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A BuildShareGroup object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildShareGroup.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.Name">
            <summary>
            Name of this BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.Id">
            <summary>
            unique Id
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.ParentId">
            <summary>
            Id of the parent item, Only Product or Branch can be parent of a BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.Description">
            <summary>
            Description of BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.BuildShareGroupType">
            <summary>
            Type of BuildShareGroup, e.g. Official, Buddy etc.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.DropSharePath">
            <summary>
            path for drop folder, location where drop folder should be created 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.SourceSharePath">
            <summary>
            path for source folder, location where source folder should be created 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.RunAsAlias">
            <summary>
            Specific user's Alias. If set, retention and drop jobs will run under this account.
            If not specified, default user's credentials will be used.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this BuildShareGroup.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.DiscoverBuilds">
            <summary>
            Builds are auto-discovered if they exist on a Build Share, or marked as deleted if they do not exist on a Build Share.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.PreserveBuilds">
            <summary>
            If specified, discovered builds will be preserved.
            Preserved builds are excluded from any Build Retention Policies.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.RetentionJobDefinitionId">
            <summary>
            Id of RetentionJobDefinition which will be associated with this BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.RetentionRequiresOwnerApproval">
            <summary>
            Build retention policy instances can only queue retention jobs in pending state at queue time.
            A Build Share Group owner needs to approve the job execution.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.EnlistmentSettings">
            <summary>
            Enlistment configuration settings
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.InheritBuildDropParameters">
            <summary>
            A value of true indicates that this BuildShareGroup inherits BuildDropParameter definitions from it's parent product or branch.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.BuildDropParameters">
            <summary>
            Collection of BuildDropParameters for this BuildShareGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildShareGroup.Wcf">
            <summary>
            Shortcut to get to the Wcf object of IBuildShareGroup
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildDropCollection">
            <summary>
            BuildDrops
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.NamedItemCollection`1">
            <summary>
            Base collection class for all Client collections.
            All common client-collection specific methods will be added here as needed.
            Indexing, getting by name, id are examples ...
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.NamedItemCollection`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.NamedItemCollection`1.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">An object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.NamedItemCollection`1.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.NamedItemCollection`1.ModifiableCollection">
            <summary>
            The modifiable underlying list
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.AffinityCollection">
            <summary>
            A collection of Affinities
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.UnnamedItemCollection`1">
            <summary>
            Base collection class for Client classes that are not named items
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnnamedItemCollection`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnnamedItemCollection`1.#ctor(System.Collections.ObjectModel.Collection{`0})">
            <summary>
            Creates an UnnamedItemCollection from a Collection of T
            </summary>
            <param name="itemList">Collection of T</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnnamedItemCollection`1.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">An object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnnamedItemCollection`1.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.AffinityCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.AffinityCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.AffinityData})">
            <summary>
            Constructor
            </summary>
            <param name="parent">A reference to the BuildTracker service that is being used</param>
            <param name="affinitiesData">Collection of AffinityData</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildShareGroupCollection">
            <summary>
            BuildShareGroups
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildDropParameterCollection">
            <summary>
            A collection of BuildDropParameters
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDropParameterCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDropParameterCollection.#ctor(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.ParameterDefinitionData})">
            <summary>
            Constructor
            </summary>
            <param name="parametersData">Collection of ParameterDefinitionData</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDropParameterCollection.#ctor(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.ParameterInstanceData})">
            <summary>
            Constructor
            </summary>
            <param name="parametersData">Collection of ParameterDefinitionData</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobServiceCollection">
            <summary>
            A collection of machines
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobServiceCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobServiceCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.JobServiceData})">
            <summary>
            Creates a JobServiceCollection from a list of JobServiceData (from WCF)
            </summary>
            <param name="jobServiceDataList">Collection of JobServiceData</param>
            <param name="parent">the BuildTrackerService</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobScheduleCollection">
            <summary>
            A collection of build jobs
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.RetentionPolicyCollection">
            <summary>
            RetentionPolicies
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.DropPolicyCollection">
            <summary>
            DropPolicies
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.ParameterValueCollection">
            <summary>
            A collection of Parameters
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterValueCollection.#ctor">
            <summary>
            Default constuctor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterValueCollection.#ctor(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Client.ParameterValue})">
            <summary>
            Constructor
            </summary>
            <param name="parameterValues">collection of ParameterValues</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.ServiceIntervalCollection">
            <summary>
            A collection of ServiceIntervals
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ServiceIntervalCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.ServiceIntervalData})">
            <summary>
            Creates a ServiceIntervalCollection from a list of ServiceIntervalData (from WCF)
            </summary>
            <param name="serviceIntervalDataList"></param>
            <param name="parent"></param>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ServiceIntervalCollection.Item(System.String)">
            <summary>
            Indexer to return a ServiceInterval from the collection based on it's name
            </summary>
            <param name="name">Name of the ServiceInterval to return</param>
            <returns>A ServiceInterval object</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.ParameterCollection">
            <summary>
            A collection of Parameters
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterCollection.#ctor(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.ParameterDefinitionData})">
            <summary>
            Constructor
            </summary>
            <param name="parametersData">Collection of ParameterDefinitionData</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.DiskCollection">
            <summary>
            A collection of Disks
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DiskCollection.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A DiskCollection object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DiskCollection.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.AccountNameCollection">
            <summary>
            A collection of Owners
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.AccountNameCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.AccountNameCollection.#ctor(System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Creates a AccountNameCollection from a Collection of string
            </summary>
            <param name="ownerList">Collection of owners</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.AccountNameCollection.Contains(System.String)">
            <summary>
            Case-insensitive Contains method
            </summary>
            <param name="owner">The owner to find in the collection</param>
            <returns>True if the owner is found, false otherwise</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.AccountNameCollection.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">An AccountNameCollection object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.AccountNameCollection.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.MachineGroupCollection">
            <summary>
            A collection of MachineGroups
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroupCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.MachineGroupData})">
            <summary>
            Creates a MachineGroupCollection from a list of MachineGroupData (from WCF)
            </summary>
            <param name="machineGroupDataList"></param>
            <param name="parent"></param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.MachineCollection">
            <summary>
            A collection of machines
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.MachineData})">
            <summary>
            Creates a MachineCollection from a list of MachineData (from WCF)
            </summary>
            <param name="machineDataList"></param>
            <param name="parent"></param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.DropJobDefinitionCollection">
            <summary>
            A collection of drop jobs
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.DropJobInstanceCollection">
            <summary>
            JobInstances
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropJobInstanceCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.DropJobInstanceData})">
            <summary>
            Creates a DropJobInstanceCollection from a collection of DropJobInstanceData (from WCF)
            </summary>
            <param name="dropJobInstanceDataCollection">Collection of Contracts.DropJobInstanceData objects</param>
            <param name="parent">A reference to the BuildTracker service that is being used</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropJobInstanceCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.JobInstanceData})">
            <summary>
            Creates a JobInstanceCollection from a list of JobInstanceData (from WCF)
            </summary>
            <param name="jobInstanceDataCollection">Collection of Contracts.JobInstanceData objects</param>
            <param name="parent">A reference to the BuildTracker service that is being used</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegInstanceExecutionCollection">
            <summary>
            a collection of LegInstanceExecutions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegInstanceExecutionDataPointCollection">
            <summary>
            a collection of LegInstanceExecutionDataPoints
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.RemarkCollection">
            <summary>
            A collection of remarks
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RemarkCollection.#ctor(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.RemarkData})">
            <summary>
            Creates a RemarkCollection from a list of RemarkData (from WCF)
            </summary>
            <param name="remarkDataList"></param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.RetentionJobDefinitionCollection">
            <summary>
            A collection of retention jobs
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.RetentionJobInstanceCollection">
            <summary>
            JobInstances
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionJobInstanceCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.RetentionJobInstanceData})">
            <summary>
            Creates a RetentionJobInstanceCollection from a collection of RetentionJobInstanceData (from WCF)
            </summary>
            <param name="retentionJobInstanceDataCollection">Collection of Contracts.RetentionJobInstanceData objects</param>
            <param name="parent">A reference to the BuildTracker service that is being used</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionJobInstanceCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.JobInstanceData})">
            <summary>
            Creates a JobInstanceCollection from a list of JobInstanceData (from WCF)
            </summary>
            <param name="jobInstanceDataCollection">Collection of Contracts.JobInstanceData objects</param>
            <param name="parent">A reference to the BuildTracker service that is being used</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.Affinity">
            <summary>
            An affinity between BuildTracker items and MachineGroups
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Affinity.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService)">
            <summary>
            Private Constructor
            </summary>
            <param name="buildTracker">Object of BuildTrackerService</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Affinity.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Int32)">
            <summary>
            Instantiates a Affinity object by looking it up by ID
            </summary>
            <param name="id"></param>
            <param name="buildTracker"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Affinity.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.AffinityData)">
            <summary>
            Creates an instance initializing its data to the one passed in
            </summary>
            <param name="buildTracker"></param>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Affinity.Save">
            <summary>
            Persists the changes in this class to the backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Affinity.Refresh">
            <summary>
            Gets the latest data for this class from the backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Affinity.Delete">
            <summary>
            Deletes this affinity
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Affinity.Equals(System.Object)">
            <summary>
            Override of Object.Equals method
            </summary>
            <param name="obj">A Affinity object to compare to.</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>True if the Affinity objects are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Affinity.GetHashCode">
            <summary>
            Override of Object.GetHashCode
            </summary>
            <returns>A hashcode value for this Affinity object.</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.BuildTrackerService">
            <summary>
            The parent BuildTrackerService this Affinity belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.Data">
            <summary>
            Data of affinity
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.Id">
            <summary>
            Affinity's Id
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.MachineGroupId">
            <summary>
            Id of the MachineGroup to affinity with
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.ResourceId">
            <summary>
            Id of the resource to be affinitied
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.ResourceType">
            <summary>
            Type of resource to affinity to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.AffinityType">
            <summary>
            The type of affinity relationship
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.JobType">
            <summary>
            Type of job afffinity applies to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.AlternateParentId">
            <summary>
            Id of the parent to use for the affinity when the affinity is set to a system-level resource
            </summary>
            <remarks>
            When the affinity is system-level, this contains the Id of the BuildShareGroup that is the parent
            of the drop/retention job.  Otherwise this value is null.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Affinity.WcfAffinity">
            <summary>
            Shortcut to get to the WCF IAffinity
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.Disk">
            <summary>
            A disk that belongs to a machine
            Contains information about enlisting, logging and alert settings for the disk.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Disk.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.DiskData)">
            <summary>
            Creates an instance initializing its data to the one passed in
            </summary>
            <param name="buildTracker"></param>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Disk.Save">
            <summary>
            Persists the changes in this class to the backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Disk.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">Disk object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Disk.GetHashCode">
            <summary>
            Gets a hashcode value
            </summary>
            <returns>A hashcode</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.BuildTrackerService">
            <summary>
            The parent BuildTrackerService this Disk belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.Data">
            <summary>
            Data of disk
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.DriveLetter">
            <summary>
            Drive letter of this disk.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.CanEnlist">
            <summary>
            Indicates if BuildTracker can use this disk for enlistments.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.AllowLogs">
            <summary>
            Indicates if BUildTracker can store logs on this disk.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.FreeSpacePercentageErrorLevel">
            <summary>
            Errors are triggered if free space is below this % level
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.FreeSpacePercentageWarningLevel">
            <summary>
            Warnings are triggered if free space is below this % level
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.FreeSpacePercentageRequiredLevel">
            <summary>
            BuildTracker will cleanup disk space (enlistements, logs) if free space is below this % level.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.FreeSpaceRequiredMB">
            <summary>
            Mb required of free space. If less free space is requested, cleanup will start.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.TotalSize">
            <summary>
            Total disk size in Mb
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.AvailableSize">
            <summary>
            Available disk size in Mb
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.AvailablePercentage">
            <summary>
            Available disk percentage
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Disk.WcfDisk">
            <summary>
            Shortcut to get to the WCF IDisk
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.DropPolicy">
            <summary>
            Defines a condition upon which a drop job gets queued up
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobPolicy">
            <summary>
            Defines basic condition upon which a job gets queued up
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobPolicy.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="id">Id of the policy</param>
            <param name="buildShareGroupId">Id of the owner BuildShareGroup. Should be 0 for systemwide policies.</param>
            <param name="minutesDelayAfterBuildJobCompletes">starting time of this policy after build completed</param>
            <param name="createEnabled">This instance of the Policy is enabled</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobPolicy.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.PolicyData)">
            <summary>
            Constructor to assign PolicyData values to this client class
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobPolicy.Delete">
            <summary>
            Deletes a job policy
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobPolicy.Save">
            <summary>
            Save Policy.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobPolicy.Refresh">
            <summary>
            Refreshes the fields value of this class
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobPolicy.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A JobPolicy object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobPolicy.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobPolicy.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobPolicy.Id">
            <summary>
            Id of the policy
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobPolicy.BuildShareGroupId">
            <summary>
            Id of the owner BuildShareGroup. Value will be 0 for systemwide policies.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobPolicy.MinutesDelayAfterBuildJobCompletes">
            <summary>
            starting time of this policy after build completed
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobPolicy.Enabled">
            <summary>
            This instance of the Policy is enabled
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobPolicy.BuildShareGroupType">
            <summary>
            Used for system wide policies to target specific BSG types only.
            Ignored for BSG-specific policies.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropPolicy.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            RetentionPolicyData overloaded constructor
            </summary>
            <param name="id">Id of the policy</param>
            <param name="buildShareGroupId">Id of the owner BuildShareGroup</param>
            <param name="dropJobId">Id of the drop job, which will be associated with this policy</param>
            <param name="minutesDelayAfterBuildJobCompletes">starting time of this policy after build completed</param>
            <param name="createEnabled">This instance of the Policy is enabled</param>
            <param name="runOnAutoDiscoveredBuild">Policy will execute auto discovered build</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropPolicy.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            RetentionPolicyData overloaded constructor
            </summary>
            <param name="buildShareGroupId">Id of the owner BuildShareGroup</param>
            <param name="dropJobId">Id of the drop job, which will be associated with this policy</param>
            <param name="minutesDelayAfterBuildJobCompletes">starting time of this policy after build completed</param>
            <param name="createEnabled">This instance of the Policy is enabled</param>
            <param name="runOnAutoDiscoveredBuild">Policy will execute auto discovered build</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropPolicy.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.DropPolicyData)">
            <summary>
            Constructor to convert DropPolicyData to DropPolicy 
            </summary>
            <param name="buildTrackerService">Object of BuildTrackerService</param>
            <param name="dropPolicyData">object of DropPolicyData</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropPolicy.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A DropPolicy object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropPolicy.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.DropPolicy.DropJobId">
            <summary>
            Id of the drop job which will be executed under this policy
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.DropPolicy.RunOnAutoDiscoveredBuild">
            <summary>
            Policy will execute auto discovered build
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.EnlistmentSettings">
            <summary>
            Stores generic enlistment settings, BuidlTracker uses when assigning real enlistments on disk or creating new enlistments
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnlistmentSettings.#ctor">
            <summary>
            Creates a new instance with inheriting all settings from parent
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnlistmentSettings.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To set properties values
            </summary>
            <param name="fixedEnlistmentPath">value to set unique enilistment configuration in place of auto-enlistment</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnlistmentSettings.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">EnlistmentSettings to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnlistmentSettings.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.EnlistmentSettings.Clean">
            <summary>
            If specified, removes any pending changes before the leg command is run.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.EnlistmentSettings.InheritClean">
            <summary>
            Allows to inherit Parent's Clean settings, local Clean settings will be ignored
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.EnlistmentSettings.FixedEnlistmentPath">
            <summary>
            To set fixed enlistment path, or static enlistment
            If specified, All other settings are ignored
            If left blank, BuildTracker will attempt to auto-enlist using the specified SourceDepot, SDX, Folder and TFS settings when running a Leg
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.EnlistmentSettings.InheritFixedEnlistmentPath">
            <summary>
            Allows to inherit Parent's FixedEnlistmentPath settings, local FixedEnlistmentPath settings will be ignored
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.EnlistmentSettings.DisableAclReset">
            <summary>
            Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.FolderEnlistmentSettings">
            <summary>
            Stores Enlistment settings for folder enlistment on a disk
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.FolderEnlistmentSettings.#ctor">
            <summary>
            Creates a new instance with inheriting all settings from parent
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.FolderEnlistmentSettings.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To set properties values
            </summary>
            <param name="fixedEnlistmentPath">value to set unique enilistment configuration in place of auto-enlistment</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.FolderEnlistmentSettings.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">FolderEnlistmentSettings to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.FolderEnlistmentSettings.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.SdxEnlistmentSettings">
            <summary>
            Stores enlistment settings for SDX source control
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.#ctor">
            <summary>
            To set default enlistment settings, Inherit from Parent
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance with inheriting all settings from parent
            </summary>
            <param name="fixedEnlistmentPath">value to set unique enilistment configuration in place of auto-enlistment</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To set properties values
            </summary>
            <param name="codeBase">The SDX CodeBase. Ignored if Fix Enlistment Path is set</param>
            <param name="projects">A list of projects. If not specified, -a will be passed to sdx enlist when creating new enlistments. Ignored if Fix Enlistment Path is set</param>
            <param name="branch">The SDX Branch. Ignored if Fixed Enlistment Path is set</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">SdxEnlistmentSettings to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.CodeBase">
            <summary>
            The SDX CodeBase. Ignored if Fix Enlistment Path is set
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.InheritCodeBase">
            <summary>
            Allows to inherit Parent's CodeBase settings, local CodeBase settings will be ignonred.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.Projects">
            <summary>
            A list of projects. If not specified, -a will be passed to sdx enlist when creating new enlistments. Ignored if Fix Enlistment Path is set
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.InheritProject">
            <summary>
            Allows to inherit Parent's Projects settings, local Projects settings will be ignonred.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.Branch">
            <summary>
            The SDX Branch. Ignored if Fix Enlistment Path is set
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SdxEnlistmentSettings.InheritBranch">
            <summary>
            Allows to inherit Parent's Branch settings, local Branch settings will be ignonred.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings">
            <summary>
            Stores enlistment settings for Source Depot control
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.#ctor">
            <summary>
            Creates a new instance with inheriting all settings from parent
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To Set properties values if FixedEnlistmentPath Root is defined
            </summary>
            <param name="fixedEnlistmentPath">value to set unique enilistment configuration in place of auto-enlistment</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To set properties values
            </summary>
            <param name="serverName">Source Depot server name and port number to use to Auto-Enlist on build machines</param>
            <param name="proxyServerName">Source Depot proxy server name and port number to use for fetching source files during a build jobs</param>
            <param name="clientView">Source Depot client view to use to Auto-Enlist on build machines. Use the [CLIENT] keyword to denote the client name that is auto-generated</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">SourceDepotEnlistmentSettings to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.ServerName">
            <summary>
            Source Depot server name and port number to use to Auto-Enlist on build machines.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.InheritServerName">
            <summary>
            Allows to inherit Parent's ServerName, local ServerName will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.ProxyServerName">
            <summary>
            Source Depot proxy server name and port number to use for fetching source files during a build jobs.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.InheritProxyServerName">
            <summary>
            Allows to inherit Parent's ProxyServerName, local ProxyServerName will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.ClientView">
            <summary>
            Source Depot client view to use to Auto-Enlist on build machines. Use the [CLIENT] keyword to denote the client name that is auto-generated.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.InheritClientView">
            <summary>
            Allows to inherit Parent's ClientView, local ClientView will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.ClientOptions">
            <summary>
            Source Depot client options used when creating an enlistment on build machines. If empty, the default client options are used: noallwrite clobber nocompress locked nomodtime rmdir
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.SourceDepotEnlistmentSettings.InheritClientOptions">
            <summary>
            Allows to inherit Parent's ClientOptions, local ClientOptions will be ignored.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings">
            <summary>
            Stores enlistment settings for TFS source control
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings.#ctor">
            <summary>
            Creates a new instance with inheriting all settings from parent
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To Set properties values if FixedEnlistmentPath Root is defined
            </summary>
            <param name="fixedEnlistmentPath">value to set unique enilistment configuration in place of auto-enlistment</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To Set properties values
            </summary>
            <param name="teamFoundationServerName">Team Foundation Server URL, Optional when an Enlistment Root is specified</param>
            <param name="workspaceMapping">Similar to what tf.exe workfold would return in your workspace. Use [CLIENT] to specify the root directory that BuildTracker will automatically create when auto-enlisting</param>
            <param name="clean">If specified, removes any pending changes before the leg command is run</param>
            <param name="inheritClean">Allows to inherit parent's clean settings, local Clean settings will be ignored</param>
            <param name="disableAclReset">Disables reapplying the ACLs at sync time, Only applies when doing auto-enlistment (i.e. no enlistment root set).</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">TeamFoundationServerEnlistmentSettings to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings.ServerName">
            <summary>
            Team Foundation Server URL, Optional when Fixed Enlistment Path is specified
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings.InheritServerName">
            <summary>
            Allows to inherit Parent's TeamFoundationServerName settings, local TeamFoundationServerName settings will be ignored
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings.WorkspaceMapping">
            <summary>
            Similar to what tf.exe workfold would return in your workspace. Use [CLIENT] to specify the root directory that BuildTracker will automatically create when auto-enlisting.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.TeamFoundationServerEnlistmentSettings.InheritWorkspaceMapping">
            <summary>
            Allows to inherit Parent's WorkspaceMapping settings, local WorkspaceMapping settings will be ignored
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.UnauthorizedException">
            <summary>
            Exception to be thrown for fail authorization of the user 
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.ApiException">
            <summary>
            Base class for all BuildTracker Client Api exception
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization Constructor for ApiException class
            </summary>
            <param name="serializationInfo">Stores all the data needed to serialize or deserialize an object</param>
            <param name="streamingContext">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ApiException.#ctor(System.ServiceModel.FaultException{Microsoft.BuildTracker.Contracts.ApiFault})">
            <summary>
            Constructor
            </summary>
            <param name="apiFault">ApiFault exception from Api service</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ApiException.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message that describes the exception</param>
            <param name="stackTrace">Inner exception details</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ApiException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message that describes the exception</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ApiException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message that describes the exception</param>
            <param name="exception">Inner exception</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ApiException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ApiException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization Method to set SerializationInfo with the information of exception 
            </summary>
            <param name="info">Stores all the data needed to serialize or deserialize an object</param>
            <param name="context">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ApiException.Message">
            <summary>
            Message that describes the exception
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ApiException.StackTrace">
            <summary>
            Inner exception details
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnauthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization Constructor for UnauthorizedException class
            </summary>
            <param name="serializationInfo">Stores all the data needed to serialize or deserialize an object</param>
            <param name="streamingContext">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnauthorizedException.#ctor(System.ServiceModel.FaultException{Microsoft.BuildTracker.Contracts.AccessDeniedFault})">
            <summary>
            Constructor to convert AccessDeniedFault to UnauthorizedException
            </summary>
            <param name="accessDeniedFault">AccessDeniedFault thrown by the Api service</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnauthorizedException.#ctor(System.String,System.String)">
            <summary>
            Constructor to take message and stackTrace as input parameters
            </summary>
            <param name="message">exception message to be shown</param>
            <param name="stackTrace">exception stackTrace details</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnauthorizedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization Method to set SerializationInfo with the information of exception 
            </summary>
            <param name="info">Stores all the data needed to serialize or deserialize an object</param>
            <param name="context">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnauthorizedException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnauthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Overloaded constructor
            </summary>
            <param name="message">excpetion message to be shown</param>
            <param name="exception">actual exception</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.UnauthorizedException.#ctor(System.String)">
            <summary>
            Overloaded constructor
            </summary>
            <param name="message">exception message to be shown</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ExceptionExtension.ConvertToClientException(System.Exception)">
            <summary>
            Method to convert FaultException to specific Client Exception
            </summary>
            <param name="exception">thrown exception</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildJobInstance">
            <summary>
            Build Job Instance
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobInstance">
            <summary>
            An instance of a job. Instances are the entities that track execution of a job.
            </summary>
            <remarks>In pre BT v3.5 world they were called JobQueues</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.GetJobDefinition">
            <summary>
            Gets the GetJobDefinition this JobInstance is based on
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.GetRemarks">
            <summary>
            Gets all remarks associated with this JobInstance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.Abort">
            <summary>
            Aborts this JobInstance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.Retry(System.Boolean)">
            <summary>
            Retries this JobInstance
            </summary>
            <param name="resetSyncTime">Indicates whether the SyncTime should be reset to now.</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.Approve">
            <summary>
            Approves this job instance.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.Deny">
            <summary>
            Denies this job instance.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.Refresh">
            <summary>
            Refreshes the fields from the backend service
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.Delete">
            <summary>
            Cancels this Job Instance. This method can only be called if the JobInstance is not running yet.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.ChangePriority(Microsoft.BuildTracker.Contracts.JobPriority)">
            <summary>
            Method to change scheduling Priority of JobInstance
            </summary>
            <param name="jobSchedulingPriority">new job scheduling priority</param>
            <returns>Updated object of JobInstance</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.GetLegInstances">
            <summary>
            Gets leg instances this job instance consists of
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.ChangeParameters(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Mehtod to update existing parameterInstances's selected value
            </summary>
            <param name="parameterAndValues">Collection of KeyValue pair. Key should be any exisitng ParameterInstance name, value would be new selected value</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.AddRemark(Microsoft.BuildTracker.Contracts.RemarkType,System.String)">
            <summary>
            Adds a new job instance remark
            </summary>
            <param name="text">the text of the remark to add</param>
            <param name="type">the type of the remark to add</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">JobInstance to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstance.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.Name">
            <summary>
            Name of the GetJobDefinition for this JobInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.Id">
            <summary>
            The Id for this JobInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.Priority">
            <summary>
            priority Id
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.JobScheduleId">
            <summary>
            id of the schedule that started this JobInstance
            if the job was started manually this field is not set
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.JobDefinitionId">
            <summary>
            Id of the parent job definition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.ParentJobInstanceId">
            <summary>
            ID of the parent job instance. 
            Applicable only to child jobs of job legs.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.StartDateTime">
            <summary>
            the date and time when this JobInstance was started
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.CompletedDateTime">
            <summary>
            the date and time when this JobInstance was completed
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.SubmittedBy">
            <summary>
            user name who submitted the job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.SequenceDateTime">
            <summary>
            the date and time when this JobInstance was sequenced
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.Simulate">
            <summary>
            Should this be a simulated job?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.Status">
            <summary>
            Status of this JobInstance (queued, running, failed, etc.)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.NotifyRequester">
            <summary>
            Indicates if the requester should be notified when this jobInstance completes.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.Sync">
            <summary>
            Sync
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.SyncDateTime">
            <summary>
            sync to the given point in time
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.Parameters">
            <summary>
            Collection of Parameter Instances, Parameters assign to JobInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.Wcf">
            <summary>
            Shortcut to get to the Wcf object of IJobInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.BuildDropId">
            <summary>
            ID of the build drop associated with this JobInstance, if there is one.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.IsStarted">
            <summary>
            To check if JobInstance is under Started status category
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstance.IsFinished">
            <summary>
            To check if JobInstance under Finished status category
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobInstance.GetJobDefinition">
            <summary>
            Gets the parent (BuildJobDefinition)
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobInstance.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">BuildJobInstance to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobInstance.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildJobInstance.ProductId">
            <summary>
            Id of a Product this BuildJobInstance belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildJobInstance.BranchId">
            <summary>
            Id of a Branch this BuildJobInstance belongs to
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ClientExtensions.ToContractData(Microsoft.BuildTracker.Client.ParameterCollection)">
            <summary>
            Method to convert 'Collection of Parameter' to 'Collection of ParameterDefinitionData'
            </summary>
            <param name="parameterCollection">Collection of parameters</param>
            <returns>Collection of ParameterDefinitionData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ClientExtensions.ToContractData(Microsoft.BuildTracker.Client.BuildDropParameterCollection)">
            <summary>
            Method to convert 'Collection of Parameter' to 'Collection of ParameterDefinitionData'
            </summary>
            <param name="parameterCollection">Collection of parameters</param>
            <returns>Collection of ParameterDefinitionData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ClientExtensions.ToParameterInstanceContractData(Microsoft.BuildTracker.Client.BuildDropParameterCollection)">
            <summary>
            Method to convert 'Collection of Parameter' to 'Collection of ParameterDefinitionData'
            </summary>
            <param name="parameterCollection">Collection of parameters</param>
            <returns>Collection of ParameterDefinitionData objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ClientExtensions.ToContractData(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Client.LegParameterMapping},System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.LegParameterMappingData})">
            <summary>
            Method to convert 'Collection of LegParameterMapping' to 'Collection of LegParameterMappingData'
            </summary>
            <param name="legParameterMappingCollection">Collection of LegParameterMapping</param>
            <param name="legParameterMappingDataCollection">Collection of LegParameterMappingData</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ClientExtensions.ToContractData(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Client.LegJobParameterMapping},System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.LegParameterMappingData})">
            <summary>
            Method to convert 'Collection of LegJobParameterMapping' to 'Collection of LegParameterMappingData'
            </summary>
            <param name="legJobParameterMappingCollection">Collection of LegJobParameterMapping</param>
            <param name="legParameterMappingDataCollection">Collection of LegJobParameterMappingData</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ClientExtensions.ToClient(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.LegParameterMappingData},System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Client.LegParameterMapping})">
            <summary>
            Method to convert 'Collection of LegParameterMappingData' to 'Collection of LegParameterMapping'
            </summary>
            <param name="legParameterMappingCollection">Collection of LegParameterMapping</param>
            <param name="legParameterMappingDataCollection">Collection of LegParameterMappingData</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ClientExtensions.ToClient(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.LegParameterMappingData},System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Client.LegJobParameterMapping})">
            <summary>
            Method to convert 'Collection of LegParameterMappingData' to 'Collection of LegJobParameterMapping'
            </summary>
            <param name="legJobParameterMappingCollection">Collection of LegJobParameterMapping</param>
            <param name="legParameterMappingDataCollection">Collection of LegJobParameterMappingData</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ClientExtensions.ToClient(System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Client.Parameter},System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.ParameterInstanceData})">
            <summary>
            Method to convert 'Collection of ParameterInstanceData' to 'Collection of ParameterInstance'
            </summary>
            <param name="parameterDefinitionCollection">Collection of ParameterDefinition object</param>
            <param name="parameterInstanceDataCollection">Collection of ParameterInstanceData object</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.EnumerationException">
            <summary>
            EnumerationException: Client Api exception
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnumerationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for EnumerationException class
            </summary>
            <param name="serializationInfo">Stores all the data needed to serialize or deserialize an object</param>
            <param name="streamingContext">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnumerationException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnumerationException.#ctor(System.ServiceModel.FaultException{Microsoft.BuildTracker.Contracts.EnumerationFault})">
            <summary>
            Constructor
            </summary>
            <param name="enumerationFault">EnumerationFault exception from Api service</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnumerationException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message that describes the exception</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnumerationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message that describes the exception</param>
            <param name="exception">Inner exception</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.EnumerationException.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message that describes the exception</param>
            <param name="stackTrace">Inner exception</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.ItemNotFoundException">
            <summary>
            ItemNotFoundException: Client Api exception
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ItemNotFoundException.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ItemNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor to take acutal exception and custom exception message.
            </summary>
            <param name="message">excpetion message to be shown</param>
            <param name="exception">actual exception</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ItemNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization Constructor for ItemNotFoundException class
            </summary>
            <param name="serializationInfo">Stores all the data needed to serialize or deserialize an object</param>
            <param name="streamingContext">Describes the source and destination of a given serialized stream</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ItemNotFoundException.#ctor(System.ServiceModel.FaultException{Microsoft.BuildTracker.Contracts.ItemNotFoundFault})">
            <summary>
            Overloaded Constructor with ItemNotFoundFault
            </summary>
            <param name="itemNotFoundFault">ItemNotFoundFault exception from Api service</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ItemNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Overloaded Constructor
            </summary>
            <param name="message">Message that describes the exception</param>
            <param name="parameterName">parameter value which was not found and caused the excpetion</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ItemNotFoundException.#ctor(System.String)">
            <summary>
            Overloaded Constructor
            </summary>
            <param name="message">Message that describes the exception</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildJobInstanceCollection">
            <summary>
            JobInstances
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobInstanceCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.BuildJobInstanceData})">
            <summary>
            Creates a BuildJobInstanceCollection from a collection of BuildJobInstanceData (from WCF)
            </summary>
            <param name="buildJobInstanceDataCollection">Collection of Contracts.BuildJobInstanceData objects</param>
            <param name="parent">A reference to the BuildTracker service that is being used</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobInstanceCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.JobInstanceData})">
            <summary>
            Creates a JobInstanceCollection from a list of JobInstanceData (from WCF)
            </summary>
            <param name="jobInstanceDataCollection">Collection of Contracts.JobInstanceData objects</param>
            <param name="parent">A reference to the BuildTracker service that is being used</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobInstanceQuery">
            <summary>
            Structure containing all of the fields that will be used to form a query to select JobInstances.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstanceQuery.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstanceQuery.#ctor(Microsoft.BuildTracker.Contracts.JobInstanceQueryData)">
            <summary>
            Constructor
            </summary>
            <param name="jobInstanceQueryData">JobInstanceQueryData object containing field values for this branch</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstanceQuery.#ctor(System.String,Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses)">
            <summary>
            Constructor
            </summary>
            <param name="requestedBy">Name of the user who created the jobs</param>
            <param name="jobInstanceQueryStatuses">Filter on JobInstance status. Multiple statuses can be provided in the filter</param>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.OnlyLatestForEachJobDefinition">
            <summary>
            True for only latest records of each JobDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.DateFrom">
            <summary>
            Start of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.DateFromQueryType">
            <summary>
            Database column where DateFrom condition should be applied.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.DateToQueryType">
            <summary>
            Database column name where DateTo condition should be applied.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.DateTo">
            <summary>
            End of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.Status">
            <summary>
            Filter on JobInstance status. Multiple statuses can be provided in the filter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.OrderBy">
            <summary>
            Sets the sort order. Used in the "top N" scenario -> in conjuntion with the .TopN field
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.SortDirection">
            <summary>
            data sorting direction
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.TopN">
            <summary>
            Return the top N instances only.
            Sort using the .OrderBy and .SortDirection fields.
            
            Positive number - sort ascending
            Negative number - sort descending
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.Overdue">
            <summary>
            Filter for overdue, not-overdue, don't care
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.RequestedBy">
            <summary>
            Filter to only the instances submitted by the given user
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.ProductId">
            <summary>
            Filter to instances under the given product only
            ProductId is having least priority
            ProductId would be included in query filter condition if JobDefinitionId, JobScheduleId and BranchId are not having values
            ProductId value won't be included in query if anyother Id field is having value.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.BranchId">
            <summary>
            Filter to instances under the given branch only
            BranchId is having second least priority
            BranchId would be included in query, if JobDefinitionId, JobScheduleId are not having values
            ProductId value won't be included in the query if BranchId is having value
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.JobDefinitionId">
            <summary>
            Filter to instances of the given job definition
            JobDefinitionId has highest priority
            JobScheduleId, BranchId and ProductId won't be included in query filter condition if JobDefinitionId is having value
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.JobScheduleId">
            <summary>
            Filter to instances of the given job schedule
            JobScheduleId is having second highest priority.
            BranchId and ProductId won't be included in query filter condition if JobScheduleId is having value
            if JobDefinitionId is also having value, JobScheduleId won't be included in query filter condition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobInstanceQuery.JobTypes">
            <summary>
            Type of the JobDefinition that is parent to the JobInstance
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegInstanceExecution">
            <summary>
            An execution of a LegInstance.
            </summary>
            <remarks>
            When a LegInstance finishes running on a job service machine, a LegInstanceExecution is created to
            store information about its execution. Since a LegInstance can be restarted any number of times, 
            a new LegInstanceExecution is created each time a LegInstance completes to store information about
            its execution.
            A LegInstance cannot be created, updated, or deleted. It exists for historical analysis only.
            </remarks>    
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstanceExecution.GetDataPoints">
            <summary>
            Gets the LegInstanceExecutionDataPoints for a LegInstanceExecution
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.Id">
            <summary>
            Id for this LegInstanceExecution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.LegInstanceId">
            <summary>
            The parent LegInstance Id for this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.RestartNumber">
            <summary>
            Restart Number for this leg instance execution
            </summary>
            <remarks>
            The RestartNumber is incremented each time a LegInstance is restarted (resumed). If a LegInstance is never
            restarted, its RestartNumber will be 0.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.WaitingStartedTime">
            <summary>
            Date and time that this leg instance execution started waiting for dependencies
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.ReadyStartedTime">
            <summary>
            Date and time that the leg instance execution was ready to run (e.g. satisfied all leg dependencies
            and was only waiting for a free job service machine to be executed on).
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.PreparingStartedTime">
            <summary>
            Date and time that this leg instance execution started the preparation stage (e.g. enlistment preparation,
            such as creating/syncing a workspace).
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.ExecutingStartedTime">
            <summary>
            Date and time the execution stage started (e.g. the leg command script began running on a 
            job service machine).
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.FinishedTime">
            <summary>
            Date and time that this this leg instance execution finished
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.Status">
            <summary>
            Finished LegInstance State of the leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.ExitCode">
            <summary>
            Exit code (e.g. errorlevel) of the leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.MachineId">
            <summary>
            ID of the machine which ran this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.MachineName">
            <summary>
            Name of the machine which ran this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.RemoteMachineId">
            <summary>
            For remote legs, this is the Id of the target machine which ran this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.RemoteMachineName">
            <summary>
            For remote legs, this is the name of the target machine which ran this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.EstimatedExecutionTime">
            <summary>
            Estimated execution time of this leg instance execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.OverdueState">
            <summary>
            OverDue state of this leg instance execution
            </summary>
            <remarks>
            This value can be OnTime, Delayed, or OverDue, depending on the duration of the execution time.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.LogFileLocalPath">
            <summary>
            the local file path of the log file for this leg instance execution, on the machine it ran on
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.NewEnlistmentCreated">
            <summary>
            Was a new enlistment created for this leg instance?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecution.LogUrl">
            <summary>
            The URL of the log for this leg instance execution
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegInstanceExecutionDataPoint">
            <summary>
            A data point of a LegInstanceExecution.
            </summary>
            <remarks>
            When a LegInstance finishes running on a job service machine, BuildTracker scans the environmental variables
            in the execution environment for those variables with the prefix "BuildTracker.DataPoint.". 
            These environmental variables are recorded as LegExecutionDataPoints for each execution of a LegInstance 
            (e.g. a new set of data points will be collected each time a LegInstance is restarted and finishes).
            Data points are commonly used to store instrumentation or statistics about the LegInstance's command execution.
            A LegInstanceExecutionDataPoint cannot be created, updated, or deleted. It exists for historical analysis only.
            </remarks>    
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecutionDataPoint.Name">
            <summary>
            The Name of the datapoint
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceExecutionDataPoint.Value">
            <summary>
            The Value of the datapoint
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.RetentionJobInstance">
            <summary>
            Retention Job Instance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionJobInstance.GetJobDefinition">
            <summary>
            Gets the parent (RetentionJobDefinition)
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionJobInstance.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">RetentionJobInstance to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionJobInstance.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.DropJobInstance">
            <summary>
            Drop Job Instance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropJobInstance.GetJobDefinition">
            <summary>
            Gets the parent (DropJobDefinition)
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropJobInstance.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">DropJobInstance to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropJobInstance.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobSchedule">
            <summary>
            JobSchedule defines all the metadata needed for scheduling a job
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobSchedule.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.JobScheduleData)">
            <summary>
            Constructor to assign JobScheduleData values to this client class
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobSchedule.Save">
            <summary>
             Save changes to the properties to BuildTracker
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobSchedule.Refresh">
            <summary>
            Get the data for this JobSchedule from BuildTracker and repopulate the properties
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobSchedule.Delete">
            <summary>
            Deletes this JobSchedule
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobSchedule.SetChangeDetectionRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Specify the credentials of the RunAs account to use to check for last enlistment changes 
            </summary>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobSchedule.Equals(System.Object)">
            <summary>
            Compares two JobSchedules
            </summary>
            <param name="obj">JobSchedule to compare to.</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields of the objects match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobSchedule.GetHashCode">
            <summary>
            Gets a hashcode 
            </summary>
            <returns>Hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.Id">
            <summary>
            BuildTracker ID of the JobSchedule
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.BuildJobDefinitionId">
            <summary>
            ID of the job that is to be scheduled.
            </summary>
            <remarks>
            If null, this JobSchedule will become a template that everyone can use to create other JobSchedules
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.Name">
            <summary>
            Name for this JobSchedule
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.Description">
            <summary>
            Descriptive text for this JobSchedule
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.Priority">
            <summary>
            Priority to give to the JobInstances created by this Job Schedule.
            If null, Priority of the Job is used.
            </summary>
            <remarks>
            A priority of "Highest" is invalid for a JobSchedule.  Attempting set the priority to "Highest"
            will cause an exception. 
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.Enabled">
            <summary>
            If true, the job gets queued to run as specified by the settings.
            If false, the job won't get queued and previously created JobInstances that have not started yet are canceled. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.DaysOfWeek">
            <summary>
            The Day(s) of the week for scheduling the job.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.StartDate">
            <summary>
            Jobs won't be scheduled before this date.
            </summary>
            <remarks>
            This property specifies a particular date value only, an exception will be thrown if the time portion of the DateTime is not zero.
            Date values are considered to be relative to the timezone of the BuildTracker database and should not be in UTC because that indicates 
            a particular point in time independent of timezone.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.EndDate">
            <summary>
            If not null, no new JobInstances will be created for this Job Schedule after the specified date.  If it is null,
            JobInstances will continue to be created by this JobSchedule without end.
            </summary>
            <remarks>
            This property specifies a particular date value only, an exception will be thrown if the time portion of the DateTime is not zero.
            Date values are considered to be relative to the timezone of the BuildTracker database and should not be in UTC because that indicates 
            a particular point in time independent of timezone.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.DailyStartTime">
            <summary>
             The time of day when you want the job to first get scheduled each day. 
            </summary>
            <remarks>
            The TimeSpan value assigned to this property specifies the time of day as the amount of time that has elapsed since midnight.
            Consequently, negative values and TimeSpans longer than 24 hours are not allowed.  Time values are considered to be relative to
            the timezone of the BuildTracker database.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.DailyEndTime">
            <summary>
            If not null, jobs are not re-scheduled past this time of the day.  If it is null, jobs may be rescheduled through the end of the day.
            This only applies for Job Schedules that include Rescheduling and/or Synchronization to a Job Schedule or Enlistment.
            </summary>
            <remarks>
            The TimeSpan value assigned to this property specifies the time of day as the amount of time that has elapsed since midnight.
            Consequently, negative values and TimeSpans longer than 24 hours are not allowed.  Time values are considered to be relative to
            the timezone of the BuildTracker database.  BuildTracker only stores times to the nearest millisecond.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.Rescheduling">
            <summary>
            Queue the job several times per day.
            The Start Time and End Time define the window of opportunity where new JobQueues can be scheduled.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.ReschedulingTimeSpan">
            <summary>
            Time period to add to the previous JobInstance start or completion.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.Sync">
            <summary>
            Indicates whether the enlistment needs to be synchronized before running Command LegInstances.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.SyncTo">
            <summary>
            The conditions to use to determine the point at which to synchronize the enlistment
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.SyncReferenceJobScheduleId">
            <summary>
            The Job Schedule that the current Job Schedule should use as its SyncTime reference
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.ChangeDetectionEnlistmentSettings">
            <summary>
            These are the enlistments settings to use for detecting a change 
            </summary>
            <remarks>
            Enlistment settings may need to be configured to exclude the version file and perhaps internal team documentation folders. 
            This helps avoid unnecessary builds being triggered by non-code changes.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.ChangeDetectionRunAsAlias">
            <summary>
            Check for last Enlistment changes under specified credentials.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.EffectiveChangeDetectionRunAsAlias">
            <summary>
            Account that will be inherited if the ChangeDetection Credentials are not set on this JobSchedule.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.Parameters">
            <summary>
            Name-value pairs of the Job Parameters and values to be passed to Job Instances created for this job schedule.
            Multi-valued parameter values are specified with a comma delimited string.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobSchedule.Wcf">
            <summary>
            Shortcut to wcf
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobService">
            <summary>
            Windows service that runs job's legs, such as BuildQ and BuildRemoteExec
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobService.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.JobServiceData)">
            <summary>
            Constructor to assign JobServiceData values to this client class
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobService.Save">
            <summary>
             Save changes to the properties to BuildTracker
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobService.Refresh">
            <summary>
            Get the data for this JobService from BuildTracker and repopulate the properties
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobService.Delete">
            <summary>
            Deletes this JobService
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobService.Equals(System.Object)">
            <summary>
            Compares two JobServices
            </summary>
            <param name="obj">JobService to compare to.</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields of the objects match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobService.GetHashCode">
            <summary>
            Gets a hashcode 
            </summary>
            <returns>Hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobService.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobService.Id">
            <summary>
            ID of the JobService
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobService.AllowedJobTypes">
            <summary>
            Defines the list of types of Jobs (Build, BuildRetention, Drop) a given Job Service is allowed to run. 
            If None is selected then this Job Service will not process any Jobs
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobService.MachineId">
            <summary>
            ID of the machine where the Job Service is installed
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobService.MaximumWorkerThreads">
            <summary>
            Lists the maximum number of LegInstances the given Job Service can process concurrently
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobService.RequestedState">
            <summary>
            An administrator can request for that a service enter the following states by setting the RequestedState. 
            After the RequestedState is saved BuildTracker will process the request and apply it to the JobSevice. 
            Once applied the State property will reflect the requested state.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobService.State">
            <summary>
            The state that the JobService is currently in
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobService.JobServiceType">
            <summary>
            The type of the JobService, as specified by the type of legs that it runs.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobService.Wcf">
            <summary>
            Shortcut to wcf
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LabConfiguration">
            <summary>
            Settings to fine-tune lab's operation.
            For security reasons, some values are only populated for BT Administrators.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LabConfiguration.Save">
            <summary>
            Saves any updates to this configuration to the backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LabConfiguration.Refresh">
            <summary>
            Populates the LabConfiguration object with current data from the BuildTracker server.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LabConfiguration.GetDefaultRetentionJob">
            <summary>
            A default retention job is created during install. It can be edited by lab administrators for custom actions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LabConfiguration.GetBackupJob">
            <summary>
            Returns the special built-in job "BuildTracker: Build Backup" that belongs to and must be configured by the lab. 
            Out of the box, this job has no legs. It is up to the lab to add leg(s) to the job that will actually perform the backup. 
            BuildTracker itself does not provide the actual mechanism for doing the backup, it merely exposes the backup mechanism via 
            the built-in backup job.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LabConfiguration.SetDefaultRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Sets the given credentials as the default RunAs account for this BuildTracker Lab
            </summary>
            <remarks>
            This will be the default user for running jobs.
            </remarks>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LabConfiguration.SetLabManagementCredentials(System.String,System.Security.SecureString)">
            <summary>
            Sets the given credentials as the account of the Lab Management User.
            </summary>
            <remarks>
            This will be the user used by services for managing the lab.
            </remarks>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LabConfiguration.Equals(System.Object)">
            <summary>
            Override of Object.Equals method
            </summary>
            <param name="obj">A Machine object to compare to.</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>True if the LabConfiguration objects are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LabConfiguration.GetHashCode">
            <summary>
            Override of Object.GetHashCode
            </summary>
            <returns>A hashcode value for this LabConfiguration object.</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.BuildTrackerService">
            <summary>
            BT service object this configuration belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.TimeZone">
            <summary>
            The time zone of the BuildTracker system. 
            </summary>
            <remarks>This field is currently set to the DB server TZ during the setup.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.AllowJobsToRunWithAdminPrivileges">
            <summary>
            Allow jobs to run under accounts which have admin privileges on build machines.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.KeepDaysOfLegLogs">
            <summary>
            The number of days of leg instance logs history to keep.
            Minimum value = 0, recommend value = 14.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.KeepMonthsOfJobInstanceHistory">
            <summary>
            Number of months of job instance history to keep. 
            Minimum value = 1. Recommended value = 12.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.KeepMonthsOfBuildHistory">
            <summary>
            Number of Months of Deleted Build History to Keep 
            Minimum value = 2. Recommended value = 12.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.KeepMonthsOfEnlistmentHistory">
            <summary>
            Number of Months of Deleted Enlistment History to Keep 
            Minimum value = 1. Recommended value = 3.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.KeepMonthsOfEnlistmentLogs">
            <summary>
            Number of Months of Enlistment Logs to Keep 
            Minimum value = 1. Recommended value = 3.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.KeepMonthsOfJobDefinitionCopies">
            <summary>
            Number of months of versioned Job copies (i.e. snapshot of the job definition at a given time) to retain. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.KeepWeeksOfNotificationHistory">
            <summary>
            Number of Weeks of Notifications History to Keep
            </summary>
            <remarks>Max value: 51</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.KeepWeeksOfEmailHistory">
            <summary>
            Number of Weeks of E-mail History to Keep
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.MinimumAllowedJobPriority">
            <summary>
            Minimum Priority Required for a JobInstance to Run Used to prevent job instances of lower priority from running. 
            Only Job instances of identical or higher priority will go from Submitted to Sequenced.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.DatabaseMachine">
            <summary>
            The name of the machine that has the BuildTracker Database.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.InstalledOn">
            <summary>
            The date the latest installation or upgrade took place. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.DomainName">
            <summary>
            The domain name the database machine belong to.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.KeyManagementMachine">
            <summary>
            Location of the machine that runs BuildK - the Key Management service.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.Leaf">
            <summary>
            An optional free-formed HTML document that describes your BuildTracker instance. 
            The file should not exceed 20Kb. Its contents will be shown on the top left of each BuildTracker page. 
            Please ensure that the HTML syntax is correct and that your leaf does not break the layout of the pages.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.LabStatusLeaf">
            <summary>
            An optional free-formed HTML document that describes your BuildTracker instance current status. 
            The file should not exceed 20Kb. Its contents will be shown on the top of each BuildTracker page. 
            Please ensure that the HTML syntax is correct and that your leaf does not break the layout of the pages.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.SmtpServer">
            <summary>
            Use SMTPHost on MS corpnet unless you're in a domain which cannot access it.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.MailStyleSheet">
            <summary>
            Stylesheet used when sending e-mail notifications.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.SchedulerMachine">
            <summary>
            The name of the machine hosting the Scheduler (BuildS) service.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.VstsShares">
            <summary>
            A semi-colon delimited list of shares from which BuildTracker will try to copy the necessary 
            TFS files (tf.exe, etc.) when enlisting from web. 
            The enlistment script will try using the first share in the list, then the second, etc.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.SourceDepotShares">
            <summary>
            A semi-colon delimited list of shares that BuildTracker will try to copy sd.exe from when enlisting from web. 
            The enlistment script will try using the first share in the list, then the second, etc.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.SdxScript">
            <summary>
            Location and filename of script to use when enlisting for Enlistment Managers of type sdx.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.Version">
            <summary>
            The latest version installed on this BuildTracker system.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.WebUrl">
            <summary>
            The base location of the main Web UI server.
            </summary>
            <remarks>This is often set to the load-balancer address.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.LabName">
            <summary>
            The name of the BuildTracker lab (e.g. Acme Products Build Lab). 
            The name will be shown on the top left of each BuildTracker page. 
            However, if a BuildTracker Leaf is also the defined the BuildTracker Leaf will be displayed instead.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.LabContacts">
            <summary>
            The contacts to communicate with about lab issues.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.Id">
            <summary>
            The unique ID of this instance of BuildTracker.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.AllowDataCollection">
            <summary>
            Indicates if information about this instance of BuildTracker can be tracked in the central registration
            database run by the BuildTracker team.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.SdkUrl">
            <summary>
            The main address of the legacy programmatic access to BuildTracker.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.ApiUrl">
            <summary>
            The main base address of the API service.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.EstimatedExecutionTimeThreshold">
            <summary>
            Minimum number of times a Leg instance must run before the execution time is checked against the 
            Estimated Execution Time to see if the Leg instance is overdue. 
            For example, if EET Threshold is set to 60 minutes, BuildTracker will not check to see if the Leg instance 
            is overdue until it has run for at least 60 minutes. 
            </summary>
            <remarks>Currently the granularity is minutes. Any fractions of minutes will be rounded down.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.EstimatedExecutionTimeDelayed">
            <summary>
            How much time over the EET that will trigger a delay warning. Default is 60 minutes. 
            </summary>
            <remarks>Currently the granularity is minutes. Any fractions of minutes will be rounded down.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.EstimatedExecutionTimeOverdue">
            <summary>
            The amount of time over the EET that will trigger an overdue warning. Default is 180 minutes. 
            </summary>
            <remarks>Currently the granularity is minutes. Any fractions of minutes will be rounded down.</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.SourceControlRetryAttempts">
            <summary>
            The total number of times BuildTracker will attempt to connect to source control. 
            The minimum is 1 for the original connection attempt. 
            The default is 3 to allow 2 retry attempts. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.SourceControlRetryInterval">
            <summary>
            How long to wait in between source control connect attempts. The default is 10s.
            </summary>
            <remarks>Currently the value is rounded down to full seconds</remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.BackupEnabled">
            <summary>
            By default, the backup feature in BuildTracker is not enabled. 
            See the How To Configure Backup section of the help for an explanation of the backup feature 
            and steps on customizing it for your lab. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.BackupPromptText">
            <summary>
            Use this field to add custom text about your custom lab backup job and policies. 
            BuildTracker will append this text to the confirmation dialog that is shown when the "Backup" button 
            is clicked on the Build Drops grid and when a product or branch owner creates a drop policy 
            to do automatic backup. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.BuildShareGroupTypes">
            <summary>
            The list of Build Share Group Types (e.g. categories of build shares, such as 'Official' and 'Buddy' build shares).
            System-wide policy instances (including Build Retention and Build Drop policy instances) 
            can be defined for all Build Share Groups of the same type
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.ServiceIntervals">
            <summary>
            This property helps determine whether the services in your lab are functioning normally. 
            Each listed task repeats at a specified interval. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.DefaultRunAsAlias">
            <summary>
            This will be the default user for running jobs.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.LabManagementAlias">
            <summary>
            This will be the user used by services for managing the lab.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LabConfiguration.ApiServerVersion">
            <summary>
            Indicates the version of the Api Server this client is connected to.
            </summary>
            <remarks>
            This version will stay the same while the ServiceVersion might change.
            Example: when a service Hotfix is installed.
            </remarks>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.CredentialedLegDefinition">
            <summary>
            A leg definition that can be impersonated during execution (run-as)
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegDefinition">
            <summary>
            Defines a leg of a job. Based on this definition GetLegInstances get created during each execution of the GetJobDefinition/LegDefinition.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDefinition.GetJobDefinition">
            <summary>
            Parent Job Definition for this leg definition
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDefinition.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.LegDefinitionData)">
            <summary>
            Creates an instance of a LegDefinition connected to an existing server-side Leg
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDefinition.#ctor(Microsoft.BuildTracker.Client.JobDefinition,Microsoft.BuildTracker.Contracts.LegDefinitionData)">
            <summary>
            Creates an instance of a LegDefinition connected to an existing server-side Leg.
            Sets the GetJobDefinition that is the parent for this LegDefinition.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDefinition.ResetEstimatedExecutionTime">
            <summary>
            Resets the EET to 0 (zero). This is useful and should be called when the definition of a leg changes drastically and the previous EET is no longer valid.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDefinition.Save">
            <summary>
            Submits the changes made to the fields to the BT backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDefinition.Refresh">
            <summary>
            Refreshes the fields from the backend BT.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDefinition.Delete">
            <summary>
            Deletes this LegDefinition
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDefinition.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">LegDefinition to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDefinition.GetHashCode">
            <summary>
            Gets a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.EnlistmentSettings">
            <summary>
            configuration Settings for enlistment
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.Name">
            <summary>
            Name of the leg
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.Id">
            <summary>
            ID of the leg
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.Description">
            <summary>
            Description of the leg
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.ParentJobId">
            <summary>
            ID of the job that this leg belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.Priority">
            <summary>
            For GetLegDefinitions that can be executed in parallel, those with the higher priority will be executed first
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.DependencyLogic">
            <summary>
            Require all prerequisite dependencies to evaluate to true, or require at least one to be true
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.SimulateResult">
            <summary>
            The result for this leg when running a simulated build
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.EstimatedExecutionTime">
            <summary>
            Length of time that it takes to run this leg, calculated based on past executions
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.Order">
            <summary>
            Order that this leg will be executed within a job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.WcfLegDefinition">
            <summary>
            Shortcut to WCF's ILegDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDefinition.Dependencies">
            <summary>
            Collection of LegDependency
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.CredentialedLegDefinition.SetRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Applies the credentials for the given RunAs account to this LegDefinition
            </summary>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.CredentialedLegDefinition.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">CommandLegDefinition to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.CredentialedLegDefinition.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.CredentialedLegDefinition.RunAsAlias">
            <summary>
            Account to use when running this leg
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.CredentialedLegDefinition.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this leg definition.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobLegDefinition">
            <summary>
            Definition of a leg, which is a job (a child job).
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobLegDefinition.Save">
            <summary>
            Submits the changes made to the fields to the BT backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobLegDefinition.Refresh">
            <summary>
            Refreshes the fields from the backend BT.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobLegDefinition.GetChildJobDefinition">
            <summary>
            JobDefinition that is run by this leg
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobLegDefinition.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">JobLegDefinition to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobLegDefinition.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobLegDefinition.Parameters">
            <summary>
            Collection of Parameter mappings associated with this JobLegDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobLegDefinition.ChildJobDefinitionId">
            <summary>
            Id of job this leg will run 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobLegDefinition.ReportFailureToJob">
            <summary>
            Report failure to the job.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.CompleteLegDefinition">
            <summary>
            Definition for the Complete Leg
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.CompleteLegDefinition.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">CompleteLegDefinition to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.CompleteLegDefinition.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.DeleteDropLegDefinition">
            <summary>
            Definition for the DeleteDrop Leg
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DeleteDropLegDefinition.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">DeleteDropLegDefinition to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DeleteDropLegDefinition.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.CommandLegDefinition">
            <summary>
            A command leg definition
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.CommandLegDefinition.Save">
            <summary>
            Submits the changes made to the fields to the BT backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.CommandLegDefinition.Refresh">
            <summary>
            Refreshes the fields from the backend BT.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.CommandLegDefinition.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">CommandLegDefinition to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.CommandLegDefinition.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.CommandLegDefinition.Command">
            <summary>
            Leg command.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.CommandLegDefinition.CommandParameters">
            <summary>
            Command parameters.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.CommandLegDefinition.Parameters">
            <summary>
            Collection of Parameter mappings associated with this JobLegDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.CommandLegDefinition.FailJobOnFailure">
            <summary>
            Report failure to the job.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildJobDefinition">
            <summary>
            Build Job Definitions live under a Branch
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobDefinition">
            <summary>
            GetJobDefinition defines all the metadata needed for all execution of this job
            </summary>
            <remarks>In pre 3.5 world this was called Job</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.GetLegDefinitions">
            <summary>
            Leg definitions for this job.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.Save">
            <summary>
            Saves the changes in the fields back to the BT backend
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.Refresh">
            <summary>
            Get data for this JobDefinition from BuildTracker and repopulate the properties
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.Delete">
            <summary>
            Deletes this job definittion
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.CreateCommandLegDefinition(System.String,System.String,System.String)">
            <summary>
            Creates a new command leg definition
            </summary>
            <param name="legDefinitionName">The name of the new leg definition</param>
            <param name="command">Command line to be executed by the job</param>
            <param name="parameters">Parameters to be passed to the command</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.CreateRemoteLegDefinition(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new remote leg definition
            </summary>
            <param name="legDefinitionName">The name of the new leg definition</param>
            <param name="command">Command line to be executed by the job</param>
            <param name="parameters">Parameters to be passed to the command</param>
            <param name="folderParameter">Name of a paramter whose value is the folder name in which to execute the command</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.CreateJobLegDefinition(System.String,Microsoft.BuildTracker.Client.JobDefinition)">
            <summary>
            Creates a new job leg definition
            </summary>
            <param name="legDefinitionName">The name of the new leg definition</param>
            <param name="jobDefinition">GetJobDefinition object that defines the job to be run by this leg</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.CreateSyncLegDefinition(System.String)">
            <summary>
            Creates a new sync leg definition
            </summary>
            <param name="legDefinitionName">The name of the new leg definition</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.CreateDeleteDropLegDefinition(System.String)">
            <summary>
            Creates a new DeleteDrop leg definition
            </summary>
            <param name="legDefinitionName">The name of the new leg definition</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.CreateCompleteLegDefinition(System.String)">
            <summary>
            Creates a new complete leg definition
            </summary>
            <param name="legDefinitionName">The name of the new leg definition</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.GetLegDefinition(System.String)">
            <summary>
            Gets a leg definition by name
            </summary>
            <param name="legDefinitionName">The name of the Leg Definition to get</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.SetRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Applies the credentials for the given RunAs account to this JobDefinition
            </summary>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.Equals(System.Object)">
            <summary>
            Compares two JobDefinitions
            </summary>
            <param name="obj">GetJobDefinition to compare to.</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields of the objects match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobDefinition.GetHashCode">
            <summary>
            Gets a hashcode 
            </summary>
            <returns>Hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.Id">
            <summary>
            Gets the Id of the GetJobDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.Name">
            <summary>
            Gets/sets the name of the GetJobDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.AllowConcurrent">
            <summary>
            Allow several instances of this job to execute simultaneously
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.Description">
            <summary>
            Description of the GetJobDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.Priority">
            <summary>
            Id of a job priority value
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.SyncByDefault">
            <summary>
            Enable or disable synchronization by default for job requests
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.AllowSyncOption">
            <summary>
            Allow sync option for job requests.  Users may choose whether or not to synchronize before job execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.Wcf">
            <summary>
            Shortcut to wcf
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.Parameters">
            <summary>
            Collection of ParameterDefinitions associated with this GetJobDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.BuildShareGroupId">
            <summary>
            ID of the BuildShareGroup for this job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.EnlistmentSettings">
            <summary>
            configuration Settings for enlistment
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.RunLegsOnSameMachine">
            <summary>
            If true -> causes all legs of this job definition to be executed on the same machine. 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.RunAsAlias">
            <summary>
            Name (domain\username) for the RunAs user
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this job definition.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.JobDefinition.Owners">
            <summary>
            Collection of aliases that are owners of this GetJobDefinition
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.Queue(System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            To Queue this Build Job
            </summary>
            <param name="desiredDateTime">DateTime job should be queued.  If null, uses current DateTime.</param>
            <param name="sync">Sync is required or not.  If null, defaults to job's sync value.</param>
            <param name="syncDateTime">Sync DateTime if sync is true.  If sync is false, should be null.</param>
            <param name="remark">Remarks for queuing job.  May be null.</param>
            <param name="notifyMe">To notify the user.  If null, defaults to false.</param>
            <param name="parameters">Dictionary of Parameter names with Values.  If null, no parameters are passed.</param>
            <returns>A BuildJobInstance object for the queued BuildJob</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.Queue">
            <summary>
            Queue this BuildJob
            </summary>
            <returns>A JobInstance object for the queued BuildJob</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.Save">
            <summary>
            To save BuildJobDefinition
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.Refresh">
            <summary>
            Refreshes the fields by forcing a read from the BT backend
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.QueryJobInstances(System.String,Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses)">
            <summary>
            Simplified Job Instance querying using requestedBy and status only.
            Gets all job instances under this JobDefinition, for the given requester id and with the given statuses.
            </summary>
            <param name="requestedBy">name of the users who created the jobs</param>
            <param name="jobInstanceQueryStatuses">status of the included job instances</param>
            <returns>Collection of BuildJobInstanceCollection with the matching status</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.GetBranch">
            <summary>
            Retrieves the parent branch for this buildjob definition. 
            </summary>
            <returns>A Branch object</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.GetJobSchedules">
            <summary>
            Gets all of the JobSchedules for this BuildJobDefintion
            </summary>
            <returns>A collection of JobSchedule objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.GetJobSchedule(System.String)">
            <summary>
            Gets a JobSchedule by name
            </summary>
            <param name="jobScheduleName">The name of the JobSchedule to get</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.CreateJobSchedule(System.String,Microsoft.BuildTracker.Contracts.DaysOfWeek,System.DateTime,System.Nullable{System.DateTime},System.TimeSpan,System.Nullable{System.TimeSpan})">
            <summary>
            Create a new JobSchedule with this BuildJobDefintion
            </summary>
            <param name="jobScheduleName">Name for this JobSchedule</param>
            <param name="daysOfWeek">The Day(s) of the week for scheduling the job.</param>
            <param name="startDate">Jobs won't be scheduled before this date.</param>
            <param name="endDate">If not null, no new JobInstances will be created for this Job Schedule after the specified date.</param>
            <param name="dailyStartTime">The time of day when you want the job to first get scheduled each day. </param>
            <param name="dailyEndTime">If not null, don't re-schedule past this time of the day.</param>
            <returns>A new JobSchedule object</returns>
            <remarks>
            startDate and endDate will be assumed to be DateTime values relative to the timezone of the BuildTracker server.
            If a date of 7/4/2012 is given for the startDate, the job will be scheduled to start running when it is 7/4/2012 in the timezone
            where the BuildTracker server is located.  This may be different than the date of the local machine if it is in a timezone different
            from the BuildTracker server's timezone.  The DateTime values should not be UTC, as the dates are intended to be specific to a certain 
            timezone.  startDate and endDate should contain date values only, with the time portion of the DateTime set to 12:00:00AM.
            </remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.CreateJobSchedule(System.String,Microsoft.BuildTracker.Contracts.DaysOfWeek,System.DateTime,System.Nullable{System.DateTime},System.TimeSpan,System.Nullable{System.TimeSpan},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Create a new JobSchedule with this BuildJobDefintion
            </summary>
            <param name="jobScheduleName">Name for this JobSchedule</param>
            <param name="daysOfWeek">The Day(s) of the week for scheduling the job.</param>
            <param name="startDate">Jobs won't be scheduled before this date.</param>
            <param name="endDate">If not null, no new JobInstances will be created for this Job Schedule after the specified date.</param>
            <param name="dailyStartTime">The time of day when you want the job to first get scheduled each day. </param>
            <param name="dailyEndTime">If not null, don't re-schedule past this time of the day.</param>
            <param name="parameters">Name-value pairs of the Job Parameters and values to be passed to Job Instances created for this job schedule</param>
            <returns>A new JobSchedule object</returns>
            <remarks>
            startDate and endDate will be assumed to be DateTime values relative to the timezone of the BuildTracker server.
            If a date of 7/4/2012 is given for the startDate, the job will be scheduled to start running when it is 7/4/2012 in the timezone
            where the BuildTracker server is located.  This may be different than the date of the local machine if it is in a timezone different
            from the BuildTracker server's timezone.  The DateTime values should not be UTC, as the dates are intended to be specific to a certain 
            timezone.  startDate and endDate should contain date values only, with the time portion of the DateTime set to 12:00:00AM.
            </remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.CreateJobSchedule(Microsoft.BuildTracker.Client.JobSchedule)">
            <summary>
            Create a new JobSchedule with this BuildJobDefintion
            </summary>
            <returns>A new JobSchedule object</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.SetRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Applies the credentials for the given RunAs account to this BuildJobDefinition
            </summary>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.Equals(System.Object)">
            <summary>
            Compares two BuildJobDefinitions
            </summary>
            <param name="obj">BuildJobDefinition to compare to.</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields of the objects match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildJobDefinition.GetHashCode">
            <summary>
            Gets a hashcode 
            </summary>
            <returns>Hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildJobDefinition.BranchId">
            <summary>
            The parent branch id 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildJobDefinition.JobRunners">
            <summary>
            List of aliases that can run this job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildJobDefinition.AutoDetectBuilds">
            <summary>
            Specifies whether BuildTracker should attempt to auto-detect the build produced by this build job.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildJobDefinition.SaveLogs">
            <summary>
            Specifies whether BuildTracker should save the logs for this Build Job in the build's drop folder. 
            A build must be auto-detected for the logs to be saved.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildJobDefinitionCollection">
            <summary>
            A collection of build jobs
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BranchCollection">
            <summary>
            Branches
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildTrackerService">
            <summary>
            The main entry point to interact with a BuildTracker service
            </summary>
            <remarks>In order to use any object in the BuildTracker Client library, one needs to first connect to a BuildTracker instance.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetProducts">
            <summary>
            Gets all products in this BT instance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetRegisteredProducts">
            <summary>
            Gets products registered to the caller
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.#ctor">
            <summary>
            This constructor used solely for testing
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.Connect(System.String,System.String,System.String,System.String)">
            <summary>
            Connects to a BuildTracker service using specified credentials
            </summary>
            <param name="baseAddress">WCF endpoint address that's exposed on the BuildTracker service</param>
            <param name="domain">credentials domain to connect as</param>
            <param name="userName">credentials username to connect as</param>
            <param name="password">credentials password to connect as</param>
            <returns>BuildTrackerService object connected to the given address</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.Connect(System.String)">
            <summary>
            Connects to a BuildTracker service using current user's credentials
            </summary>
            <param name="baseAddress">WCF endpoint address that's exposed on the BuildTracker service</param>
            <returns>BuildTrackerService object connected to the given address</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CloseConnections">
            <summary>
            Closes any open connections.
            </summary>
            <remarks>After calling this method, the BuildTrackerService is no longer connected to the backend.
            In order to reconnect - use the BuildTracker.Connect(...) method to create a new BuildTrackerService object.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.SetServiceTimeout(System.TimeSpan)">
            <summary>
            Sets the length of time to allow for calls to the WCF service to complete.  Default value is one minute.
            </summary>
            <param name="timeout">TimeSpan value to set</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetLabConfiguration">
            <summary>
            Gets the lab configuration object
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CreateMachine(System.String)">
            <summary>
            Creates a new machine
            </summary>
            <param name="machineName">The name of the machine to create. If a machine with such a name exists, an exception will be thrown.</param>
            <returns>A newly created machine.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetMachines">
            <summary>
            Gets all active machines in this BT instance
            </summary>
            <returns>A collection of machines</returns>
            <remarks>Deleted machines are not included here.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetAllMachines">
            <summary>
            Gets all machines in this BT instance
            </summary>
            <returns>A collection of machines</returns>
            <remarks>Deleted machines are included here.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetMachine(System.String)">
            <summary>
            Gets a machine by its name
            </summary>
            <param name="name">Name of the machine</param>
            <returns>a machine corresponding to the requested name</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetMachine(System.Int32)">
            <summary>
            Gets a machine by its Id
            </summary>
            <param name="id">Id of the machine</param>
            <returns>a machine corresponding with the requested Id</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CreateMachineGroup(System.String)">
            <summary>
            Creates a new machineGroup
            </summary>
            <param name="machineGroupName">The name of the machineGroup to create. If a machineGroup with such a name exists, an exception will be thrown.</param>
            <returns>A newly created machineGroup.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetMachineGroups">
            <summary>
            Gets all machineGroups in this BT instance
            </summary>
            <returns>A collection of machineGroups</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetMachineGroup(System.String)">
            <summary>
            Gets a machineGroup by its name
            </summary>
            <param name="name">Name of the machineGroup</param>
            <returns>a machineGroup corresponding to the requested name</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetMachineGroup(System.Int32)">
            <summary>
            Gets a machineGroup by its Id
            </summary>
            <param name="id">Id of the machineGroup</param>
            <returns>a machineGroup corresponding with the requested Id</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CreateAffinity(Microsoft.BuildTracker.Contracts.JobType,System.Int32,Microsoft.BuildTracker.Contracts.AffinityResourceType,System.Nullable{System.Int32},System.Int32,Microsoft.BuildTracker.Contracts.AffinityType)">
            <summary>
            Creates a new affinity
            </summary>
            <param name="jobType">Type of job afffinity applies to</param>
            <param name="resourceId">Id of the resource to be affinitied</param>
            <param name="resourceType">Type of resource to affinity to</param>
            <param name="alternateParentId">Id of the parent to use for the affinity when the affinity is set to a system-level resource</param>
            <param name="machineGroupId">Id of the MachineGroup to affinity with</param>
            <param name="affinityType">The type of affinity relationship</param>
            <returns>A newly created affinity.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetAffinities(Microsoft.BuildTracker.Contracts.JobType,System.Int32,Microsoft.BuildTracker.Contracts.AffinityResourceType,System.Nullable{System.Int32})">
            <summary>
            Gets all affinities in this BT instance for a resource
            </summary>
            <param name="jobType">Type of job the affinity applies to</param>
            <param name="resourceId">Id of the resource to be affinitied</param>
            <param name="resourceType">Type of resource to affinity to</param>
            <param name="alternateParentId">Id of the parent to use for the affinity when the affinity is set to a system-level resource</param>
            <returns>A collection of affinities</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetAffinity(System.Int32)">
            <summary>
            Gets an affinity by its Id
            </summary>
            <param name="id">Id of the affinity</param>
            <returns>An affinity corresponding with the requested Id</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CreateProduct(System.String)">
            <summary>
            Creates a new product
            </summary>
            <param name="productName">The name of the product to create. If a product with such a name exists, an exception witll be thrown.</param>
            <returns>A newly created product.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetProduct(System.String)">
            <summary>
            Finds a product by its name
            </summary>
            <param name="productName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetProduct(System.Int32)">
            <summary>
            Gets a product by its Id
            </summary>
            <param name="id">Id of the product</param>
            <returns>a Product corresponding with the requested Id</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetBranch(System.Int32)">
            <summary>
            Gets a branch by Id
            </summary>
            <param name="id">Id of the branch to get</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetBuildShareGroup(System.Int32)">
            <summary>
            Gets a BuildShareGroup by Id
            </summary>
            <param name="id">Id of the BuildShareGroup to get</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetJobDefinition(System.Int32)">
            <summary>
            Gets a job definition by Id. This may be a BuildJobDefinition, RetentionJobDefinition or DropJobDefinition.
            </summary>
            <param name="id">Id of the job definition to get</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetLegDefinition(System.Int32)">
            <summary>
            Gets a leg definition by Id. This may be any of the types of leg defintions.
            </summary>
            <param name="id">Id of the leg definition to get</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetJobInstance(System.Int32)">
            <summary>
            Gets a job instance by Id.
            </summary>
            <param name="id">id of the job instance</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetLegInstance(System.Int32)">
            <summary>
            Get a leg instance by Id.
            </summary>
            <param name="id">Id of the leg instance to get</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.QueueBuildJobInstance(System.Int32)">
            <summary>
            Queue a build job with default options
            </summary>
            <param name="jobDefinitionId">Id of BuildJobDefinition to be queued</param>
            <returns>JobInstance object for the queued BuildJobDefinition</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.QueueBuildJobInstance(System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            To Queue BuildJobDefinition for passed jobDefinitionId and other arguments
            </summary>
            <param name="jobDefinitionId">Id of BuildJobDefinition to be queued</param>
            <param name="desiredDateTime">DateTime job should be queued.  If null, uses current DateTime.</param>
            <param name="sync">Sync is required or not.  If null, defaults to job's sync value.</param>
            <param name="syncDateTime">Sync DateTime if sync is true.  If sync is false, should be null.</param>
            <param name="remark">Remarks for queuing job.  May be null.</param>
            <param name="notifyMe">To notify the user.  If null, defaults to false.</param>
            <param name="parameters">Dictionary of Parameter names with Values.  If null, no parameters are passed.  
            For multi-value type parameters (i.e. CheckboxList), values should be contained in a comma delimited string.</param>
            <returns>A BuildJobInstance object for the queued BuildJobDefinition</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.QueryJobInstances(Microsoft.BuildTracker.Client.JobInstanceQuery)">
            <summary>
            Queries job instances using the given filter/query
            </summary>
            <param name="query">A query to limit the returned collection.</param>
            <remarks>Queries on instances are typically quite expensive.
            Consider adding as many conditions in the query as possible.
            Especially set .DateFrom, .DateTo and .Status in JobInstanceQuery for best (fastest) results.
            .DateFromQueryType is required when .DateFrom is used.
            .DateToQueryType is required when .DateTo is used.
            </remarks>
            <returns>A collection of job instances</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.QueryJobInstances(System.String,Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses)">
            <summary>
            Simplified Job Instance querying using requestedBy and status only.
            Gets all job instances in the whole BuildTracker, for the given requester id and with the given statuses.
            </summary>
            <param name="requestedBy">Name of the user who created the jobs</param>
            <param name="jobInstanceQueryStatuses">status of the included job instances</param>
            <returns>Collection of JobInstances with the matching status</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CreateSystemRetentionJobDefinition(System.String)">
            <summary>
            Creates a new system wide retention job definition
            </summary>
            <param name="retentionJobDefinitionName">name of the new systemwide retention job definition</param>
            <returns>object of RetentionJobDefinition created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CreateSystemDropJobDefinition(System.String)">
            <summary>
            Creates a new system wide drop job definition
            </summary>
            <param name="dropJobDefinitionName">name of the new systemwide drop job definition</param>
            <returns>object of DropJobDefinition created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetSystemRetentionJobDefinitions">
            <summary>
            Returns collection of System level retention job definitions
            </summary>
            <returns>Collection of Systemwide retentionJobDefinition</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetSystemDropJobDefinitions">
            <summary>
            Returns the collection of system wide DropJobDefinitions 
            </summary>
            <returns>readonly collection of DropJobDefinitions</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetSystemRetentionPolicies">
            <summary>
            Gets a collection of all system-wide retention policies.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CreateSystemRetentionPolicy(System.Int32,System.Boolean,System.Int32,Microsoft.BuildTracker.Contracts.RetentionCondition,System.String)">
            <summary>
            Creates a new system-wide retention policy
            </summary>
            <param name="minutesDelayAfterBuildJobCompletes">starting time of this policy after build completed</param>
            <param name="createEnabled">This instance of the Policy is enabled</param>
            <param name="quantity">Worked with Condition property, mandatory field, Value in this property will be replaced with Number in Condition property</param>
            <param name="retentionCondition">Condition for the execution of this policy</param>
            <param name="buildShareGroupType">The type of BSGs this policy applies to</param>
            <returns>object of RetentionPolicy, which is created</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetSystemDropPolicies">
            <summary>
            Gets a collection of all system drop policies.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CreateSystemDropPolicy(System.Int32,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a system drop policy.
            </summary>
            <param name="dropJobId">Id of the DropJobDefinition</param>
            <param name="minutesDelayAfterBuildJobCompletes">starting time of this policy after build completed</param>
            <param name="createEnabled">This instance of the Policy is enabled</param>
            <param name="runOnAutoDiscoveredBuild">Policy will execute auto discovered build</param>
            <param name="buildShareGroupType">The type of BSGs this policy applies to</param>
            <returns>object of DropPolicy created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetBuildDrop(System.Int32)">
            <summary>
            Retrieves a BuildDrop with a given ID from the backend.
            </summary>
            <param name="buildDropId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetJobServices">
            <summary>
            Gets a collection of all the Job Services
            </summary>
            <returns>A JobServiceCollection </returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetJobServices(System.Int32)">
            <summary>
            Gets a collection of all the Job Services for a specific machine
            </summary>
            <returns>A JobServiceCollection </returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetJobService(System.Int32)">
            <summary>
            Gets a Job Service with a given ID
            </summary>
            <returns>A JobService</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetJobSchedules">
            <summary>
            Gets all of the JobSchedules
            </summary>
            <returns>A collection of JobSchedule objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetJobSchedule(System.Int32)">
            <summary>
            Gets a JobSchedule by Id. 
            </summary>
            <param name="id">Id of the JobSchedule to get</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CreateJobScheduleTemplate(System.String,Microsoft.BuildTracker.Contracts.DaysOfWeek,System.DateTime,System.Nullable{System.DateTime},System.TimeSpan,System.Nullable{System.TimeSpan})">
            <summary>
            Create a new JobSchedule template that can be used to create other JobSchedules
            </summary>
            <param name="jobScheduleName">Name for this JobSchedule</param>
            <param name="daysOfWeek">The Day(s) of the week for scheduling the job.</param>
            <param name="startDate">Jobs won't be scheduled before this date.</param>
            <param name="endDate">If not null, no new JobInstances will be created for this Job Schedule after the specified date.</param>
            <param name="dailyStartTime">The time of day when you want the job to first get scheduled each day. </param>
            <param name="dailyEndTime">If not null, don't re-schedule past this time of the day.</param>
            <returns>A new JobSchedule object</returns>
            <remarks>
            startDate and endDate will be assumed to be DateTime values relative to the timezone of the BuildTracker server.
            If a date of 7/4/2012 is given for the startDate, the job will be scheduled to start running when it is 7/4/2012 in the timezone
            where the BuildTracker server is located.  This may be different than the date of the local machine if it is in a timezone different
            from the BuildTracker server's timezone.  The DateTime values should not be UTC, as the dates are intended to be specific to a certain 
            timezone.  startDate and endDate should contain date values only, with the time portion of the DateTime set to 12:00:00AM.
            </remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.QueryBuildDrops(Microsoft.BuildTracker.Client.BuildDropQuery)">
            <summary>
            Queries for BuildDrops using the given filter criteria
            </summary>
            <param name="query">A query to limit the returned collection</param>
            <returns>A collection of BuildDrops</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.QueryLegInstances(Microsoft.BuildTracker.Client.LegInstanceQuery)">
            <summary>
            Queries for LegInstances using the given filter criteria
            </summary>
            <param name="query">A query to limit the returned collection</param>
            <returns>A collection of LegInstances</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CountLegInstances(Microsoft.BuildTracker.Client.LegInstanceQuery)">
            <summary>
            Gets the count of LegInstances that match the given filter criteria
            </summary>
            <param name="query">A query to limit the returned collection</param>
            <returns>A count of LegInstances</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CountLegInstanceExecutions(Microsoft.BuildTracker.Client.LegInstanceQuery)">
            <summary>
            Gets the count of LegInstanceExecutions that match the given filter criteria
            </summary>
            <param name="query">A query to limit the returned collection</param>
            <returns>A count of LegInstanceExecutions</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.CountJobInstances(Microsoft.BuildTracker.Client.JobInstanceQuery)">
            <summary>
            Gets the count of JobInstances that match the given filter criteria
            </summary>
            <param name="query">A query to limit the returned collection</param>
            <returns>A count of JobInstances</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.QueryLegInstanceExecutions(Microsoft.BuildTracker.Client.LegInstanceQuery)">
            <summary>
            Queries for LegInstanceExecutionss using the given filter criteria
            </summary>
            <param name="query">A query to limit the returned collection</param>
            <returns>A collection of LegInstanceExecutions</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetDropPolicy(System.Int32)">
            <summary>
            Get a DropPolicy by Id
            </summary>
            <param name="policyId">Id of the DropPolicy to retrieve.</param>
            <returns>A DropPolicy object</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.GetRetentionPolicy(System.Int32)">
            <summary>
            Get a RetentionPolicy by Id
            </summary>
            <param name="policyId">Id of the RetentionPolicy to retrieve.</param>
            <returns>A RetentionPolicy object</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildTrackerService.Dispose">
            <summary>
            Implement IDisposable
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildTrackerService.BaseAddress">
            <summary>
            The base address of the BT wcf interface
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildTrackerService.Wcf">
            <summary>
            groups BuildTracker wcf interfaces
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.DropJobDefinition">
            <summary>
            DropJobDefintion defines a job that runs for each discovered build drop in a build share group
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropJobDefinition.QueryJobInstances(System.String,Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses)">
            <summary>
            Simplified Job Instance querying using requestedBy and status only.
            Gets all job instances under this JobDefinition, for the given requester id and with the given statuses.
            </summary>
            <param name="requestedBy">name of the users who created the jobs</param>
            <param name="jobInstanceQueryStatuses">status of the included job instances</param>
            <returns>Collection of DropJobInstanceCollection with the matching status</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.DropJobDefinition.SetRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Applies the credentials for the given RunAs account to this DropJobDefinition
            </summary>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobDefinitionCollection">
            <summary>
            BuildJobDefinitions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.JobInstanceCollection">
            <summary>
            JobInstances
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.JobInstanceCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.JobInstanceData})">
            <summary>
            Creates a JobInstanceCollection from a list of JobInstanceData (from WCF)
            </summary>
            <param name="jobInstanceDataCollection">Collection of Contracts.JobInstanceData objects</param>
            <param name="parent">A reference to the BuildTracker service that is being used</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegDefinitionCollection">
            <summary>
            LegDefinitions
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegDependency">
            <summary>
            Represents a conditional dependency on another leg
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDependency.#ctor(System.String,Microsoft.BuildTracker.Contracts.DependencyType)">
            <summary>
            Constructor 
            </summary>
            <param name="legDefinitionName">Prerequisite leg name ,name of the leg which will execute before current leg</param>
            <param name="dependencyType">result condition of Prerequisite leg on which dependent leg will execute</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDependency.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">LegDependency to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegDependency.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDependency.PrerequisiteLegName">
            <summary>
            LegDefinition name which will exectue before this legDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegDependency.DependencyType">
            <summary>
            Condition for execution of this leg according to PrerequisiteLeg result 
            Execution of this leg can be set according to result of PrerequisiteLeg, like OnSuccess, OnFail, Always
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegJobParameterMapping">
            <summary>
            Represents a mapping of a single parameter for LegJobDefinition
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegParameterMapping">
            <summary>
            Used to define parameter passing between parent jobInstance, LegDefinition and child jobInstance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegParameterMapping.#ctor(System.String,System.String,System.String)">
            <summary>
            constructor to create object with all required Parameter mapping data
            </summary>
            <param name="source">it could be parent jobInstance's parameter name or environment variable name from build script of LegDefinition</param>
            <param name="target">for most types of LegDefinition it will be Parent jobInstance's parameter name,for LegJobDefinition it could be parent/child jobInstance's parameter name(according to IN/OUT)</param>
            <param name="description">details of parameter</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegParameterMapping.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">LegParameterMapping to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegParameterMapping.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegParameterMapping.Description">
            <summary>
            Details about parameter mapping
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegParameterMapping.Source">
            <summary>
            For most types of LegDefinition, it would be environment variable name from build script, which will be set by the environment
            For LegJobDefinition : Can be parent jobInstance parameter name or child jobInstance parameter name (depending on the IN/OUT)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegParameterMapping.Target">
            <summary>
            For most types of LegDefinition, it would be parent jobInstance's parameter name
            For LegJobDefinition : Can be parent jobInstance parameter name or child jobInstance parameter name (depending on the IN/OUT)
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegJobParameterMapping.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            constructor to create object with all required parameter mapping data between parent and child jobInstance's parameter
            </summary>
            <param name="source">name of the parameter, could be parent jobInstance's parameter name or environment variable name from build script of LegDefinition</param>
            <param name="target">Parent jobInstance's parameter name, in case of LegJob type LegDefinition it would be child jobInstance's parameter name</param>
            <param name="description">details of parameter</param>
            <param name="in">Direction of ParameterMapping - Parent jobInstance's parameter value will be set to child jobInstance's parameter</param>
            <param name="out">Direction of ParameterMapping - Child jobInstance's parameter value will be set to Parent jobInstance's parameter</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegJobParameterMapping.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">LegJobParameterMapping to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegJobParameterMapping.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegJobParameterMapping.In">
            <summary>
            Direction of ParameterMapping - Parent jobInstance's parameter value will be set to child jobInstance's parameter
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegJobParameterMapping.Out">
            <summary>
            Direction of ParameterMapping - Child jobInstance's parameter value will be set to Parent jobInstance's parameter
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegInstance">
            <summary>
            An instance of a LegDefinition.
            </summary>
            <remarks>
            An leg instance is created by buildtracker when a job is submited.
            A LegInstance cannot be deleted or updated. But it can be aborted or resumed.
            </remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.GetLegDefinition">
            <summary>
            The parent leg definition this leg instance is based on
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.GetJobInstance">
            <summary>
            The parent job instance of this leg instance
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.GetExecutions">
            <summary>
            Gets the LegInstanceExecutions for a LegInstance
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.Abort">
            <summary>
            Aborts this leg instance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.Skip">
            <summary>
            Skips this leg instance
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.Refresh">
            <summary>
            Refreshes the fields.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.Restart">
            <summary>
            Restart a completed leg
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.GetRemarks">
            <summary>
            Gets all associated remarks
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.AddRemark(Microsoft.BuildTracker.Contracts.RemarkType,System.String)">
            <summary>
            Adds a new leg instance remark
            </summary>
            <param name="text">the text of the remark to add</param>
            <param name="type">the type of the remark to add</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A LegInstance object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstance.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.BuildTrackerService">
            <summary>
            A reference to the BuildTracker service that is being used
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.Id">
            <summary>
            Id for this LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.Name">
            <summary>
            Name of this LegInstance, taken from the name of the LegDefinition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.JobInstanceId">
            <summary>
            Id of the parent JobInstance for this LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.LegDefinitionId">
            <summary>
            Id of the LegDefinition for this LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.Status">
            <summary>
            Current state of the LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.WaitingStartedTime">
            <summary>
            Date and time that this leg instance started waiting for dependencies
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.ReadyStartedTime">
            <summary>
            Date and time that this leg instance was ready to run (started waiting for a machine)
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.PreparingStartedTime">
            <summary>
            Date and time that this leg instance started preparing
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.ExecutingStartedTime">
            <summary>
            Date and time that this leg instance started executing
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.FinishedTime">
            <summary>
            Date and time that this leg instance finished
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.Wcf">
            <summary>
            Shortcut to get to the Wcf object of ILegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.ExitCode">
            <summary>
            Exit code for executing LegInstance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.EstimatedExecutionTime">
            <summary>
            Estimated execution time for LegInstace 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.OverdueState">
            <summary>
            Overdue state for this LegInstance
            </summary>
            <remarks>
            This value can be OnTime, Delayed, or OverDue, depending on the duration of the execution time.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.ExecutionDuration">
            <summary>
            Actual time taken by LegInstance in execution 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.ChildJobInstanceId">
            <summary>
            ID of a child jobInstance. Applies to joblegs only.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.NewEnlistmentCreated">
            <summary>
            Was a new enlistment created for this leg instance?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.MachineId">
            <summary>
            Id of the machine that ran this leg instance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.MachineName">
            <summary>
            Name of the machine that ran this leg instance
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.Order">
            <summary>
            The order that this leg is run within a job
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.Priority">
            <summary>
            Relative to other legs that can run within the same dependency range, legs with a lower priority value will run first
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstance.LogUrl">
            <summary>
            The URL of the log for this leg instance
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegInstanceCollection">
            <summary>
            LegInstances
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.LegInstanceQuery">
            <summary>
            Data contract containing all of the fields that will be used to form a query to select LegInstances.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.LegInstanceQuery.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.DateFrom">
            <summary>
            Start of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.DateFromQueryType">
            <summary>
            Column where DateFrom condition should be applied or compaired
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.DateTo">
            <summary>
            End of date range
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.DateToQueryType">
            <summary>
            Column where DateTo condition should be applied or compaired
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.Status">
            <summary>
            Combination of LegInstance state values that are queried for
            </summary>
            <remarks>
            This field may not be null.
            </remarks>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.OrderBy">
            <summary>
            Sets the sort order. Used in the "top N" scenario -> in conjuntion with the .TopN field
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.SortDirection">
            <summary>
            data sorting direction
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.TopN">
            <summary>
            Return the top N instances only.
            Sort using the .OrderBy + .SortDirection fields.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.OverdueState">
            <summary>
            Filter for OnTime, Delayed, or Overdue leg instances.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.LegDefinitionId">
            <summary>
            Filter to leg instances of the given leg definition only
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.MachineId">
            <summary>
            Filter to leg instances that execute on the given machine
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.ProductId">
            <summary>
            Filter to instances under the given product only
            ProductId has the lowest priority
            ProductId would be included in query filter condition if LegDefinitionId, JobInstanceIds, and BranchId do not have values
            ProductId value won't be included in query if any other Id field has a value.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.BranchId">
            <summary>
            Filter to instances under the given branch only
            BranchId has the second least priority
            BranchId will be included in query if LegDefinitionId and JobInstanceIds do not have values
            ProductId value won't be included in the query if BranchId has a value
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.JobScheduleId">
            <summary>
            Filter to instances of the given job schedule
            JobScheduleId has the second highest priority.
            BranchId and ProductId won't be included in query filter condition if JobScheduleId has a value
            if JobDefinitionIds also has values, JobScheduleId won't be included in the query filter condition
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.JobInstanceIds">
            <summary>
            Filter the results to LegInstances that belong to JobInstances with the given IDs
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.LegInstanceQuery.WaitingState">
            <summary>
            Condition that a leg instance may be waiting for
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.Machine">
            <summary>
            A machine/computer BuildTracker manages or knows of
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService)">
            <summary>
            Private Constructor
            </summary>
            <param name="buildTracker">Object of BuildTrackerService</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.String)">
            <summary>
            Instantiates a Machine object by looking it up by name
            </summary>
            <param name="name"></param>
            <param name="buildTracker"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Int32)">
            <summary>
            Instantiates a Machine object by looking it up by ID
            </summary>
            <param name="id"></param>
            <param name="buildTracker"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.MachineData)">
            <summary>
            Creates an instance initializing its data to the one passed in
            </summary>
            <param name="buildTracker"></param>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.GetDisks">
            <summary>
            Information and settings for disks available on this machine.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.Save">
            <summary>
            Persists the changes in this class to the backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.Refresh">
            <summary>
            Gets the latest data for this class from the backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.Delete">
            <summary>
            Deletes this machine
            </summary>
            <remarks>
            The machine is actually not removed from the BuildTracker database, but the machine's record is flagged as deleted.
            </remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.CollectInformation">
            <summary>
            Immediately collects information about this machine.
            </summary>
            <remarks>This call may take a while as BT will use WMI to query information about the specific machine.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.GetJobServices">
            <summary>
            Gets a collection of all the JobServices for this machine
            </summary>
            <returns>Collection of JobService objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.Equals(System.Object)">
            <summary>
            Override of Object.Equals method
            </summary>
            <param name="obj">A Machine object to compare to.</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>True if the Machine objects are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Machine.GetHashCode">
            <summary>
            Override of Object.GetHashCode
            </summary>
            <returns>A hashcode value for this Machine object.</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.BuildTrackerService">
            <summary>
            The parent BuildTrackerService this Machine belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.Data">
            <summary>
            Data of machine
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.Id">
            <summary>
            Machine's Id
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.Name">
            <summary>
            Machine's name as defined in BuildTracker database. Typically just a WINS name.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.OperatingSystem">
            <summary>
            The OS installed on the machine
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.ServicePack">
            <summary>
            SP on top of the OS
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.Domain">
            <summary>
            The domain this machine belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.Manufacturer">
            <summary>
            Machine's manufacturer
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.Model">
            <summary>
            Manufacturer's model
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.MemorySize">
            <summary>
            The amount of memory the machine has. In bytes.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.TimeZone">
            <summary>
            The TimeZone the machine resides in
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.CollectMachineInformation">
            <summary>
            If true -&gt; BuildTracker will periodically collect information about this machine
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.EnableRemoteExecution">
            <summary>
            Indicates this machine can be used for remote execution
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.EnableSdkProxy">
            <summary>
            Indicates this machine can be used as an SDK Proxy
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.ComputedPerformanceWeight">
            <summary>
            Performance weight as computed by BuildTracker's algorithm. This is based on the number of cores and their speed.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.PerformanceWeightOverride">
            <summary>
            Allows overriding the performance weight with a custom value. Setting this property disregards the computed performance weight.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.Notes">
            <summary>
            Admin notes about the machine
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.Deleted">
            <summary>
            Indicates if the machine is currently marked as deleted.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Machine.WcfMachine">
            <summary>
            Shortcut to get to the WCF IMachine
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.MachineGroup">
            <summary>
            Contains metadata about the group + a list of machines that belong to it.
            Machine groups are used when defining affinities.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService)">
            <summary>
            Private Constructor
            </summary>
            <param name="buildTracker">Object of BuildTrackerService</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.String)">
            <summary>
            Instantiates a MachineGroup object by looking it up by name
            </summary>
            <param name="name"></param>
            <param name="buildTracker"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Int32)">
            <summary>
            Instantiates a MachineGroup object by looking it up by ID
            </summary>
            <param name="id"></param>
            <param name="buildTracker"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.MachineGroupData)">
            <summary>
            Creates an instance initializing its data to the one passed in
            </summary>
            <param name="buildTracker"></param>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.Add(Microsoft.BuildTracker.Client.Machine)">
            <summary>
            Adds a machine to this machine group
            </summary>
            <param name="machine">The machine to add</param>
            <remarks>It's just the ID that's needed in this case.</remarks>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.Remove(Microsoft.BuildTracker.Client.Machine)">
            <summary>
            Removes a machine from this group.
            </summary>
            <param name="machine">A machine to be removed from this group.</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.Save">
            <summary>
            Persists the changes in this class to the backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.Refresh">
            <summary>
            Gets the latest data for this class from the backend.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.Delete">
            <summary>
            Deletes this MachineGroup
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.MachineGroup.GetHashCode">
            <summary>
            Gets a hashcode value
            </summary>
            <returns>a hashcode</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.MachineGroup.BuildTrackerService">
            <summary>
            The parent BuildTrackerService this MachineGroup belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.MachineGroup.Data">
            <summary>
            Data of MachineGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.MachineGroup.Machines">
            <summary>
            IDs of the machines that belong to this group.
            Modify this collection on the client and then call MachineGroup.Save() to persist changes.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.MachineGroup.Name">
            <summary>
            Name of this machine group
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.MachineGroup.Id">
            <summary>
            ID of MachineGroup
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.MachineGroup.Description">
            <summary>
            Machine's description
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.MachineGroup.Owners">
            <summary>
            A list of owners who can manage this machine group
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.MachineGroup.WcfMachineGroup">
            <summary>
            Shortcut to get to the WCF IMachineGroup
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.ParameterBase">
            <summary>
            Abstract base class for parameter types.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterBase.#ctor(System.String,Microsoft.BuildTracker.Contracts.ParameterType,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">name of the parameter</param>
            <param name="type">type of the parameter</param>
            <param name="description">descirption of parameter</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterBase.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">Parameter object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if this Parameter is equal to the one passed in, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterBase.GetHashCode">
            <summary>
            Hash function for the ParameterBase class
            </summary>
            <returns>A hash code for the current ParameterBase object</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ParameterBase.Name">
            <summary>
            The name of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ParameterBase.Description">
            <summary>
            Parameter's description.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ParameterBase.Values">
            <summary>
            Parameter values, 
            For single value parameter like string, number etc., It would be only one value and same would be default or selected
            For multivalue parameters like DropDown, RadioButton, it would be multiple value and one value would be default or selected
            For CheckBox type of parameters it would be multiple values and more than one could be default or selected
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ParameterBase.ParameterType">
            <summary>
            Type of parameter 
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.Parameter">
            <summary>
            Parameters for jobs
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Parameter.#ctor(System.String,Microsoft.BuildTracker.Contracts.ParameterType,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">name of the parameter</param>
            <param name="type">type of the parameter</param>
            <param name="description">descirption of parameter</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Parameter.#ctor(System.String,Microsoft.BuildTracker.Contracts.ParameterType,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="name">name of the parameter</param>
            <param name="type">type of the parameter</param>
            <param name="description">descirption of parameter</param>
            <param name="value">values of parameter</param>
            <param name="required">parameter required or not</param>
            <param name="readOnly">parameter readonly or not</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Parameter.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">Parameter object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if this Parameter is equal to the one passed in, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Parameter.GetHashCode">
            <summary>
            Hash function for the Parameter class
            </summary>
            <returns>A hash code for the current Parameter object</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Parameter.Required">
            <summary>
            Is this parameter required?
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Parameter.ReadOnly">
            <summary>
            Is this parameter readonly?
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.BuildDropParameter">
            <summary>
            BuildDropParameters can be defined on Products, Branches, and BuildShareGroups.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDropParameter.#ctor(System.String,Microsoft.BuildTracker.Contracts.ParameterType,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">name of the BuildDropParameter</param>
            <param name="type">type of the BuildDropParameter</param>
            <param name="description">descirption of BuildDropParameter</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDropParameter.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">Parameter object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if this Parameter is equal to the one passed in, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.BuildDropParameter.GetHashCode">
            <summary>
            Hash function for the BuildDropParameter class
            </summary>
            <returns>A hash code for the current BuildDropParameter object</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.BuildDropParameter.Inherited">
            <summary>
            Indicates if this parameter definition is inherited from a parent object
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.ParameterValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterValue.#ctor(System.String)">
            <summary>
            Constructor to set single value liket string, number, link etc.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterValue.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor to set multiple selection values like DropDwonList, CheckBoxes etc.
            </summary>
            <param name="value"></param>
            <param name="isDefault"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterValue.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">ParameterValue object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if this ParameterValue is equal to the one passed in, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ParameterValue.GetHashCode">
            <summary>
            Hash function for the ParameterValue class
            </summary>
            <returns>A hash code for the current ParameterValue object</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ParameterValue.Value">
            <summary>
            The value of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ParameterValue.IsDefault">
            <summary>
            Is it a default value?
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.Product">
            <summary>
            Represents a BuildTracker Product.
            Products are created by BuildTracker administrators and 
            managed by Product Owners.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService)">
            <summary>
            Private Constructor
            </summary>
            <param name="buildTracker">Object of BuildTrackerService</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.String)">
            <summary>
            Instantiates a product object by looking it up by name
            </summary>
            <param name="name"></param>
            <param name="buildTracker"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Int32)">
            <summary>
            Instantiates a product object by looking it up by ID
            </summary>
            <param name="id"></param>
            <param name="buildTracker"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.ProductData)">
            <summary>
            Creates an instance initializing its data to the one passed in
            </summary>
            <param name="buildTracker"></param>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.Refresh">
            <summary>
            Refreshes fields
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.GetBuildShareGroups">
            <summary>
            Returns collection of associated BuildShareGroups
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.GetBuildShareGroup(System.String)">
            <summary>
            Gets a BuildShareGroup by name
            </summary>
            <param name="buildShareGroupName">The name of the BuildShareGroup to lookup</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.Save">
            <summary>
            Saves field changes back to the BuildTracker service
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.Delete">
            <summary>
            Deletes this product
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.GetBranches">
            <summary>
            Gets all branches of this product
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.CreateBranch(System.String)">
            <summary>
            Creates a new branch
            </summary>
            <param name="branchName">The name of the newly created branch.</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.Register">
            <summary>
            Registers this product as one of my products
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.Unregister">
            <summary>
            Unregisters this product from my products
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.GetBranch(System.String)">
            <summary>
            Gets a branch by name
            </summary>
            <param name="branchName">The name of the branch to lookup</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.QueryJobInstances(System.String,Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses)">
            <summary>
            Simplified Job Instance querying using requestedBy and status only.
            Gets all job instances under this product, for the given requester id and with the given statuses.
            </summary>
            <param name="requestedBy">name of the users who created the jobs</param>
            <param name="jobInstanceQueryStatuses">status of the included job instances</param>
            <returns>Collection of JobInstances with the matching status</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.CreateBuildShareGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Creates BuildShareGroup with default systemwide retention job definition
            </summary>
            <param name="buildShareGroupName">name of the build share group</param>
            <param name="buildShareGroupType">Type of BuildShare, e.g. Official, Buddy etc.</param>
            <param name="dropSharePath">path for drop folder, location where drop folder should be created </param>
            <param name="sourceSharePath">path for source folder, location where source folder should be created </param>
            <returns>object of BuildShareGroup which was created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.CreateBuildShareGroup(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates BuildShareGroup with specific systemwide retention job definition
            </summary>
            <param name="buildShareGroupName">name of the build share group</param>
            <param name="buildShareGroupType">Type of BuildShare, e.g. Official, Buddy etc.</param>
            <param name="dropSharePath">path for drop folder, location where drop folder should be created </param>
            <param name="sourceSharePath">path for source folder, location where source folder should be created </param>
            <param name="retentionJobDefinitionId">Id of the systemwide retention job definition, which will be associated with BuildShareGroup</param>
            <returns>object of BuildShareGroup which was created by this method</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.GetJobSchedules">
            <summary>
            Gets all of the JobSchedules for this Product
            </summary>
            <returns>A collection of JobSchedule objects</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.SetRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Applies the credentials for the given RunAs account to this product
            </summary>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A Product object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Product.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.BuildTrackerService">
            <summary>
            The parent BuildTrackerService this Product belongs to
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.Name">
            <summary>
            Name of the Product
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.Id">
            <summary>
            BuildTracker Id value of the Product
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.CreateTime">
            <summary>
            DateTime when the product was created
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.RunAsAlias">
            <summary>
            Name (domain\username) for the RunAs user
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.EffectiveRunAsAlias">
            <summary>
            Account that will be inherited if the RunAsCredentials are not set on this product.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.Owners">
            <summary>
            Collection of aliases that are owners of this product
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.Data">
            <summary>
            Data of product
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.EnlistmentSettings">
            <summary>
            Enlistment configuration settings
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.BuildDropParameters">
            <summary>
            Collection of BuildDropParameters for this product
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Product.Wcf">
            <summary>
            Shortcut to get to the WCF
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.ProductCollection">
            <summary>
            A collection of products
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ProductCollection.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,System.Collections.ObjectModel.Collection{Microsoft.BuildTracker.Contracts.ProductData})">
            <summary>
            Creates a ProductCollection from a list of ProductData (from WCF)
            </summary>
            <param name="productDataList"></param>
            <param name="parent"></param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.RetentionJobDefinition">
            <summary>
            RetentionJobDefinition defines a retention job
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionJobDefinition.QueryJobInstances(System.String,Microsoft.BuildTracker.Contracts.JobInstanceQueryStatuses)">
            <summary>
            Simplified Job Instance querying using requestedBy and status only.
            Gets all job instances under this JobDefinition, for the given requester id and with the given statuses.
            </summary>
            <param name="requestedBy">name of the users who created the jobs</param>
            <param name="jobInstanceQueryStatuses">status of the included job instances</param>
            <returns>Collection of RetentionJobInstanceCollection with the matching status</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionJobDefinition.SetRunAsCredentials(System.String,System.Security.SecureString)">
            <summary>
            Applies the credentials for the given RunAs account to this RetentionJobDefinition
            </summary>
            <param name="userName">Username of the account</param>
            <param name="password">Password of the account</param>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.RemoteLegDefinition">
            <summary>
            A remote leg definition
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RemoteLegDefinition.Refresh">
            <summary>
            Refreshes the fields from the backend BT.
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RemoteLegDefinition.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">RemoteLegDefinition to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RemoteLegDefinition.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.RemoteLegDefinition.RemoteFolderParameter">
            <summary>
            Remote Folder Parameter.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.SyncLegDefinition">
            <summary>
            Definition of the SyncLeg
            SyncLeg is the one which synchronizes sync time across all other legs
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SyncLegDefinition.Equals(System.Object)">
            <summary>
            Override of object.Equals method
            </summary>
            <param name="obj">RemoteLegDefinition to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if all of the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.SyncLegDefinition.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.Remark">
            <summary>
            Represents a BuildTracker remark.
            Remarks are typically attached to a few objects like JobInstance, LegInstance, JobSchedule, Enlistment
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Remark.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A Remark object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.Remark.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Remark.Count">
            <summary>
            The count of how many times this exact remark was written.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Remark.LastOccurrence">
            <summary>
            The last time this remark was written.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Remark.FirstOccurrence">
            <summary>
            The first tiem this remark was written.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Remark.RemarkType">
            <summary>
            The type of the remark.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Remark.Text">
            <summary>
            Remark's message/text.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.Remark.User">
            <summary>
            The user on whose behalf the remark was written.
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.RetentionPolicy">
            <summary>
            Defines a condition upon which a retention job gets queued up
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionPolicy.#ctor(Microsoft.BuildTracker.Client.BuildTrackerService,Microsoft.BuildTracker.Contracts.RetentionPolicyData)">
            <summary>
            Contructor to convert RetentionPolicyData to RetentionPolicy
            </summary>
            <param name="buildTrackerService">Object of BuildTrackerService</param>
            <param name="retentionPolicyData">object of retentionPolicyData</param>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionPolicy.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A RetentionPolicy object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.RetentionPolicy.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.RetentionPolicy.Condition">
            <summary>
            Condition for the execution of this policy 
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.RetentionPolicy.Quantity">
            <summary>
            Passed value will be associated with selected Condition, Works with condition only.
            Value in this property will be replaced with variable in Condition property
            </summary>
        </member>
        <member name="T:Microsoft.BuildTracker.Client.ServiceInterval">
            <summary>
            This class can help you determine whether the services in your lab are functioning normally. 
            Each listed task repeats at the specified interval. 
            </summary>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ServiceInterval.Equals(System.Object)">
            <summary>
            Override Object.Equals method
            </summary>
            <param name="obj">A ServiceInterval object to compare to</param>
            <remarks>
            This method only performs a shallow comparison of objects, there is no recursive
            comparison of sub-objects.  Only the public properties of this class are used to determine equality.
            </remarks>
            <returns>true if the fields match</returns>
        </member>
        <member name="M:Microsoft.BuildTracker.Client.ServiceInterval.GetHashCode">
            <summary>
            Get a hashcode
            </summary>
            <returns>A hashcode value</returns>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ServiceInterval.BuildTrackerService">
            <summary>
            BT service object this configuration belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ServiceInterval.AffectedService">
            <summary>
            Name of the BuildTracker service that controls this service interval
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ServiceInterval.Description">
            <summary>
            Description of the task that is performed by the service
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ServiceInterval.LastExecution">
            <summary>
            Time of the last execution of the service's task
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ServiceInterval.Name">
            <summary>
            Name of the Task
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ServiceInterval.Overdue">
            <summary>
            Indicates that a task is not being executed at the given interval. 
            Overdue is set to true when the timespan between now and LastAccess is four times longer than 
            Value and is at least 10 minutes.
            </summary>
        </member>
        <member name="P:Microsoft.BuildTracker.Client.ServiceInterval.Value">
            <summary>
            The length of the interval (in seconds) between executions of the task.
            </summary>
        </member>
    </members>
</doc>
